{"version":3,"sources":["api/index.tsx","actions/authentificationAction.ts","actions/snackbarActions.ts","actions/productsAction.ts","components/Navigation/AccountButton.tsx","components/NotFountComponent.tsx","components/Home/index.tsx","components/Navigation/Logo.tsx","components/Navigation/NavMenu.tsx","components/Navigation/DrowerMenuButton.tsx","components/Navigation/DrowerMenu.tsx","components/Navigation/Spacer.tsx","components/Navigation/index.tsx","components/Admin/AddProduct/Form.tsx","components/AlertDialog.tsx","components/Admin/AddProduct/index.tsx","components/Admin/UpdateProduct/Form.tsx","components/Admin/UpdateProduct/index.tsx","components/User/Account/index.tsx","components/User/GoogleIcon.tsx","components/User/Login/Form.tsx","components/User/Login/index.tsx","components/User/Register/Form.tsx","components/User/Register/index.tsx","components/Alert.tsx","components/Main.tsx","App.tsx","reportWebVitals.ts","reducer/index.ts","reducer/authentificationReducer.ts","reducer/productsReducer.ts","reducer/snackbarReducers.ts","store/index.ts","index.tsx","constants/productActionTypes.ts","constants/snackbarConstants.ts","constants/userActionTypes.ts","constants/AlertMessages.ts","constants/FieldSelectors.ts","constants/AuthFields.ts","constants/StringFormats.ts","constants/index.ts","components/ProductCard.tsx"],"names":["API","axios","create","baseURL","interceptors","request","use","req","localStorage","getItem","headers","Authorization","JSON","parse","token","ErrorMessages","Hints","fetchProducts","get","patchProduct","id","updatedProduct","patch","deleteProduct","delete","login","credientials","post","register","snackbarActionManager","show","snackInfo","type","snackbarActionTypes","SHOW","payload","hide","HIDE","successCallback","failCallback","dispatch","a","data","status","user","result","userActionTypes","LOGIN","SnackBarVariants","success","firstName","lastName","fail","message","variant","unknown","logout","console","log","LOGOUT","authentificationAction","relog","RELOG","googleLogin","hint","no_user","wrong_password","Error","productActionsTypes","GET_PRODUCST","products","loaded","PRODUCTS_LOADED","dump","DUMP_PRODUCTS","productsActions","product","newProduct","warning","ADD_PRODUCT","AddProductMessages","conflict","multipost","newProducts","ADD_MULTIPLE_PRODUCTS","update","UPDATE_PRODUCT","DELETE_PRODUCT","load","OptionsNames","OptionsLinks","NotFountComponent","props","showNav","useEffect","Item","React","lazy","useStyles","makeStyles","root","paddingTop","item","textAlign","loading","height","icon","fontSize","opacity","Home","classes","useDispatch","areProductsLoaded","useSelector","state","productsAreLoaded","items","map","_id","name","price","description","details","sale","stock","src","active","fallback","CircularProgress","length","Grid","className","container","spacing","justify","alignContent","alignItems","xs","md","theme","color","Link","textDecoration","avatar","width","LongMenu","profile","history","useHistory","options","accout","home","signup","useState","anchorEl","setAnchorEl","open","Boolean","handleAccountMenuClick","event","handleAccountClose","menuItemClick","target","innerText","push","StyledMenu","withStyles","paper","border","Menu","elevation","getContentAnchorEl","anchorOrigin","vertical","horizontal","transformOrigin","IconButton","aria-label","aria-controls","aria-haspopup","onClick","currentTarget","Avatar","keepMounted","onClose","PaperProps","style","maxHeight","ITEM_HEIGHT","option","MenuItem","value","selected","title","display","breakpoints","up","minWidth","marginRight","Logo","Typography","List","padding","navLink","borderBottom","cursor","userSelect","position","top","NavMenu","to","admin","menuButton","DrowerMenuButton","drowerOpen","edge","clsx","drawerWidth","appBar","transition","transitions","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","easeOut","enteringScreen","drawer","flexShrink","drawerPaper","drawerHeader","mixins","toolbar","justifyContent","content","flexGrow","contentShift","DrowerMenu","useTheme","closeMenu","Drawer","anchor","direction","Divider","text","path","ListItem","button","ListItemText","primary","grow","Spacer","relative","minHeight","growMobile","sectionDesktop","sectionMobile","invisible","GoldAppBar","backgroundColor","boxShadow","AppBar","ButtonAppBar","location","useLocation","isVisible","setOpen","decode","exp","Date","getTime","Toolbar","textFieldWrapper","textField","margin","buttonWrapper","alertField","activeButton","Form","promotion","pieces","change","clear","send","fieldWarnings","openDialog","checkFields","removeImage","TextField","label","onChange","ev","FieldSelector","InputLabelProps","shrink","onFocus","select","prom","desc","rows","multiline","Button","component","accept","hidden","disabled","startIcon","NoSrcAlert","AlertDialog","yes","no","handleClose","Dialog","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogContentText","DialogActions","autoFocus","ProductAdder","cardName","setCardName","cardDescription","setCardDescription","cardDetails","setCardDetails","cardPromotion","setCardPromotion","cardPrice","setCardPrice","cardPieces","setCardPieces","cardSrc","setCardSrc","fakeSrc","setFakeSrc","setFieldWarnings","openAlert","setOpenAlert","titleAlert","setTitleAlert","contentAlert","setContentAlert","handleSubmit","preventDefault","form","FormData","Object","keys","key","append","piecesLeft","identifier","parseInt","file","reader","FileReader","readAsDataURL","onload","base64","toString","setImage","files","tempWarnings","reset","marginTop","UpdateProduct","match","filter","params","setProduct","getProduct","getFormData","trim","stringify","info","AccountInfoComponent","viewBox","fill","d","flexDirection","palette","secondary","main","submit","googleButton","borderColor","From","email","setEmail","password","setPassword","rememberMe","setRememberMe","warnings","setWarnings","googleSuccess","res","profileObj","tokenId","setItem","googleId","givenName","familyName","imageUrl","successLogin","failedLogin","LOGIN_EMAIL","LOGIN_PASSWORD","LOGIN_REMEMBER","required","fullWidth","autoComplete","FormControlLabel","control","Checkbox","checked","MAIL_FORMAT","test","clientId","render","renderProps","onSuccess","onFailure","error","cookiePolicy","SignIn","goBack","Container","maxWidth","CssBaseline","setFirstName","setLastName","rePassword","setRePassword","REGISTER_FIRST_NAME","REGISTER_LAST_NAME","REGISTER_EMAIL","REGISTER_PASSWORD","REGISTER_RE_PASSWORD","registerSuccess","registerFail","resetStyle","sm","RegisterComponent","Alert","Main","snackbar","handleSnackbarClose","reason","navVisibility","setNavVisibility","restrictAdminPages","AddProduct","lg","exact","AccountInfo","Login","Register","Snackbar","autoHideDuration","severity","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","reducer","combineReducers","action","removeItem","store","createStore","compose","applyMiddleware","thunk","window","__REDUX_DEVTOOLS_EXTENSION__","f","ReactDOM","StrictMode","document","getElementById","LoginMessages","media","expand","transform","shortest","expandOpen","red","overflow","ProductCard","expanded","setExpanded","subheader","children","image","disableSpacing","aria-expanded","in","timeout","unmountOnExit","gutterBottom"],"mappings":"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","file":"static/js/main.33146596.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\ninterface Product {\r\n    name: string;\r\n    price: number;\r\n    description?: string;\r\n    details?: string;\r\n    sale?: number;\r\n    stock?: number;\r\n    src: string;\r\n}\r\n\r\n\r\n// 'http://localhost:5000'; = proxy url\r\n\r\n\r\nconst API = axios.create({ baseURL: 'http://localhost:5000' });\r\n\r\nAPI.interceptors.request.use((req) => {\r\n    if (localStorage.getItem('profile')) {\r\n        req.headers.Authorization = `Bearer ${JSON.parse(localStorage.getItem('profile')).token}`;\r\n    }\r\n\r\n    return req;\r\n});\r\n\r\n\r\n//get products\r\n// export const fetchProducts = () => axios.get( '/products' );\r\nexport const fetchProducts = () => API.get('/products');\r\n\r\n//get specific product\r\nexport const fetchSpecificProduct = (id: string) => API.get(`/products/${id}`);\r\n\r\n//send new product\r\nexport const postProduct = (newProduct: FormData) => API.post(`/products/add-product`, newProduct);\r\n\r\n//send new products\r\nexport const postProducts = (newProducts: Array<FormData>) => API.post(`/products/add-products`, newProducts);\r\n\r\n//updete product\r\nexport const patchProduct = (id: string, updatedProduct: any) => API.patch(`/products/${id}`, updatedProduct);\r\n\r\n//delete product\r\nexport const deleteProduct = (id: string) => API.delete(`/products/${id}`);\r\n\r\n//login user\r\nexport const login = (credientials: FormData) => API.post('/user/login', credientials);\r\n\r\n//register user\r\nexport const register = (credientials: FormData) => API.post('/user/register', credientials);\r\n\r\n","import * as API from '../api';\r\nimport { snackbarActionManager } from './snackbarActions';\r\nimport { userActionTypes, SnackBarVariants, snackbarActionTypes } from '../constants';\r\n\r\n\r\nenum ErrorMessages\r\n{\r\n    duplicate = 'User already exists.',\r\n    unknown = 'Something went wrong. Contact us to investigate.',\r\n    invalid_credientials = 'Invalid credientials'\r\n}\r\n\r\nenum Hints\r\n{\r\n    no_user = 'User not found',\r\n    wrong_password = 'Invalid password',\r\n}\r\n\r\ninterface User\r\n{\r\n    email: string;\r\n    firstName: string;\r\n    lastName: string;\r\n    cart: Array<any>;\r\n    favorites: Array<any>;\r\n    passowrd: string;\r\n    icon: string;\r\n    isVerified: boolean;\r\n    admin?: boolean;\r\n}\r\n\r\n\r\n/** \r\n *  @param credientials the form data sent to the server\r\n *  @param successCallback callback function that you should call if the request is considered a success one.\r\n *  @param failCallback callback function that you should call if the request is considered an unsuccessful one\r\n*/\r\n\r\n\r\n\r\nconst login = (\r\n    credientials: FormData,\r\n    successCallback?: ( variant: SnackBarVariants, message: string ) => void,\r\n    failCallback?: ( variant: SnackBarVariants, message: string ) => void ) => async ( dispatch: any ) =>\r\n    {\r\n        try\r\n        {\r\n            const { data } = await API.login( credientials );\r\n            if ( data.status === 'success' )\r\n            {\r\n                const user = data.result;\r\n                dispatch( { type: userActionTypes.LOGIN, payload: { result: user, token: data.token } } );\r\n                if ( successCallback )\r\n                {\r\n                    successCallback( SnackBarVariants.success, `Welcome ${ user.firstName } ${ user.lastName }` );\r\n                }\r\n\r\n            }\r\n            else\r\n            {\r\n                if ( failCallback )\r\n                {\r\n                    failCallback( SnackBarVariants.fail, data.message );\r\n                }\r\n            }\r\n\r\n        } catch ( error )\r\n        {\r\n            dispatch( snackbarActionManager.show( {\r\n                variant: SnackBarVariants.fail,\r\n                message: ErrorMessages.unknown\r\n            } ) );\r\n            console.log( error );\r\n        }\r\n    };\r\n\r\n\r\nconst googleLogin = (\r\n    credientials: FormData,\r\n    successCallback?: ( variant: SnackBarVariants, message: string ) => void,\r\n    failCallback?: ( variant: SnackBarVariants, message: string ) => void\r\n) => async ( dispatch: any ) =>\r\n    {\r\n        try\r\n        {\r\n            const { data } = await API.login( credientials );\r\n            console.log( data );\r\n            if ( data.status === 'success' )\r\n            {\r\n                const user = data.result;\r\n                dispatch( { type: userActionTypes.LOGIN, payload: { result: user, token: data.token } } );\r\n                if ( successCallback )\r\n                {\r\n                    successCallback( SnackBarVariants.success, `Welcome ${ user.firstName } ${ user.lastName }` );\r\n                }\r\n\r\n            }\r\n            else\r\n            {\r\n                if ( data.hint === Hints.no_user )\r\n                {\r\n                    dispatch( register( credientials, successCallback, failCallback ) );\r\n                } else if ( data.status === Hints.wrong_password )\r\n                {\r\n                    throw new Error( 'Google auth error!' );\r\n                } else if ( failCallback )\r\n                {\r\n                    failCallback( SnackBarVariants.fail, data.message );\r\n                }\r\n            }\r\n\r\n        } catch ( error )\r\n        {\r\n            // dispatch( register( credientials, successCallback, failCallback ) );\r\n            dispatch( snackbarActionManager.show( {\r\n                variant: SnackBarVariants.fail,\r\n                message: ErrorMessages.unknown\r\n            } ) );\r\n            dispatch( logout() );\r\n            console.log( error );\r\n        }\r\n    };\r\n\r\nconst register = (\r\n    credientials: FormData,\r\n    successCallback?: ( variant: SnackBarVariants, message: string ) => void,\r\n    failCallback?: ( variant: SnackBarVariants, message: string ) => void ) => async ( dispatch: any ) =>\r\n    {\r\n        try\r\n        {\r\n            const { data } = await API.register( credientials );\r\n            if ( data.status === 'success' )\r\n            {\r\n                const user = data.result;\r\n                dispatch( { type: userActionTypes.LOGIN, payload: { result: user, token: data.token } } );\r\n                if ( successCallback )\r\n                {\r\n                    successCallback( SnackBarVariants.success, `Welcome ${ user.firstName } ${ user.lastName }` );\r\n                }\r\n            } else\r\n            {\r\n                if ( failCallback )\r\n                {\r\n                    failCallback( SnackBarVariants.fail, data.message );\r\n                }\r\n\r\n            }\r\n\r\n        } catch ( error )\r\n        {\r\n            dispatch( snackbarActionManager.show( {\r\n                variant: SnackBarVariants.fail,\r\n                message: ErrorMessages.unknown\r\n            } ) );\r\n            dispatch( logout() );\r\n            console.log( error );\r\n        }\r\n    };\r\n\r\nconst logout = () =>\r\n{\r\n    return {\r\n        type: userActionTypes.LOGOUT,\r\n    };\r\n};\r\n\r\nconst relog = ( user: User ) =>\r\n{\r\n    return {\r\n        type: userActionTypes.RELOG,\r\n        payload: user\r\n    };\r\n};\r\n\r\n\r\nconst authentificationAction = { login, logout, register, relog, googleLogin };\r\n\r\nexport { authentificationAction };","import { snackbarActionTypes, SnackBarVariants } from '../constants';\r\n\r\ninterface SnackInfo\r\n{\r\n    message: string,\r\n    variant: SnackBarVariants;\r\n}\r\n\r\nconst showSnackbar = ( snackInfo: SnackInfo ) =>\r\n{\r\n    return {\r\n        type: snackbarActionTypes.SHOW,\r\n        payload: snackInfo\r\n    };\r\n};\r\n\r\nconst hideSnackbar = () =>\r\n{\r\n    return {\r\n        type: snackbarActionTypes.HIDE,\r\n    };\r\n};\r\n\r\n\r\n\r\nconst snackbarActionManager = {\r\n    show: showSnackbar,\r\n    hide: hideSnackbar,\r\n};\r\n\r\nexport { snackbarActionManager };","import * as API from '../api';\r\nimport { snackbarActionManager } from './snackbarActions';\r\nimport { AddProductMessages, SnackBarVariants, snackbarActionTypes } from '../constants';\r\nimport { productActionsTypes } from '../constants';\r\n\r\ninterface Action\r\n{\r\n    type: string;\r\n    payload: [];\r\n}\r\n\r\ninterface Product\r\n{\r\n    name: string;\r\n    price: number;\r\n    description?: string;\r\n    details?: string;\r\n    sale?: number;\r\n    stock?: number;\r\n    src: string;\r\n}\r\n\r\n\r\n\r\n//get request of products state\r\nconst fetchProducts = () => async ( dispatch: any ) =>\r\n{\r\n    try\r\n    {\r\n        const { data } = await API.fetchProducts();\r\n        dispatch( { type: productActionsTypes.GET_PRODUCST, payload: data.products } );\r\n        dispatch( loaded() );\r\n    } catch ( error )\r\n    {\r\n        dispatch( { type: productActionsTypes.GET_PRODUCST, payload: [] } );\r\n        //signal that all products are loaded and no refresh is needed so that it shows the no items\r\n        dispatch( loaded() );\r\n        dispatch( snackbarActionManager.hide() );\r\n        dispatch( snackbarActionManager.show( {\r\n            message: \"Connection failed\", variant: SnackBarVariants.fail\r\n        } ) );\r\n        console.log( error );\r\n    }\r\n\r\n\r\n};\r\n\r\n// same as fetchProducts without UI interaction\r\n// used as a autorefresh when you have no signal\r\n// ? THINK ABOUT USING IT AS A AUTORELOAD ENGINE\r\nconst bluntFetchProducts = () => async ( dispatch: any ) =>\r\n{\r\n    const { data } = await API.fetchProducts();\r\n    dispatch( { type: productActionsTypes.GET_PRODUCST, payload: data.products } );\r\n    dispatch( loaded() );\r\n};\r\n\r\n\r\n//single item post request for product items\r\nconst postProduct = ( product: FormData ) => async ( dispatch: any ) =>\r\n{\r\n    try\r\n    {\r\n        const { data } = await API.postProduct( product );\r\n\r\n        if ( data.status === \"success\" )\r\n        {\r\n            dispatch( snackbarActionManager.hide() );\r\n            dispatch( snackbarActionManager.show( { message: data.message, variant: SnackBarVariants.success } ) );\r\n        }\r\n        else\r\n        {\r\n            dispatch( snackbarActionManager.hide() );\r\n            dispatch( snackbarActionManager.show( { message: data.message, variant: SnackBarVariants.warning } ) );\r\n        }\r\n\r\n        //signal the app that not all products are loaded\r\n        dispatch( dump() );\r\n        dispatch( { type: productActionsTypes.ADD_PRODUCT, payload: data.product } );\r\n        //refresh all products\r\n        dispatch( fetchProducts() );\r\n    } catch ( error )\r\n    {\r\n        if ( error.message === 'Request failed with status code 409' )\r\n        {\r\n            dispatch( snackbarActionManager.show( { message: AddProductMessages.conflict, variant: SnackBarVariants.fail } ) );\r\n        } else\r\n        {\r\n            dispatch( snackbarActionManager.show( { message: AddProductMessages.fail, variant: SnackBarVariants.fail } ) );\r\n        }\r\n        console.log( error.message );\r\n    }\r\n};\r\n\r\n\r\n//multiple items post request for products state\r\nconst postProducts = ( products: Array<FormData> ) => async ( dispatch: any ) =>\r\n{\r\n    try\r\n    {\r\n        const { data } = await API.postProducts( products );\r\n        if ( data.status === \"success\" )\r\n        {\r\n            dispatch( snackbarActionManager.hide() );\r\n            dispatch( snackbarActionManager.show( { message: data.message, variant: SnackBarVariants.success } ) );\r\n\r\n        }\r\n        else\r\n        {\r\n            dispatch( snackbarActionManager.hide() );\r\n            dispatch( snackbarActionManager.show( { message: data.message, variant: SnackBarVariants.warning } ) );\r\n        }\r\n        //signal the app that not all products are loaded\r\n        dispatch( dump() );\r\n        dispatch( { type: productActionsTypes.ADD_MULTIPLE_PRODUCTS, payload: data } );\r\n        //refresh all products\r\n        dispatch( fetchProducts() );\r\n    } catch ( error )\r\n    {\r\n        if ( error.message === 'Request failed with status code 409' )\r\n        {\r\n            dispatch( snackbarActionManager.hide() );\r\n            dispatch( snackbarActionManager.show( { message: AddProductMessages.conflict, variant: SnackBarVariants.fail } ) );\r\n        } else\r\n        {\r\n            dispatch( snackbarActionManager.hide() );\r\n            dispatch( snackbarActionManager.show( { message: AddProductMessages.fail, variant: SnackBarVariants.fail } ) );\r\n        }\r\n        console.log( error.message );\r\n    }\r\n};\r\n\r\n\r\n//singe item update request for products state\r\nconst updateProduct = ( id: 'string', product: FormData ) => async ( dispatch: any ) =>\r\n{\r\n    try\r\n    {\r\n        const { data } = await API.patchProduct( id, product );\r\n        if ( data.status === \"success\" )\r\n        {\r\n            dispatch( snackbarActionManager.hide() );\r\n            dispatch( snackbarActionManager.show( { message: data.message, variant: SnackBarVariants.success } ) );\r\n\r\n        }\r\n        else\r\n        {\r\n            dispatch( snackbarActionManager.hide() );\r\n            dispatch( snackbarActionManager.show( { message: data.message, variant: SnackBarVariants.warning } ) );\r\n        }\r\n        dispatch( { type: productActionsTypes.UPDATE_PRODUCT, payload: data.product } );\r\n    } catch ( error )\r\n    {\r\n        dispatch( snackbarActionManager.hide() );\r\n        dispatch( snackbarActionManager.show( { message: AddProductMessages.fail, variant: SnackBarVariants.fail } ) );\r\n        console.log( error );\r\n    }\r\n    finally\r\n    {\r\n        dispatch( fetchProducts() );\r\n    }\r\n};\r\n\r\n// single item delete for products state\r\nconst deleteProduct = ( id: string ) => async ( dispatch: any ) =>\r\n{\r\n    try\r\n    {\r\n        const { data } = await API.deleteProduct( id );\r\n        if ( data.status === \"success\" )\r\n        {\r\n            dispatch( snackbarActionManager.hide() );\r\n            dispatch( snackbarActionManager.show( { message: data.message, variant: SnackBarVariants.success } ) );\r\n\r\n        }\r\n        else\r\n        {\r\n            dispatch( snackbarActionManager.hide() );\r\n            dispatch( snackbarActionManager.show( { message: data.message, variant: SnackBarVariants.warning } ) );\r\n        }\r\n        dispatch( { type: productActionsTypes.DELETE_PRODUCT, payload: id } );\r\n    } catch ( error )\r\n    {\r\n        console.log( error );\r\n    }\r\n};\r\n\r\n//productsAreLoaded -> true\r\nconst loaded = () =>\r\n{\r\n    return {\r\n        type: productActionsTypes.PRODUCTS_LOADED,\r\n    };\r\n};\r\n\r\n\r\n//productsAreLoaded -> false\r\nconst dump = () =>\r\n{\r\n    return {\r\n        type: productActionsTypes.DUMP_PRODUCTS,\r\n    };\r\n};\r\n\r\n//TODO make routes for multiple products adding, updateing and deleting\r\n\r\n\r\n/*\r\n@productsActions = object that contains all redux actions that interacts with products\r\nincluding API calls that return products objects\r\n*/\r\nconst productsActions = { get: fetchProducts, post: postProduct, multipost: postProducts, update: updateProduct, delete: deleteProduct, load: loaded, dump: dump };\r\n\r\nexport { productsActions };","import React from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\r\nimport { makeStyles, withStyles, Theme } from '@material-ui/core/styles';\r\nimport { authentificationAction } from '../../actions';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { Avatar } from '@material-ui/core';\r\n\r\ninterface StyleMenuProps\r\n{\r\n  id: string;\r\n  anchorEl: any;\r\n  keepMounted: any;\r\n  open: boolean;\r\n  onClose: () => void;\r\n  PaperProps: {};\r\n\r\n}\r\n\r\ntype OptionsInterface = [ string, string ][];\r\n\r\nenum OptionsNames\r\n{\r\n  login = \"Login\",\r\n  signup = \"Sign up\",\r\n  logout = \"Logout\",\r\n  accout = \"Account\"\r\n}\r\n\r\nenum OptionsLinks\r\n{\r\n  login = '/login',\r\n  signup = '/register',\r\n  home = '/',\r\n  accout = '/account',\r\n}\r\n\r\n\r\nconst useStyles = makeStyles( ( theme: Theme ) => ( {\r\n  icon: {\r\n    color: '#fafafa',\r\n  },\r\n  Link: {\r\n    textDecoration: 'none',\r\n    color: '#000',\r\n  },\r\n  avatar: {\r\n    width: theme.spacing( 3.5 ),\r\n    height: theme.spacing( 3.5 ),\r\n  }\r\n} ) );\r\n\r\n\r\n\r\nconst ITEM_HEIGHT = 48;\r\n\r\n\r\nconst LongMenu: React.FC = () =>\r\n{\r\n\r\n  //brute force login state\r\n  const profile = useSelector( ( state: any ) => state.profile );\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  //@account menu items\r\n  const options: OptionsInterface = profile ?\r\n    [ [ OptionsNames.accout, OptionsLinks.accout ], [ OptionsNames.logout, OptionsLinks.home ] ] :\r\n    [ [ OptionsNames.login, OptionsLinks.login ], [ OptionsNames.signup, OptionsLinks.signup ] ];\r\n\r\n  const [ anchorEl, setAnchorEl ] = React.useState( null );\r\n  const open = Boolean( anchorEl );\r\n\r\n  const classes = useStyles();\r\n\r\n  const handleAccoutClick = ( event: any ) =>\r\n  {\r\n    setAnchorEl( event.currentTarget );\r\n  };\r\n\r\n\r\n  const handleAccountMenuClick = ( event: any ) =>\r\n  {\r\n    handleAccountClose();\r\n    menuItemClick( event );\r\n  };\r\n\r\n  const menuItemClick = ( event: any ) =>\r\n  {\r\n    switch ( event.target.innerText )\r\n    {\r\n      case OptionsNames.login:\r\n        history.push( OptionsLinks.login );\r\n        break;\r\n      case OptionsNames.signup:\r\n        history.push( OptionsLinks.signup );\r\n        break;\r\n      case OptionsNames.logout:\r\n        dispatch( authentificationAction.logout() );\r\n        history.push( OptionsLinks.home );\r\n        break;\r\n      case OptionsNames.accout:\r\n        history.push( OptionsLinks.accout );\r\n        break;\r\n    }\r\n  };\r\n\r\n  const handleAccountClose = () =>\r\n  {\r\n    setAnchorEl( null );\r\n  };\r\n\r\n  const StyledMenu = withStyles( {\r\n    paper: {\r\n      border: '1px solid #d3d4d5',\r\n    },\r\n  } )( ( props: StyleMenuProps ) => (\r\n    <Menu\r\n      elevation={ 0 }\r\n      getContentAnchorEl={ null }\r\n      anchorOrigin={ {\r\n        vertical: 'bottom',\r\n        horizontal: 'center',\r\n      } }\r\n      transformOrigin={ {\r\n        vertical: 'top',\r\n        horizontal: 'center',\r\n      } }\r\n      open={ false }\r\n      { ...props }\r\n    />\r\n  ) );\r\n\r\n  return (\r\n    <div>\r\n      <IconButton\r\n        aria-label=\"more\"\r\n        aria-controls=\"long-menu\"\r\n        aria-haspopup=\"true\"\r\n        onClick={ handleAccoutClick }\r\n      >\r\n        { profile && profile.icon ? <Avatar className={ classes.avatar } src={ profile.icon } /> : <AccountCircleIcon className={ classes.icon } /> }\r\n      </IconButton>\r\n      <StyledMenu\r\n        id=\"long-menu\"\r\n        anchorEl={ anchorEl }\r\n        keepMounted\r\n        open={ open }\r\n        onClose={ handleAccountClose }\r\n        PaperProps={ {\r\n          style: {\r\n            maxHeight: ITEM_HEIGHT * 4.5,\r\n            width: '20ch',\r\n          },\r\n        } }\r\n      >\r\n        { options.map( ( option ) => (\r\n          <MenuItem value={ option[ 0 ] } selected={ option[ 0 ] === 'Pyxis' } onClick={ handleAccountMenuClick } key={ option[ 0 ] }>\r\n            { option[ 0 ] }\r\n          </MenuItem>\r\n        ) ) }\r\n      </StyledMenu>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LongMenu;","import React, { useEffect } from 'react';\r\n\r\ninterface Props\r\n{\r\n    showNav: ( is: boolean ) => void;\r\n}\r\n\r\n//@the component that renders when you access an invalid route\r\nconst NotFountComponent: React.FC<Props> = ( props: Props ) =>\r\n{\r\n    const { showNav } = props;\r\n\r\n    useEffect( () =>\r\n    {\r\n        showNav( false );\r\n        return () =>\r\n        {\r\n            showNav( true );\r\n        };\r\n    }, [] );\r\n    return (\r\n        <>\r\n            No page on this path!\r\n        </>\r\n    );\r\n};\r\n\r\nexport default NotFountComponent;\r\n","import React, { useEffect, Suspense } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Grid, CircularProgress } from '@material-ui/core';\r\nimport { productsActions } from '../../actions';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport SignalCellularNoSimOutlinedIcon from '@material-ui/icons/SignalCellularNoSimOutlined';\r\n\r\nconst Item = React.lazy( () => import( './Item' ) );\r\n\r\ninterface Product extends Document\r\n{\r\n    _id: string;\r\n    name: string,\r\n    price: number,\r\n    description?: string,\r\n    details?: string,\r\n    sale?: number,\r\n    stock: number,\r\n    src: string,\r\n}\r\n\r\nconst useStyles = makeStyles( () => ( {\r\n    root: {\r\n        paddingTop: '2rem',\r\n    },\r\n    item: {\r\n        textAlign: 'center'\r\n    },\r\n    loading: {\r\n        height: '90vh',\r\n    },\r\n    icon: {\r\n        fontSize: '25rem',\r\n        opacity: '.3',\r\n    }\r\n} ) );\r\n\r\n//@main overview component, the startpoint of the website\r\nconst Home = () =>\r\n{\r\n    const classes = useStyles();\r\n    const dispatch = useDispatch();\r\n    const areProductsLoaded = useSelector( ( state: any ) =>\r\n    {\r\n        return state.productsAreLoaded;\r\n    } );\r\n    const products = useSelector( ( state: any ) =>\r\n    {\r\n        return state.products;\r\n    } );\r\n\r\n\r\n    //@fetch products API call\r\n    useEffect( () =>\r\n    {\r\n        /*\r\n        @productsActions = object that contains all redux actions that interacts with products\r\n        including API calls that return products objects\r\n        */\r\n        if ( !areProductsLoaded )\r\n            dispatch( productsActions.get() );\r\n\r\n    }, [] );\r\n\r\n    console.log( products );\r\n\r\n    //@list of the products presented in main menu\r\n    const items = products.map( ( product: Product ) =>\r\n        <Item\r\n            _id={ product._id }\r\n            name={ product.name }\r\n            price={ product.price }\r\n            description={ product.description }\r\n            details={ product.details }\r\n            sale={ product.sale }\r\n            stock={ product.stock }\r\n            src={ product.src }\r\n            active={ true }\r\n            key={ product._id }\r\n        />\r\n    );\r\n\r\n    return (\r\n        <Suspense fallback={ <CircularProgress /> }>\r\n            {\r\n                !areProductsLoaded\r\n                    ?\r\n                    ( products.length\r\n                        ?\r\n                        <Grid className={ classes.root } container justify='center' alignItems='center' spacing={ 2 }>\r\n                            { items }\r\n                            {/* loading animation after last product in the list until the new array of products is loaded */ }\r\n                            <Grid item xs={ 12 } md={ 4 }>\r\n                                <CircularProgress />\r\n                            </Grid>\r\n                        </Grid>\r\n                        :\r\n                        // loading animation for all products\r\n                        <Grid className={ classes.loading } container justify='center' alignItems='center' spacing={ 2 }>\r\n                            <CircularProgress />\r\n                        </Grid> )\r\n                    :\r\n                    products.length\r\n                        ?\r\n                        //displaying all products with no loading involved\r\n                        ( <Grid className={ classes.root } container spacing={ 3 }>\r\n                            { items }\r\n                        </Grid> )\r\n                        :\r\n                        (\r\n                            //when the products array is empty(or maybe when you have a connection issue)\r\n                            <Grid className={ classes.loading } container justify='center' alignContent='center'>\r\n                                <SignalCellularNoSimOutlinedIcon className={ classes.icon } />\r\n                            </Grid>\r\n                        )\r\n            }\r\n        </Suspense>\r\n\r\n    );\r\n};\r\n\r\nexport default Home;\r\n","import React from 'react';\r\nimport { Typography } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles( ( theme ) => ( {\r\n    title: {\r\n        display: 'none',\r\n        [ theme.breakpoints.up( 'sm' ) ]: {\r\n            display: 'block',\r\n            minWidth: '180px',\r\n            marginRight: '30px',\r\n        },\r\n        userSelect: 'none',\r\n        fontWeight: 'bold'\r\n    },\r\n} ) );\r\n\r\ninterface Props\r\n{\r\n\r\n}\r\n\r\n//Just a display component\r\nconst Logo: React.FC<Props> = () =>\r\n{\r\n    const classes = useStyles();\r\n    return (\r\n        <Typography variant=\"h5\" className={ classes.title }>\r\n            Logo\r\n        </Typography>\r\n    );\r\n};\r\n\r\nexport default Logo;","import React from 'react';\r\nimport { Grid } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Link } from 'react-router-dom';\r\nimport HomeRoundedIcon from '@material-ui/icons/HomeRounded';\r\nimport QueueRoundedIcon from '@material-ui/icons/QueueRounded';\r\nimport { useSelector } from 'react-redux';\r\n\r\nconst useStyles = makeStyles( ( theme ) => ( {\r\n    List: {\r\n        padding: 0,\r\n        display: 'none',\r\n        [ theme.breakpoints.up( 'md' ) ]: {\r\n            display: 'flex',\r\n        },\r\n        listStyle: 'none',\r\n        margin: 0,\r\n    },\r\n    navLink: {\r\n        '&:hover': {\r\n            padding: '12px 12px 10px 12px',\r\n            borderBottom: '2px solid #262626',\r\n            cursor: 'pointer',\r\n        }\r\n    },\r\n    Link: {\r\n        color: '#fafafa',\r\n        textDecoration: 'none',\r\n        userSelect: 'none',\r\n        padding: '12px',\r\n        '&:hover': {\r\n            padding: '12px 12px 10px 12px',\r\n            borderBottom: '2px solid #fafafa',\r\n            cursor: 'pointer',\r\n        }\r\n    },\r\n\r\n    icon: {\r\n        position: 'relative',\r\n        top: '5px',\r\n    }\r\n} ) );\r\n\r\ninterface Props\r\n{\r\n\r\n}\r\n\r\n\r\n//@routing menu component: here you find all the link in the nav menu\r\nconst NavMenu: React.FC<Props> = () =>\r\n{\r\n    const profile = useSelector( ( state: any ) => state.profile );\r\n    const classes = useStyles();\r\n    return (\r\n        <Grid container>\r\n            <ul className={ classes.List }>\r\n                <Link className={ classes.Link } to='/'>\r\n                    <li><span><HomeRoundedIcon className={ classes.icon } /></span> Home</li>\r\n                </Link>\r\n                {\r\n                    /**\r\n                     * @param profile the user logged in or null\r\n                     */\r\n                    profile && profile.admin ?\r\n                        <Link className={ classes.Link } to='/admin/add-product'>\r\n                            <li><span><QueueRoundedIcon className={ classes.icon } /></span> Add Product</li>\r\n                        </Link> : null\r\n                }\r\n\r\n            </ul >\r\n        </Grid>\r\n    );\r\n};\r\n\r\nexport default NavMenu;","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\n\r\n\r\nconst useStyles = makeStyles( ( theme ) => ( {\r\n    menuButton: {\r\n        marginRight: theme.spacing( 2 ),\r\n        display: 'block',\r\n        [ theme.breakpoints.up( 'md' ) ]: {\r\n            display: 'none'\r\n        }\r\n    },\r\n    hide: {\r\n        display: 'none',\r\n    },\r\n\r\n} ) );\r\n\r\ninterface Props\r\n{\r\n    drowerOpen: () => void;\r\n    open: boolean;\r\n}\r\n\r\nconst DrowerMenuButton: React.FC<Props> = ( props: Props ) =>\r\n{\r\n    const classes = useStyles();\r\n    return (\r\n        <IconButton\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            onClick={ props.drowerOpen }\r\n            edge=\"start\"\r\n            className={ clsx( classes.menuButton, props.open && classes.hide ) }\r\n        >\r\n            <MenuIcon />\r\n        </IconButton>\r\n    );\r\n};\r\n\r\nexport default DrowerMenuButton;","import React from 'react';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport List from '@material-ui/core/List';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nconst drawerWidth = 240;\r\n\r\n\r\n\r\nconst useStyles = makeStyles( ( theme ) => ( {\r\n    root: {\r\n        display: 'flex',\r\n    },\r\n    appBar: {\r\n        transition: theme.transitions.create( [ 'margin', 'width' ], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        } ),\r\n    },\r\n    appBarShift: {\r\n        width: `calc(100% - ${ drawerWidth }px)`,\r\n        marginLeft: drawerWidth,\r\n        transition: theme.transitions.create( [ 'margin', 'width' ], {\r\n            easing: theme.transitions.easing.easeOut,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        } ),\r\n    },\r\n    menuButton: {\r\n        marginRight: theme.spacing( 2 ),\r\n    },\r\n    hide: {\r\n        display: 'none',\r\n    },\r\n    drawer: {\r\n        width: drawerWidth,\r\n        flexShrink: 0,\r\n    },\r\n    drawerPaper: {\r\n        width: drawerWidth,\r\n    },\r\n    drawerHeader: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        padding: theme.spacing( 0, 1 ),\r\n        // necessary for content to be below app bar\r\n        ...theme.mixins.toolbar,\r\n        justifyContent: 'flex-end',\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing( 3 ),\r\n        transition: theme.transitions.create( 'margin', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        } ),\r\n        marginLeft: -drawerWidth,\r\n    },\r\n    contentShift: {\r\n        transition: theme.transitions.create( 'margin', {\r\n            easing: theme.transitions.easing.easeOut,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        } ),\r\n        marginLeft: 0,\r\n    },\r\n    Link: {\r\n        color: '#262626',\r\n        textDecoration: 'none',\r\n        userSelect: 'none'\r\n    }\r\n} ) );\r\n\r\n//@valid:mobile only / @params: open = state of open/close of the side menu() / closeMenu = closing the menu()\r\ninterface Props\r\n{\r\n    open: boolean;\r\n    closeMenu: () => void;\r\n}\r\n\r\n\r\n// @menu that apears on mobile\r\nconst DrowerMenu: React.FC<Props> = ( props: Props ) =>\r\n{\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const { open, closeMenu } = props;\r\n    return (\r\n        <Drawer\r\n            className={ classes.drawer }\r\n            variant=\"persistent\"\r\n            anchor=\"left\"\r\n            open={ open }\r\n            classes={ {\r\n                paper: classes.drawerPaper,\r\n            } }\r\n        >\r\n            <div className={ classes.drawerHeader }>\r\n                <IconButton onClick={ closeMenu }>\r\n                    { theme.direction === 'ltr' ? <ChevronLeftIcon /> : <ChevronRightIcon /> }\r\n                </IconButton>\r\n            </div>\r\n            <Divider />\r\n            <List>\r\n                { [ 'Home', 'Add Product' ].map( ( text ) =>\r\n                {\r\n                    let path = '';\r\n                    switch ( text )\r\n                    {\r\n                        case 'Home':\r\n                            path = '/';\r\n                            break;\r\n                        case 'Add Product':\r\n                            path = '/admin/add-product';\r\n                            break;\r\n                        default: {\r\n                            path = '/nothing';\r\n                        }\r\n                    }\r\n                    return (\r\n                        <Link className={ classes.Link } to={ path } key={ text } onClick={ closeMenu }>\r\n                            <ListItem button key={ text }>\r\n                                <ListItemText primary={ text } />\r\n                            </ListItem>\r\n                        </Link>\r\n                    );\r\n                } ) }\r\n            </List>\r\n            <Divider />\r\n            <List>\r\n                { [ 'Send mail', 'Account' ].map( ( text ) => (\r\n                    <ListItem button key={ text } onClick={ closeMenu }>\r\n                        <ListItemText primary={ text } />\r\n                    </ListItem>\r\n                ) ) }\r\n            </List>\r\n        </Drawer>\r\n    );\r\n};\r\n\r\nexport default DrowerMenu;","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles( ( theme ) => ( {\r\n    grow: {\r\n        display: 'flex',\r\n        [ theme.breakpoints.up( 'lg' ) ]: {\r\n            display: 'none',\r\n        },\r\n        flexGrow: 1,\r\n    }\r\n} ) );\r\n\r\n\r\n//@bassically a flex grow component\r\nconst Spacer: React.FC = () =>\r\n{\r\n    const classes = useStyles();\r\n    return (\r\n        <div className={ classes.grow }></div>\r\n    );\r\n};\r\n\r\nexport default Spacer;","import React, { useEffect } from 'react';\r\nimport { useLocation, useHistory } from 'react-router-dom';\r\nimport { useDispatch } from 'react-redux';\r\nimport decode from 'jwt-decode';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Account from './AccountButton';\r\nimport Logo from './Logo';\r\nimport NavMenu from './NavMenu';\r\nimport DrowerMenuButton from './DrowerMenuButton';\r\nimport DrowerMenu from './DrowerMenu';\r\nimport Spacer from './Spacer';\r\nimport { authentificationAction } from '../../actions';\r\n\r\n\r\nconst useStyles = makeStyles( ( theme ) => ( {\r\n  relative: {\r\n    position: 'relative',\r\n    [ theme.breakpoints.up( 'lg' ) ]: {\r\n      minHeight: '48px'\r\n    },\r\n  },\r\n  grow: {\r\n    flexGrow: 1,\r\n  },\r\n  growMobile: {\r\n    display: 'flex',\r\n    [ theme.breakpoints.up( 'lg' ) ]: {\r\n      display: 'none',\r\n    },\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing( 2 ),\r\n  },\r\n\r\n  sectionDesktop: {\r\n    display: 'none',\r\n    [ theme.breakpoints.up( 'md' ) ]: {\r\n      display: 'flex',\r\n    },\r\n  },\r\n  sectionMobile: {\r\n    display: 'flex',\r\n    [ theme.breakpoints.up( 'md' ) ]: {\r\n      display: 'none',\r\n    },\r\n  },\r\n  invisible: {\r\n    display: 'none',\r\n  }\r\n} ) );\r\n\r\nconst GoldAppBar = withStyles( ( theme ) => ( {\r\n  root: {\r\n    color: '#fafafa',\r\n    backgroundColor: '#02203c',\r\n    boxShadow: 'none',\r\n  },\r\n} ) )( AppBar );\r\n\r\ninterface Props\r\n{\r\n  isVisible: boolean;\r\n}\r\n\r\n//@entrypoint of the navbar component \r\nconst ButtonAppBar: React.FC<Props> = ( props: Props ) =>\r\n{\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const location = useLocation();\r\n\r\n  const { isVisible } = props;\r\n  const [ open, setOpen ] = React.useState( false );\r\n\r\n  const handleDrawerOpen = () =>\r\n  {\r\n    setOpen( true );\r\n  };\r\n\r\n  const handleDrawerClose = () =>\r\n  {\r\n    setOpen( false );\r\n  };\r\n\r\n  const logout = () =>\r\n  {\r\n    dispatch( authentificationAction.logout() );\r\n    history.push( '/auth' );\r\n  };\r\n\r\n\r\n  //sets the profile golbat state to the user if a profile is saved in local storage and the token has not expired\r\n  useEffect( () =>\r\n  {\r\n    if ( localStorage.getItem( 'profile' ) )\r\n    {\r\n      const profile = JSON.parse( localStorage.getItem( 'profile' ) );\r\n      const token = profile?.token;\r\n      if ( token )\r\n      {\r\n        const decodedToken: any = decode( token );\r\n\r\n        if ( decodedToken.exp * 1000 < new Date().getTime() ) logout();\r\n        dispatch( authentificationAction.relog( profile.result ) );\r\n      }\r\n\r\n    }\r\n  }, [ location ] );\r\n\r\n  return (\r\n    <div className={ isVisible ? '' : classes.invisible } color=\"primary\">\r\n      <GoldAppBar position=\"sticky\">\r\n        <Toolbar className={ classes.relative }>\r\n          <DrowerMenuButton open={ open } drowerOpen={ handleDrawerOpen } />\r\n          <Logo />\r\n          <NavMenu />\r\n          <Spacer />\r\n          <Account />\r\n        </Toolbar>\r\n        <DrowerMenu open={ open } closeMenu={ handleDrawerClose } />\r\n      </GoldAppBar>\r\n    </div >\r\n  );\r\n};\r\n\r\nexport default ButtonAppBar;","import React from 'react';\r\nimport { TextField, Grid, Button, IconButton } from '@material-ui/core';\r\nimport { makeStyles, Theme } from '@material-ui/core/styles';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport PublishIcon from '@material-ui/icons/Publish';\r\nimport BrokenImageIcon from '@material-ui/icons/BrokenImage';\r\n\r\n\r\nimport { FieldSelector, NoSrcAlert } from '../../../constants';\r\n\r\n\r\nconst useStyles = makeStyles( ( theme: Theme ) => ( {\r\n    root: {\r\n        paddingTop: '2em',\r\n        [ theme.breakpoints.up( 'md' ) ]: {\r\n            paddingTop: 0,\r\n        }\r\n    },\r\n    textFieldWrapper: {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n    },\r\n    textField: {\r\n        width: '95%',\r\n        [ theme.breakpoints.up( 'md' ) ]: {\r\n            width: '100%'\r\n        }\r\n    },\r\n    button: {\r\n        margin: theme.spacing( 1 ),\r\n        width: 200\r\n    },\r\n    buttonWrapper: {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n    },\r\n    alertField: {\r\n        '&>label': {\r\n            color: 'red'\r\n        },\r\n        '& .MuiInput-underline:before': {\r\n            borderBottom: '1px solid red'\r\n        }\r\n    },\r\n    activeButton: {\r\n        color: 'rgba( 0, 0, 0, 1 ) !important'\r\n    }\r\n} ) );\r\n\r\ninterface Props\r\n{\r\n    name: string;\r\n    description: string;\r\n    details: string;\r\n    promotion: string | number;\r\n    price: number;\r\n    pieces: number;\r\n    src: string;\r\n    removeImage: () => void;\r\n    change: ( target: ( HTMLInputElement | HTMLTextAreaElement ), id: FieldSelector ) => void;\r\n    clear: () => void;\r\n    send: ( ev: any ) => void;\r\n\r\n    //fields checkers\r\n    fieldWarnings: { name: boolean, price: boolean, description: boolean; };\r\n    checkFields: () => boolean;\r\n\r\n    //dialog props\r\n\r\n    openDialog: ( title: string, content: string ) => void;\r\n}\r\n\r\nconst Form: React.FC<Props> = ( props: Props ) =>\r\n{\r\n    const { name,\r\n        description,\r\n        details,\r\n        promotion,\r\n        pieces,\r\n        price,\r\n        change,\r\n        clear,\r\n        send,\r\n        fieldWarnings,\r\n        src,\r\n        openDialog,\r\n        checkFields,\r\n        removeImage,\r\n    } = props;\r\n\r\n    const classes = useStyles();\r\n\r\n\r\n\r\n    return (\r\n        <Grid container className={ classes.root } spacing={ 1 } justify=\"center\">\r\n            <Grid item xs={ 12 } className={ classes.textFieldWrapper }>\r\n                <TextField\r\n                    className={ `${ classes.textField } ${ fieldWarnings.name ? classes.alertField : '' }` }\r\n                    label=\"Name*\"\r\n                    type=\"text\"\r\n                    value={ name }\r\n                    onChange={ ev => change( ev.target, FieldSelector.name ) }\r\n                />\r\n            </Grid>\r\n            <Grid item xs={ 12 } md={ 6 } className={ classes.textFieldWrapper }>\r\n                <TextField\r\n                    className={ `${ classes.textField } ${ fieldWarnings.price ? classes.alertField : '' }` }\r\n                    label=\"Price*(RON)\"\r\n                    type=\"number\"\r\n                    InputLabelProps={ {\r\n                        shrink: true,\r\n                    } }\r\n                    value={ price }\r\n                    onFocus={ ( ev ) => ev.target.select() }\r\n                    onChange={ ev => change( ev.target, FieldSelector.price ) }\r\n                />\r\n            </Grid>\r\n\r\n            <Grid item xs={ 12 } md={ 6 } className={ classes.textFieldWrapper }>\r\n                <TextField\r\n                    className={ classes.textField }\r\n                    label=\"Promotion(%)\"\r\n                    type=\"number\"\r\n                    value={ promotion }\r\n                    InputLabelProps={ {\r\n                        shrink: true,\r\n                    } }\r\n                    onFocus={ ( ev ) => ev.target.select() }\r\n                    onChange={ ev => change( ev.target, FieldSelector.prom ) }\r\n                />\r\n            </Grid>\r\n\r\n            <Grid item xs={ 12 } className={ classes.textFieldWrapper }>\r\n                <TextField\r\n                    className={ classes.textField }\r\n                    label=\"Pieces\"\r\n                    type=\"number\"\r\n                    value={ pieces }\r\n                    InputLabelProps={ {\r\n                        shrink: true,\r\n                    } }\r\n                    onFocus={ ( ev ) => ev.target.select() }\r\n                    onChange={ ev => change( ev.target, FieldSelector.stock ) }\r\n                />\r\n            </Grid>\r\n\r\n\r\n            <Grid item xs={ 12 } className={ classes.textFieldWrapper }>\r\n                <TextField\r\n                    className={ `${ classes.textField } ${ fieldWarnings.description ? classes.alertField : '' }` }\r\n                    label=\"Description*\"\r\n                    value={ description }\r\n                    onChange={ ev => change( ev.target, FieldSelector.desc ) }\r\n                    rows={ 3 }\r\n                    multiline\r\n                />\r\n            </Grid>\r\n\r\n            <Grid item xs={ 12 } className={ classes.textFieldWrapper }>\r\n                <TextField\r\n                    className={ classes.textField }\r\n                    label=\"Details\"\r\n                    value={ details }\r\n                    onChange={ ev => change( ev.target, FieldSelector.details ) }\r\n                    rows={ 3 }\r\n                    multiline\r\n                />\r\n            </Grid>\r\n\r\n            <Grid item xs={ 12 } className={ classes.textFieldWrapper }>\r\n                <Grid container spacing={ 1 } justify=\"center\">\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        component=\"label\"\r\n                    >\r\n                        Select File\r\n                            <input\r\n                            type=\"file\"\r\n                            accept=\"image/*\"\r\n                            onChange={ ev => change( ev.target, FieldSelector.src ) }\r\n                            hidden\r\n                        />\r\n                    </Button>\r\n                    <IconButton disabled={ src ? false : true } onClick={ removeImage } className={ `${ src ? classes.activeButton : '' }` }>\r\n                        <BrokenImageIcon />\r\n                    </IconButton>\r\n\r\n                </Grid>\r\n\r\n            </Grid>\r\n\r\n            <Grid container>\r\n                <Grid item xs={ 6 } className={ classes.buttonWrapper }>\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className={ classes.button }\r\n                        startIcon={ <PublishIcon /> }\r\n                        onClick={ ( ev ) =>\r\n                        {\r\n                            if ( checkFields() )\r\n                            {\r\n                                if ( src ) { send( ev ); }\r\n                                else { openDialog( NoSrcAlert.title, NoSrcAlert.content ); }\r\n                            }\r\n\r\n                        } }\r\n                    >\r\n                        Upload\r\n                    </Button>\r\n                </Grid>\r\n\r\n                <Grid item xs={ 6 } className={ classes.buttonWrapper }>\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        color=\"default\"\r\n                        className={ classes.button }\r\n                        startIcon={ <DeleteIcon /> }\r\n                        onClick={ clear }\r\n                    >\r\n                        Clear\r\n                    </Button>\r\n\r\n                </Grid>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n};\r\n\r\nexport default Form;\r\n","import React, { useState, Dispatch, SetStateAction } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\n\r\ninterface Props\r\n{\r\n    title: string,\r\n    content: string,\r\n    yes: ( ev: any ) => void;\r\n    no?: () => void | null;\r\n    open: boolean;\r\n    setOpen: Dispatch<SetStateAction<boolean>>;\r\n}\r\n\r\n\r\nconst AlertDialog: React.FC<Props> = ( props: Props ) =>\r\n{\r\n    // const [ open, setOpen ] = useState( false );\r\n\r\n    const { title, content, yes, no, open, setOpen } = props;\r\n\r\n    // const handleClickOpen = () =>\r\n    // {\r\n    //     setOpen( true );\r\n    // };\r\n\r\n    const handleClose = () =>\r\n    {\r\n        setOpen( false );\r\n    };\r\n\r\n    return (\r\n        <Dialog\r\n            open={ open }\r\n            onClose={ handleClose }\r\n            aria-labelledby=\"alert-dialog-title\"\r\n            aria-describedby=\"alert-dialog-description\"\r\n        >\r\n            <DialogTitle id=\"alert-dialog-title\">{ title }</DialogTitle>\r\n            <DialogContent>\r\n                <DialogContentText id=\"alert-dialog-description\">\r\n                    { content }\r\n                </DialogContentText>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={ no ? () => { no(); handleClose(); } : handleClose } color=\"primary\">\r\n                    No\r\n          </Button>\r\n                <Button onClick={ yes ? ( ev ) => { yes( ev ); handleClose(); } : handleClose } color=\"primary\" autoFocus>\r\n                    Yes\r\n          </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n};\r\n\r\nexport default AlertDialog;","import React, { SetStateAction, useState } from 'react';\r\nimport { Grid } from '@material-ui/core';\r\nimport { makeStyles, Theme } from '@material-ui/core/styles';\r\n// import Item from './Item';\r\nimport Form from './Form';\r\nimport Card from '../../ProductCard';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n// import AddProductMessages from '../../../api/constants';\r\nimport Dialog from '../../AlertDialog';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\n\r\n//@object that contains all global state product actions(including API calls)\r\nimport { productsActions } from '../../../actions';\r\n\r\n//@enum of commands for form fileds\r\nimport { FieldSelector } from '../../../constants';\r\n\r\n\r\nconst useStyles = makeStyles( ( theme: Theme ) => ( {\r\n    root: {\r\n        paddingTop: '3rem',\r\n    },\r\n} ) );\r\n\r\ninterface Product\r\n{\r\n    name: string;\r\n    price: number;\r\n    description?: string;\r\n    details?: string;\r\n    sale?: number;\r\n    stock?: number;\r\n    src: string | File;\r\n}\r\n\r\ninterface Props\r\n{\r\n\r\n}\r\n\r\nconst ProductAdder: React.FC<Props> = ( props: Props ) =>\r\n{\r\n    const classes = useStyles();\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n    const profile = useSelector( ( state: any ) => state.profile );\r\n\r\n    // Form states\r\n    const [ cardName, setCardName ] = useState( '' );\r\n    const [ cardDescription, setCardDescription ] = useState( '' );\r\n    const [ cardDetails, setCardDetails ] = useState( '' );\r\n    const [ cardPromotion, setCardPromotion ] = useState( 0 );\r\n    const [ cardPrice, setCardPrice ] = useState( 0 );\r\n    const [ cardPieces, setCardPieces ] = useState( 0 );\r\n    const [ cardSrc, setCardSrc ]: [ any, SetStateAction<any> ] = useState( '' );\r\n    const [ fakeSrc, setFakeSrc ] = useState( '' );\r\n\r\n\r\n    // Mandatory fields alerts\r\n    const [ fieldWarnings, setFieldWarnings ] = useState( { name: false, description: false, price: false } );\r\n\r\n\r\n\r\n    //Dialog states\r\n\r\n    const [ openAlert, setOpenAlert ] = useState( false );\r\n    const [ titleAlert, setTitleAlert ] = useState( '' );\r\n    const [ contentAlert, setContentAlert ] = useState( '' );\r\n\r\n    //opens the dialog and sets the title and content inside the componenet\r\n    /**\r\n     * @param title the dialog title\r\n     * @param content the content of the dialog\r\n     */\r\n    const openDialog = ( title: string, content: string ) =>\r\n    {\r\n        setTitleAlert( title );\r\n        setContentAlert( content );\r\n        setOpenAlert( true );\r\n    };\r\n\r\n    /**\r\n     * @param file image file form the input\r\n     * the file is saved in the scr state and than transformed in base64 string to populate the fakeSrc state\r\n     */\r\n    const setImage = ( file: File ) =>\r\n    {\r\n        const reader = new FileReader();\r\n        if ( file )\r\n        {\r\n            setCardSrc( file );\r\n            reader.readAsDataURL( file );\r\n            reader.onload = () =>\r\n            {\r\n                const base64 = reader.result;\r\n                setFakeSrc( base64.toString() );\r\n            };\r\n        }\r\n\r\n    };\r\n\r\n    //resets src state\r\n    const removeImage = () =>\r\n    {\r\n        setCardSrc( '' );\r\n        setFakeSrc( '' );\r\n    };\r\n\r\n    /**  handles all changes in the form and updates the fake product card\r\n    * @param ev: the event that provides us the target input\r\n    * @param identifier: the string that feeds switch structure witch selects the setState function\r\n    * @param forced: a boolean that can bypass in some cases the target grabbing from the eveny(mainly used on src)\r\n    */\r\n    const handleChanges = ( target: HTMLInputElement | HTMLTextAreaElement, identifier: FieldSelector ) =>\r\n    {\r\n        switch ( identifier )\r\n        {\r\n            case FieldSelector.name:\r\n                setCardName( target.value );\r\n                if ( fieldWarnings.name )\r\n                {\r\n                    setFieldWarnings( { ...fieldWarnings, name: false } );\r\n                }\r\n                break;\r\n            case FieldSelector.desc:\r\n                setCardDescription( target.value );\r\n                if ( fieldWarnings.description )\r\n                {\r\n                    setFieldWarnings( { ...fieldWarnings, description: false } );\r\n                }\r\n                break;\r\n            case FieldSelector.details:\r\n                setCardDetails( target.value );\r\n                break;\r\n            case FieldSelector.prom:\r\n                if ( target.value === '' )\r\n                {\r\n                    setCardPromotion( 0 );\r\n                    break;\r\n                }\r\n                setCardPromotion( parseInt( target.value ) );\r\n                break;\r\n            case FieldSelector.price:\r\n                if ( target.value === '' )\r\n                {\r\n                    setCardPrice( 0 );\r\n                    break;\r\n                }\r\n                setCardPrice( parseInt( target.value ) );\r\n                if ( fieldWarnings.price )\r\n                {\r\n                    setFieldWarnings( { ...fieldWarnings, price: false } );\r\n                }\r\n                break;\r\n            case FieldSelector.stock:\r\n                if ( target.value === '' )\r\n                {\r\n                    setCardPieces( 0 );\r\n                    break;\r\n                }\r\n                setCardPieces( parseInt( target.value ) );\r\n                break;\r\n            case FieldSelector.src:\r\n                if ( 'files' in target )\r\n                    setImage( target.files[ 0 ] );\r\n                break;\r\n        }\r\n\r\n    };\r\n\r\n    // TODO make it abe to send multiple items\r\n\r\n\r\n    const checkFields = () =>\r\n    {\r\n        if ( cardName && cardDescription && cardPrice )\r\n        {\r\n            return true;\r\n        }\r\n        const tempWarnings = { ...fieldWarnings };\r\n        if ( !cardName )\r\n        {\r\n            tempWarnings.name = true;\r\n        }\r\n\r\n        if ( !cardDescription )\r\n        {\r\n            tempWarnings.description = true;\r\n        }\r\n\r\n        if ( !cardPrice )\r\n        {\r\n            tempWarnings.price = true;\r\n        }\r\n\r\n        setFieldWarnings( tempWarnings );\r\n        return false;\r\n    };\r\n\r\n    const handleSubmit = ( ev: any ) =>\r\n    {\r\n        ev.preventDefault();\r\n\r\n        const newProduct: any = {\r\n            name: cardName,\r\n            price: cardPrice,\r\n            description: cardDescription,\r\n            details: cardDetails,\r\n            sale: cardPromotion,\r\n            stock: cardPieces,\r\n            src: cardSrc,\r\n        };\r\n\r\n        const form = new FormData();\r\n\r\n        for ( let key of Object.keys( newProduct ) )\r\n        {\r\n            form.append( key, newProduct[ key ] );\r\n        }\r\n\r\n\r\n        dispatch( productsActions.post( form ) );\r\n    };\r\n\r\n\r\n    //empties the form\r\n    const clearProductDetails = () =>\r\n    {\r\n        setCardName( '' );\r\n        setCardPrice( 0 );\r\n        setCardPieces( 0 );\r\n        setCardPromotion( 0 );\r\n        setCardDescription( '' );\r\n        setCardDetails( '' );\r\n        setCardSrc( '' );\r\n        setFakeSrc( '' );\r\n        setFieldWarnings( { name: false, price: false, description: false } );\r\n    };\r\n\r\n\r\n    return (\r\n        <Grid container className={ classes.root }>\r\n            <Grid item xs={ 12 } md={ 7 }>\r\n                {/* PROTO-DISPLAY */ }\r\n                <Card\r\n                    _id=''\r\n                    name={ cardName }\r\n                    description={ cardDescription }\r\n                    details={ cardDetails }\r\n                    promotion={ cardPromotion }\r\n                    price={ cardPrice }\r\n                    piecesLeft={ cardPieces }\r\n                    src={ fakeSrc }\r\n                    active={ false }\r\n                />\r\n            </Grid>\r\n            <Grid item xs={ 12 } md={ 5 }>\r\n                <Form\r\n                    name={ cardName }\r\n                    description={ cardDescription }\r\n                    details={ cardDetails }\r\n                    promotion={ cardPromotion }\r\n                    price={ cardPrice }\r\n                    pieces={ cardPieces }\r\n                    src={ cardSrc }\r\n                    change={ handleChanges }\r\n                    clear={ clearProductDetails }\r\n                    send={ handleSubmit }\r\n                    removeImage={ removeImage }\r\n\r\n                    //fields checkers\r\n                    fieldWarnings={ fieldWarnings }\r\n                    checkFields={ checkFields }\r\n\r\n                    //dialog params\r\n                    openDialog={ openDialog }\r\n                />\r\n            </Grid>\r\n\r\n\r\n            <Dialog\r\n                open={ openAlert }\r\n                title={ titleAlert }\r\n                content={ contentAlert }\r\n                yes={ handleSubmit }\r\n                setOpen={ setOpenAlert }\r\n            />\r\n        </Grid>\r\n    );\r\n};\r\n\r\nexport default ProductAdder;\r\n","import React from 'react';\r\nimport { TextField, Grid, Button, IconButton } from '@material-ui/core';\r\nimport { makeStyles, Theme } from '@material-ui/core/styles';\r\nimport RestoreRoundedIcon from '@material-ui/icons/RestoreRounded';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport BrokenImageIcon from '@material-ui/icons/BrokenImage';\r\n\r\nimport { FieldSelector } from '../../../constants';\r\n\r\nconst useStyles = makeStyles( ( theme: Theme ) => ( {\r\n    textFieldWrapper: {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n    },\r\n    textField: {\r\n        width: '95%',\r\n        [ theme.breakpoints.up( 'md' ) ]: {\r\n            width: '100%'\r\n        }\r\n    },\r\n    button: {\r\n        margin: theme.spacing( 1 ),\r\n        width: 200\r\n    },\r\n    buttonWrapper: {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n    },\r\n    alertField: {\r\n        '&>label': {\r\n            color: 'red'\r\n        },\r\n        '& .MuiInput-underline:before': {\r\n            borderBottom: '1px solid red'\r\n        }\r\n    },\r\n    activeButton: {\r\n        color: 'rgba( 0, 0, 0, 1 ) !important'\r\n    }\r\n} ) );\r\n\r\ninterface Props\r\n{\r\n    name: string;\r\n    description: string;\r\n    details: string;\r\n    promotion: string | number;\r\n    price: number;\r\n    pieces: number;\r\n    src: string;\r\n    removeImage: () => void;\r\n    change: ( target: HTMLInputElement | HTMLTextAreaElement, id: FieldSelector, forced?: boolean ) => void;\r\n    reset: () => void;\r\n    update: ( ev: any ) => void;\r\n    fieldWarnings: { name: boolean, price: boolean, description: boolean, };\r\n    checkFields: () => boolean;\r\n    openDialog?: ( title: string, content: string ) => void;\r\n}\r\n\r\nconst Form: React.FC<Props> = ( props: Props ) =>\r\n{\r\n    const { name, description, details, promotion, pieces, price, change, reset, update, removeImage, checkFields, fieldWarnings, src } = props;\r\n\r\n    const classes = useStyles();\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <Grid container spacing={ 1 } justify=\"center\">\r\n            <Grid item xs={ 12 } className={ classes.textFieldWrapper }>\r\n                <TextField\r\n                    className={ `${ classes.textField } ${ fieldWarnings.name ? classes.alertField : '' }` }\r\n                    label=\"Name\"\r\n                    type=\"text\"\r\n                    value={ name }\r\n                    onChange={ ev => change( ev.target, FieldSelector.name ) }\r\n                />\r\n            </Grid>\r\n            <Grid item xs={ 12 } md={ 6 } className={ classes.textFieldWrapper }>\r\n                <TextField\r\n                    className={ `${ classes.textField } ${ fieldWarnings.price ? classes.alertField : '' }` }\r\n                    label=\"Price(RON)\"\r\n                    type=\"number\"\r\n                    InputLabelProps={ {\r\n                        shrink: true,\r\n                    } }\r\n                    value={ price }\r\n                    onFocus={ ( ev ) => ev.target.select() }\r\n                    onChange={ ev => change( ev.target, FieldSelector.price ) }\r\n                />\r\n            </Grid>\r\n\r\n            <Grid item xs={ 12 } md={ 6 } className={ classes.textFieldWrapper }>\r\n                <TextField\r\n                    className={ classes.textField }\r\n                    label=\"Promotion(%)\"\r\n                    type=\"number\"\r\n                    value={ promotion }\r\n                    InputLabelProps={ {\r\n                        shrink: true,\r\n                    } }\r\n                    onFocus={ ( ev ) => ev.target.select() }\r\n                    onChange={ ev => change( ev.target, FieldSelector.prom ) }\r\n                />\r\n            </Grid>\r\n\r\n            <Grid item xs={ 12 } className={ classes.textFieldWrapper }>\r\n                <TextField\r\n                    className={ classes.textField }\r\n                    label=\"Pieces\"\r\n                    type=\"number\"\r\n                    value={ pieces }\r\n                    InputLabelProps={ {\r\n                        shrink: true,\r\n                    } }\r\n                    onFocus={ ( ev ) => ev.target.select() }\r\n                    onChange={ ev => change( ev.target, FieldSelector.stock ) }\r\n                />\r\n            </Grid>\r\n\r\n\r\n            <Grid item xs={ 12 } className={ classes.textFieldWrapper }>\r\n                <TextField\r\n                    className={ `${ classes.textField } ${ fieldWarnings.description ? classes.alertField : '' }` }\r\n                    label=\"Description\"\r\n                    value={ description }\r\n                    onChange={ ev => change( ev.target, FieldSelector.desc ) }\r\n                    rows={ 3 }\r\n                    multiline\r\n                />\r\n            </Grid>\r\n\r\n            <Grid item xs={ 12 } className={ classes.textFieldWrapper }>\r\n                <TextField\r\n                    className={ classes.textField }\r\n                    label=\"Details\"\r\n                    value={ details }\r\n                    onChange={ ev => change( ev.target, FieldSelector.details ) }\r\n                    rows={ 3 }\r\n                    multiline\r\n                />\r\n            </Grid>\r\n\r\n            <Grid item xs={ 12 } className={ classes.textFieldWrapper }>\r\n                <Grid container spacing={ 1 } justify=\"center\">\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        component=\"label\"\r\n                    >\r\n                        Select File\r\n                            <input\r\n                            type=\"file\"\r\n                            accept=\"image/*\"\r\n                            onChange={ ev => change( ev.target, FieldSelector.src ) }\r\n                            hidden\r\n                        />\r\n                    </Button>\r\n                    <IconButton disabled={ src ? false : true } className={ `${ src ? classes.activeButton : '' }` } onClick={ removeImage }>\r\n                        <BrokenImageIcon />\r\n                    </IconButton>\r\n\r\n                </Grid>\r\n\r\n            </Grid>\r\n\r\n            <Grid container>\r\n                <Grid item xs={ 6 } className={ classes.buttonWrapper }>\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className={ classes.button }\r\n                        startIcon={ <SaveIcon /> }\r\n                        onClick={ ( ev ) => { if ( checkFields() ) { update( ev ); } } }\r\n                    >\r\n                        Save\r\n                    </Button>\r\n                </Grid>\r\n\r\n                <Grid item xs={ 6 } className={ classes.buttonWrapper }>\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        color=\"default\"\r\n                        className={ classes.button }\r\n                        startIcon={ <RestoreRoundedIcon /> }\r\n                        onClick={ reset }\r\n                    >\r\n                        Reset\r\n                    </Button>\r\n\r\n                </Grid>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n};\r\n\r\nexport default Form;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Grid, CircularProgress } from '@material-ui/core';\r\nimport { makeStyles, Theme } from '@material-ui/core/styles';\r\nimport { productsActions, snackbarActionManager } from '../../../actions';\r\nimport axios from 'axios';\r\n\r\nimport Form from './Form';\r\nimport Card from '../../ProductCard';\r\nimport { FieldSelector, NoSrcAlert, SnackBarVariants } from '../../../constants';\r\nimport Dialog from '../../AlertDialog';\r\n\r\n\r\ninterface Product\r\n{\r\n    name: string;\r\n    price: number;\r\n    description?: string;\r\n    details?: string;\r\n    sale?: number;\r\n    stock?: number;\r\n    src: string;\r\n}\r\n\r\nconst useStyles = makeStyles( ( theme: Theme ) => ( {\r\n    root: {\r\n        marginTop: '4rem'\r\n    },\r\n    loading: {\r\n        height: '90vh',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        display: 'flex',\r\n    }\r\n} ) );\r\n\r\ninterface Props\r\n{\r\n    match: any;\r\n}\r\n\r\nconst UpdateProduct: React.FC<Props> = ( props: Props ) =>\r\n{\r\n    const { match } = props;\r\n    const classes = useStyles();\r\n    const dispatch = useDispatch();\r\n\r\n    const [ product, setProduct ] = useState( useSelector( ( state: any ) => state.products.filter( ( item: any ) => item._id === match.params.id )[ 0 ] ) );\r\n    const [ cardName, setCardName ] = useState( product ? product.name : '' );\r\n    const [ cardPrice, setCardPrice ] = useState( product ? product.price : 0 );\r\n    const [ cardDescription, setCardDescription ] = useState( product ? product.description : '' );\r\n    const [ cardDetails, setCardDetails ] = useState( product ? product.details : '' );\r\n    const [ cardPromotion, setCardPromotion ] = useState( product ? product.sale : 0 );\r\n    const [ cardPieces, setCardPieces ] = useState( product ? product.stock : 0 );\r\n    const [ cardSrc, setCardSrc ] = useState( product ? product.src : null );\r\n    const [ fakeSrc, setFakeSrc ] = useState( product ? product.src : '' );\r\n\r\n\r\n    // Mandatory field alerts\r\n    const [ fieldWarnings, setFieldWarnings ] = useState( { name: false, description: false, price: false } );\r\n\r\n\r\n\r\n    const loadProduct = async () =>\r\n    {\r\n        try\r\n        {\r\n            console.log( match.params.id );\r\n            const { data } = await axios.get( `/products/${ match.params.id }` );\r\n            if ( data.status === 'success' )\r\n                setProduct( data.product );\r\n        } catch ( error )\r\n        {\r\n            dispatch( snackbarActionManager.show( { variant: SnackBarVariants.fail, message: 'Something went wrong' } ) );\r\n        }\r\n\r\n    };\r\n\r\n\r\n\r\n    //Dialog states\r\n\r\n    const [ openAlert, setOpenAlert ] = useState( false );\r\n    const [ titleAlert, setTitleAlert ] = useState( '' );\r\n    const [ contentAlert, setContentAlert ] = useState( '' );\r\n\r\n\r\n    const getProduct = async () =>\r\n    {\r\n        // TODO: refactor to fetch\r\n        const newProduct = await ( await axios.get( `/products/${ match.params.id }` ) ).data.product;\r\n        setProduct( newProduct );\r\n        setCardName( newProduct.name );\r\n        setCardPrice( newProduct.price );\r\n        setCardDescription( newProduct.description );\r\n        setCardDetails( newProduct.details );\r\n        setCardPromotion( newProduct.sale );\r\n        setCardPieces( newProduct.stock );\r\n        setCardSrc( newProduct.src );\r\n        setFakeSrc( newProduct.src );\r\n    };\r\n\r\n    useEffect( () =>\r\n    {\r\n        ( async () =>\r\n        {\r\n            if ( !product )\r\n            {\r\n                await getProduct();\r\n            }\r\n        } )();\r\n    }, [] );\r\n\r\n    useEffect( () =>\r\n    {\r\n        console.log( product );\r\n        console.log( product?.src );\r\n        console.log( cardSrc );\r\n        console.log( fakeSrc );\r\n    }, [ product, cardSrc, fakeSrc ] );\r\n\r\n\r\n    //checks the mandatory fields\r\n    const checkFields = () =>\r\n    {\r\n        if ( cardName && cardDescription && cardPrice )\r\n        {\r\n            return true;\r\n        }\r\n        const tempWarnings = { ...fieldWarnings };\r\n        if ( !cardName )\r\n        {\r\n            tempWarnings.name = true;\r\n        }\r\n\r\n        if ( !cardDescription )\r\n        {\r\n            tempWarnings.description = true;\r\n        }\r\n\r\n        if ( !cardPrice )\r\n        {\r\n            tempWarnings.price = true;\r\n        }\r\n\r\n        setFieldWarnings( tempWarnings );\r\n        return false;\r\n    };\r\n\r\n\r\n    /**\r\n     * @param file image file form the input\r\n     * the file is saved in the scr state and than transformed in base64 string to populate the fakeSrc state\r\n     */\r\n    const setImage = ( file: any ) =>\r\n    {\r\n        const reader = new FileReader();\r\n        if ( file )\r\n        {\r\n            setCardSrc( file );\r\n            reader.readAsDataURL( file );\r\n            reader.onload = () =>\r\n            {\r\n                const base64 = reader.result;\r\n                setFakeSrc( base64 );\r\n            };\r\n\r\n        }\r\n    };\r\n\r\n    //removes the image from the scr and fakeSrc state\r\n    const removeImage = () =>\r\n    {\r\n        setCardSrc( '' );\r\n        setFakeSrc( '' );\r\n    };\r\n\r\n\r\n    /** \r\n    * Handles all changes in the form and updates the fake product card including the removal of warnings if you change the input \r\n    * value of that corresponding field\r\n    */\r\n    const handleChanges = ( target: HTMLInputElement | HTMLTextAreaElement, identifier: FieldSelector ) =>\r\n    {\r\n        switch ( identifier )\r\n        {\r\n            case FieldSelector.name:\r\n                setCardName( target.value );\r\n                if ( fieldWarnings.name )\r\n                {\r\n                    setFieldWarnings( { ...fieldWarnings, name: false } );\r\n                }\r\n                break;\r\n            case FieldSelector.desc:\r\n                setCardDescription( target.value );\r\n                if ( fieldWarnings.description )\r\n                {\r\n                    setFieldWarnings( { ...fieldWarnings, description: false } );\r\n                }\r\n                break;\r\n            case FieldSelector.details:\r\n                setCardDetails( target.value );\r\n                break;\r\n            case FieldSelector.prom:\r\n                if ( target.value === '' )\r\n                {\r\n                    setCardPromotion( 0 );\r\n                    break;\r\n                }\r\n                setCardPromotion( parseInt( target.value ) );\r\n                break;\r\n            case FieldSelector.price:\r\n                if ( target.value === '' )\r\n                {\r\n                    setCardPrice( 0 );\r\n                    break;\r\n                }\r\n                setCardPrice( parseInt( target.value ) );\r\n                if ( fieldWarnings.price )\r\n                {\r\n                    setFieldWarnings( { ...fieldWarnings, price: false } );\r\n                }\r\n                break;\r\n            case FieldSelector.stock:\r\n                if ( target.value === '' )\r\n                {\r\n                    setCardPieces( 0 );\r\n                    break;\r\n                }\r\n                setCardPieces( parseInt( target.value ) );\r\n                break;\r\n            case FieldSelector.src:\r\n                if ( 'files' in target )\r\n                    setImage( target.files[ 0 ] );\r\n                break;\r\n        }\r\n\r\n    };\r\n\r\n    /** \r\n     * ! This function updates the product without any filters! Use it with caution! \r\n     * ! Use it only as dialog YES button callback \r\n     * */\r\n    const forcedUpdate = () =>\r\n    {\r\n        const updatedProduct: Product = {\r\n            name: cardName,\r\n            price: cardPrice,\r\n            description: cardDescription,\r\n            details: cardDetails,\r\n            sale: cardPromotion,\r\n            stock: cardPieces,\r\n            src: cardSrc,\r\n        };\r\n\r\n        dispatch( productsActions.update( product._id, getFormData( updatedProduct ) ) );\r\n        getProduct();\r\n    };\r\n\r\n    const getFormData: ( obj: any ) => FormData = ( updatedProduct ) =>\r\n    {\r\n        const form = new FormData();\r\n\r\n        for ( let key of Object.keys( updatedProduct ) )\r\n        {\r\n            form.append( key, updatedProduct[ key ] );\r\n        }\r\n\r\n        return form;\r\n    };\r\n\r\n\r\n    // product update handler\r\n    const handleUpdate = ( ev: any ) =>\r\n    {\r\n        ev.preventDefault();\r\n        const updatedProduct: Product = {\r\n            name: cardName,\r\n            price: cardPrice,\r\n            description: cardDescription,\r\n            details: cardDetails,\r\n            sale: cardPromotion,\r\n            stock: cardPieces,\r\n            src: cardSrc,\r\n        };\r\n\r\n        if ( product )\r\n        {\r\n            const trim: Product = ( ( { name, price, description, details, sale, stock, src } ) =>\r\n                ( { name, price, description, details, sale, stock, src } ) )( product );\r\n\r\n            if ( JSON.stringify( trim ) == JSON.stringify( updatedProduct ) )\r\n            {\r\n                dispatch( snackbarActionManager.hide() );\r\n                dispatch( snackbarActionManager.show( { message: 'No updates registered', variant: SnackBarVariants.info } ) );\r\n            }\r\n            else\r\n            {\r\n                if ( cardSrc )\r\n                {\r\n                    dispatch( productsActions.update( product._id, getFormData( updatedProduct ) ) );\r\n                    getProduct();\r\n                }\r\n                else\r\n                {\r\n                    openDialog( NoSrcAlert.title, NoSrcAlert.content );\r\n                }\r\n\r\n            }\r\n\r\n        } else\r\n        {\r\n            //? why is this else branch still here???\r\n            // dispatch( productsActions.post( updatedProduct ) );\r\n        }\r\n    };\r\n\r\n\r\n    // resets the fields back to their product state values\r\n    const resetProduct = () =>\r\n    {\r\n        setCardName( product.name );\r\n        setCardPrice( product.price );\r\n        setCardPieces( product.stock );\r\n        setCardPromotion( product.sale );\r\n        setCardDescription( product.description );\r\n        setCardDetails( product.details );\r\n        setCardSrc( product.src );\r\n        setFakeSrc( product.src );\r\n        setFieldWarnings( { name: false, price: false, description: false } );\r\n    };\r\n\r\n    /**\r\n     * \r\n     * @param title title of the dialog\r\n     * @param content content of the dialog\r\n     */\r\n\r\n    const openDialog = ( title: string, content: string ) =>\r\n    {\r\n        setTitleAlert( title );\r\n        setContentAlert( content );\r\n        setOpenAlert( true );\r\n    };\r\n\r\n\r\n    return (\r\n        <>\r\n            {\r\n                product ?\r\n                    <Grid container spacing={ 2 } className={ classes.root }>\r\n                        <Grid item xs={ 12 } md={ 7 }>\r\n                            {/* PROTO-DISPLAY */ }\r\n                            <Card\r\n                                _id={ product._id }\r\n                                name={ cardName }\r\n                                price={ cardPrice }\r\n                                description={ cardDescription }\r\n                                details={ cardDetails }\r\n                                piecesLeft={ cardPieces }\r\n                                promotion={ cardPromotion }\r\n                                src={ fakeSrc }\r\n                                active={ false }\r\n                            />\r\n                        </Grid>\r\n\r\n                        <Grid item xs={ 12 } md={ 5 }>\r\n                            <Form\r\n                                name={ cardName }\r\n                                description={ cardDescription }\r\n                                details={ cardDetails }\r\n                                promotion={ cardPromotion }\r\n                                price={ cardPrice }\r\n                                pieces={ cardPieces }\r\n                                src={ cardSrc }\r\n                                removeImage={ removeImage }\r\n                                change={ handleChanges }\r\n                                reset={ resetProduct }\r\n                                update={ handleUpdate }\r\n                                fieldWarnings={ fieldWarnings }\r\n                                checkFields={ checkFields }\r\n                                openDialog={ openDialog }\r\n\r\n                            />\r\n                        </Grid>\r\n                    </Grid> :\r\n                    <Grid container className={ classes.loading }>\r\n                        <CircularProgress />\r\n                    </Grid>\r\n\r\n            }\r\n            <Dialog\r\n                open={ openAlert }\r\n                title={ titleAlert }\r\n                content={ contentAlert }\r\n                yes={ forcedUpdate }\r\n                setOpen={ setOpenAlert }\r\n            />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default UpdateProduct;\r\n","import React from 'react';\r\n\r\ninterface Props\r\n{\r\n\r\n}\r\n\r\nconst AccountInfoComponent = ( props: Props ) =>\r\n{\r\n    return (\r\n        <div>\r\n            Account info\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AccountInfoComponent;\r\n","\r\nimport React from 'react';\r\n\r\nconst icon: React.FC = () => (\r\n  <svg style={ { width: '20px', height: '20px' } } viewBox=\"0 0 24 24\">\r\n    <path\r\n      fill=\"currentColor\"\r\n      d=\"M21.35,11.1H12.18V13.83H18.69C18.36,17.64 15.19,19.27 12.19,19.27C8.36,19.27 5,16.25 5,12C5,7.9 8.2,4.73 12.2,4.73C15.29,4.73 17.1,6.7 17.1,6.7L19,4.72C19,4.72 16.56,2 12.1,2C6.42,2 2.03,6.8 2.03,12C2.03,17.05 6.16,22 12.25,22C17.6,22 21.5,18.33 21.5,12.91C21.5,11.76 21.35,11.1 21.35,11.1V11.1Z\"\r\n    />\r\n  </svg>\r\n);\r\n\r\nexport default icon;","import React, { useState } from 'react';\r\nimport { TextField, FormControlLabel, Button, Grid, Checkbox } from '@material-ui/core';\r\nimport { useDispatch } from 'react-redux';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { GoogleLogin } from 'react-google-login';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport Icon from \"../GoogleIcon\";\r\nimport { LOGIN_EMAIL, LOGIN_PASSWORD, LOGIN_REMEMBER, SnackBarVariants, MAIL_FORMAT } from '../../../constants';\r\nimport { authentificationAction, snackbarActionManager } from '../../../actions';\r\n\r\n\r\nconst useStyles = makeStyles( ( theme ) => ( {\r\n    paper: {\r\n        marginTop: theme.spacing( 8 ),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing( 1 ),\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing( 1 ),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing( 3, 0, 2 ),\r\n    },\r\n    Link: {\r\n        textDecoration: 'none',\r\n        color: '#1976d2',\r\n        \"&:hover, &:focus\": {\r\n            textDecoration: 'underline',\r\n        }\r\n    },\r\n    googleButton: {\r\n\r\n    },\r\n    alertField: {\r\n        '&>label': {\r\n            color: 'red'\r\n        },\r\n        '& fieldset': {\r\n            borderColor: 'red'\r\n        }\r\n    },\r\n} ) );\r\ninterface Props\r\n{\r\n\r\n}\r\n\r\nconst From: React.FC<Props> = ( props: Props ) =>\r\n{\r\n\r\n    const classes = useStyles();\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n\r\n    const [ email, setEmail ] = useState( '' );\r\n    const [ password, setPassword ] = useState( '' );\r\n    const [ rememberMe, setRememberMe ] = useState( false );\r\n    const [ warnings, setWarnings ] = useState( { email: false, password: false } );\r\n\r\n\r\n    // the success google login callback\r\n    const googleSuccess = async ( res: any ) =>\r\n    {\r\n        const result = res?.profileObj;\r\n        const token = res?.tokenId;\r\n\r\n        localStorage.setItem( \"profile\", JSON.stringify( { result: null, token } ) );\r\n\r\n        const form = new FormData();\r\n\r\n        form.append( 'email', result.email );\r\n        form.append( 'password', result.googleId );\r\n        form.append( 'firstName', result?.givenName );\r\n        form.append( 'lastName', result?.familyName );\r\n        form.append( 'icon', result?.imageUrl );\r\n\r\n        dispatch( authentificationAction.googleLogin( form, successLogin, failedLogin ) );\r\n\r\n    };\r\n\r\n    // the fail google login callback\r\n    const googleError = ( error: any ) =>\r\n    {\r\n        dispatch( snackbarActionManager.show( { variant: SnackBarVariants.fail, message: error.message } ) );\r\n        console.log( error );\r\n    };\r\n\r\n    /**\r\n     * checks all fields state and marks the coresponding input if the value is invalid\r\n     * @returns true if all fields state have valid values\r\n     */\r\n    const checkFields: () => boolean = () =>\r\n    {\r\n        if ( !email || !MAIL_FORMAT.test( email ) )\r\n        {\r\n            setWarnings( { ...warnings, email: true } );\r\n            dispatch( snackbarActionManager.show( { message: 'Email adress invalid', variant: SnackBarVariants.warning } ) );\r\n            return false;\r\n        }\r\n        if ( password.length < 8 )\r\n        {\r\n\r\n            setWarnings( { ...warnings, password: true } );\r\n            dispatch( snackbarActionManager.show( { message: 'Password needs to have at least 8 characters', variant: SnackBarVariants.warning } ) );\r\n            return false;\r\n        }\r\n        return true;\r\n    };\r\n\r\n    /**\r\n     * callback function for the authentificationAction.login action\r\n     * @param variant the snackbar variant(a string that determines the color)\r\n     * @param message the message displayed by the snackbar\r\n     */\r\n    const successLogin = ( variant: SnackBarVariants, message: string ) =>\r\n    {\r\n        dispatch( snackbarActionManager.show( {\r\n            variant: variant,\r\n            message: message\r\n        } ) );\r\n        history.push( '/' );\r\n    };\r\n\r\n    /**\r\n     * callback function for the authentificationAction.login action\r\n     * @param variant the snackbar variant(a string that determines the color)\r\n     * @param message the message displayed by the snackbar\r\n     */\r\n    const failedLogin = ( variant: SnackBarVariants, message: string ) =>\r\n    {\r\n        dispatch( snackbarActionManager.show( {\r\n            variant: variant,\r\n            message: message\r\n        } ) );\r\n\r\n        setWarnings( { email: true, password: true } );\r\n    };\r\n\r\n    // fires the login request\r\n    const login = () =>\r\n    {\r\n        if ( !checkFields() )\r\n        {\r\n            return;\r\n        }\r\n        const form = new FormData();\r\n        form.append( 'email', email );\r\n        form.append( 'password', password );\r\n        form.append( 'rememberMe', rememberMe.toString() );\r\n\r\n\r\n        dispatch( authentificationAction.login( form, successLogin, failedLogin ) );\r\n\r\n\r\n\r\n    };\r\n\r\n    /**\r\n     * fires on any input change event\r\n     * @param id identifier for each field's state\r\n     * @param value the value that will be stored in the state value\r\n     */\r\n    const onChange = ( id: string, value: string | boolean ) =>\r\n    {\r\n        switch ( id )\r\n        {\r\n            case LOGIN_EMAIL:\r\n                if ( typeof value === 'string' )\r\n                    setEmail( value );\r\n                break;\r\n            case LOGIN_PASSWORD:\r\n                if ( typeof value === 'string' )\r\n                    setPassword( value );\r\n                break;\r\n            case LOGIN_REMEMBER:\r\n                if ( typeof value === 'boolean' )\r\n                    setRememberMe( value );\r\n                break;\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className={ classes.form }>\r\n            <TextField\r\n                className={ warnings.email ? classes.alertField : null }\r\n                variant=\"outlined\"\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n                label=\"Email Address\"\r\n                name=\"email\"\r\n                autoComplete=\"email\"\r\n                autoFocus\r\n                onChange={ ( ev ) => onChange( LOGIN_EMAIL, ev.target.value ) }\r\n                onFocus={ () => { if ( warnings.email ) setWarnings( { ...warnings, email: false } ); } }\r\n            />\r\n            <TextField\r\n                className={ warnings.password ? classes.alertField : null }\r\n                variant=\"outlined\"\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n                name=\"password\"\r\n                label=\"Password\"\r\n                type=\"password\"\r\n                autoComplete=\"current-password\"\r\n                onChange={ ( ev ) => onChange( LOGIN_PASSWORD, ev.target.value ) }\r\n                onFocus={ () => { if ( warnings.password ) setWarnings( { ...warnings, password: false } ); } }\r\n            />\r\n            <FormControlLabel\r\n                control={\r\n                    <Checkbox value=\"remember\" color=\"primary\" onChange={ ( ev ) => onChange( LOGIN_REMEMBER, ev.target.checked ) } />\r\n                }\r\n                label=\"Remember me\"\r\n            />\r\n            <Button\r\n                type=\"submit\"\r\n                fullWidth\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className={ classes.submit }\r\n                onClick={ login }\r\n            >\r\n                Sign In\r\n            </Button>\r\n\r\n\r\n            <GoogleLogin\r\n                clientId=\"168208016917-nqhlde2rhcavae7jkvje20jvpeho1v56.apps.googleusercontent.com\"\r\n                render={ ( renderProps ) => (\r\n                    <Button className={ classes.googleButton } color=\"primary\" fullWidth onClick={ renderProps.onClick } disabled={ renderProps.disabled } startIcon={ <Icon /> } variant=\"contained\">\r\n                        Google Sign In\r\n                    </Button>\r\n                ) }\r\n                onSuccess={ googleSuccess }\r\n                onFailure={ googleError }\r\n                cookiePolicy=\"single_host_origin\"\r\n            />\r\n\r\n            <Grid container>\r\n                <Grid item xs>\r\n                    <Link to=\"/\" className={ classes.Link }>\r\n                        Forgot password?\r\n                    </Link>\r\n                </Grid>\r\n                <Grid item>\r\n                    <Link to=\"/register\" className={ classes.Link }>\r\n                        { \"Don't have an account? Sign Up\" }\r\n                    </Link>\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default From;\r\n","import React, { useEffect } from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport { useSelector } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport Form from './Form';\r\n\r\nconst useStyles = makeStyles( ( theme ) => ( {\r\n    paper: {\r\n        marginTop: theme.spacing( 8 ),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing( 1 ),\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing( 1 ),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing( 3, 0, 2 ),\r\n    },\r\n} ) );\r\n\r\ninterface Props\r\n{\r\n\r\n}\r\n\r\nconst SignIn: React.FC<Props> = ( props: Props ) =>\r\n{\r\n    const classes = useStyles();\r\n    const user = useSelector( ( state: any ) => state.profile );\r\n    const history = useHistory();\r\n\r\n    useEffect( () =>\r\n    {\r\n        if ( user )\r\n        {\r\n            history.goBack();\r\n        }\r\n    }, [] );\r\n\r\n    return (\r\n        <Container component=\"main\" maxWidth=\"xs\">\r\n            <CssBaseline />\r\n            <div className={ classes.paper }>\r\n                <Avatar className={ classes.avatar }>\r\n                    <LockOutlinedIcon />\r\n                </Avatar>\r\n                <Typography component=\"h1\" variant=\"h5\">\r\n                    Sign in\r\n                </Typography>\r\n                <Form />\r\n            </div>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default SignIn;","import React, { useState } from 'react';\r\nimport { Grid, TextField, Button, Checkbox } from '@material-ui/core';\r\nimport { makeStyles, Theme } from '@material-ui/core/styles';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport { REGISTER_FIRST_NAME, REGISTER_LAST_NAME, REGISTER_EMAIL, REGISTER_PASSWORD, REGISTER_RE_PASSWORD, MAIL_FORMAT, SnackBarVariants } from '../../../constants';\r\nimport { authentificationAction, snackbarActionManager } from '../../../actions';\r\nimport { GoogleLogin } from 'react-google-login';\r\nimport Icon from '../GoogleIcon';\r\n\r\nconst useStyles = makeStyles( ( theme: Theme ) => ( {\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing( 3 ),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing( 3, 0, 2 ),\r\n    },\r\n    Link: {\r\n        textDecoration: 'none',\r\n        color: '#1976d2',\r\n        \"&:hover, &:focus\": {\r\n            textDecoration: 'underline',\r\n        }\r\n    },\r\n    alertField: {\r\n        '&>label': {\r\n            color: 'red'\r\n        },\r\n        '& fieldset': {\r\n            borderColor: 'red'\r\n        }\r\n    },\r\n    googleButton: {\r\n\r\n    },\r\n\r\n} ) );\r\n\r\ninterface Props\r\n{\r\n\r\n}\r\n\r\nconst Form: React.FC<Props> = ( props: Props ) =>\r\n{\r\n\r\n    const classes = useStyles();\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n\r\n    //fields state value binding\r\n    const [ firstName, setFirstName ] = useState( '' );\r\n    const [ lastName, setLastName ] = useState( '' );\r\n    const [ email, setEmail ] = useState( '' );\r\n    const [ password, setPassword ] = useState( '' );\r\n    const [ rePassword, setRePassword ] = useState( '' );\r\n\r\n    //fields state warning bindings\r\n    const [ warnings, setWarnings ] = useState( {\r\n        firstName: false,\r\n        lastName: false,\r\n        email: false,\r\n        password: false,\r\n        rePassword: false,\r\n    } );\r\n\r\n    /**\r\n     * fires on any input change event\r\n     * @param id identifier for each fields state\r\n     * @param value the value that will be stored in the state value\r\n     */\r\n    const onChange = ( id: string, value: string ) =>\r\n    {\r\n        switch ( id )\r\n        {\r\n            case REGISTER_FIRST_NAME:\r\n                setFirstName( value );\r\n                break;\r\n            case REGISTER_LAST_NAME:\r\n                setLastName( value );\r\n                break;\r\n            case REGISTER_EMAIL:\r\n                setEmail( value );\r\n                break;\r\n            case REGISTER_PASSWORD:\r\n                setPassword( value );\r\n                break;\r\n            case REGISTER_RE_PASSWORD:\r\n                setRePassword( value );\r\n                break;\r\n        }\r\n    };\r\n\r\n    /**\r\n     * checks all fields state and marks the coresponding input if the value is invalid\r\n     * @returns true if all fields state have valid values\r\n     */\r\n\r\n    const checkFields: () => boolean = () =>\r\n    {\r\n        if ( !firstName )\r\n        {\r\n            setWarnings( { ...warnings, firstName: true } );\r\n            return false;\r\n        }\r\n        if ( !lastName )\r\n        {\r\n            setWarnings( { ...warnings, lastName: true } );\r\n            return false;\r\n        }\r\n        if ( !email || !MAIL_FORMAT.test( email ) )\r\n        {\r\n            setWarnings( { ...warnings, email: true } );\r\n            return false;\r\n        }\r\n        if ( password.length < 8 )\r\n        {\r\n            setWarnings( { ...warnings, password: true } );\r\n            return false;\r\n        }\r\n        if ( password !== rePassword )\r\n        {\r\n            setWarnings( { ...warnings, password: true, rePassword: true } );\r\n            return false;\r\n        }\r\n        return true;\r\n    };\r\n\r\n\r\n    const googleSuccess = async ( res: any ) =>\r\n    {\r\n        const result = res?.profileObj;\r\n        const token = res?.tokenId;\r\n\r\n        console.log( result );\r\n\r\n        const form = new FormData();\r\n\r\n        form.append( 'email', result.email );\r\n        form.append( 'password', result.googleId );\r\n        form.append( 'firstName', result.givenName );\r\n        form.append( 'lastName', result.familyName );\r\n        form.append( 'icon', result.imageUrl );\r\n\r\n\r\n        dispatch( authentificationAction.googleLogin( form, registerSuccess ) );\r\n    };\r\n\r\n    const googleError = ( error: any ) =>\r\n    {\r\n        dispatch( snackbarActionManager.show( { variant: SnackBarVariants.fail, message: error.message } ) );\r\n        console.log( error );\r\n    };\r\n\r\n    //fires the register request\r\n    const signup = async () =>\r\n    {\r\n        if ( checkFields() )\r\n        {\r\n            const form = new FormData();\r\n\r\n            form.append( 'firstName', firstName );\r\n            form.append( 'lastName', lastName );\r\n            form.append( 'email', email );\r\n            form.append( 'password', password );\r\n\r\n            dispatch( authentificationAction.register( form, registerSuccess, registerFail ) );\r\n        }\r\n    };\r\n\r\n    /**\r\n     * callback function for the authentificationAction.register action\r\n     * @param variant the snackbar variant(a string that determines the color)\r\n     * @param message the message displayed by the snackbar\r\n     */\r\n    const registerSuccess = ( variant: SnackBarVariants, message: string ) =>\r\n    {\r\n        dispatch( snackbarActionManager.show( {\r\n            variant: variant,\r\n            message: message\r\n        } ) );\r\n        history.push( '/' );\r\n    };\r\n\r\n    /**\r\n     * callback function for the authentificationAction.register action\r\n     * @param variant the snackbar variant(a string that determines the color)\r\n     * @param message the message displayed by the snackbar\r\n     */\r\n    const registerFail = ( variant: SnackBarVariants, message: string ) =>\r\n    {\r\n        dispatch( snackbarActionManager.show( {\r\n            variant: variant,\r\n            message: message,\r\n        } ) );\r\n    };\r\n\r\n    /**\r\n     * similar to onChange, this function removes the warning marking on the input field on focus\r\n     * @param id identifier for each field's state\r\n     */\r\n    const resetStyle = ( id: string ) =>\r\n    {\r\n        switch ( id )\r\n        {\r\n            case REGISTER_FIRST_NAME:\r\n                if ( warnings.firstName )\r\n                {\r\n                    setWarnings( { ...warnings, firstName: false } );\r\n                }\r\n                break;\r\n            case REGISTER_LAST_NAME:\r\n                if ( warnings.lastName )\r\n                    setWarnings( { ...warnings, lastName: false } );\r\n                break;\r\n            case REGISTER_EMAIL:\r\n                if ( warnings.email )\r\n                    setWarnings( { ...warnings, email: false } );\r\n                break;\r\n            case REGISTER_PASSWORD:\r\n                if ( warnings.password )\r\n                    setWarnings( { ...warnings, password: false } );\r\n                break;\r\n            case REGISTER_RE_PASSWORD:\r\n                if ( warnings.rePassword )\r\n                    setWarnings( { ...warnings, rePassword: false } );\r\n                break;\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Grid container className={ classes.form }>\r\n            <Grid container spacing={ 2 }>\r\n                <Grid item xs={ 12 } sm={ 6 }>\r\n                    <TextField\r\n                        autoComplete=\"fname\"\r\n                        name=\"firstName\"\r\n                        variant=\"outlined\"\r\n                        required\r\n                        className={ warnings.firstName ? classes.alertField : null }\r\n                        fullWidth\r\n                        id=\"firstName\"\r\n                        label=\"First Name\"\r\n                        autoFocus\r\n                        onFocus={ () => resetStyle( REGISTER_FIRST_NAME ) }\r\n                        onChange={ ( ev ) => onChange( REGISTER_FIRST_NAME, ev.target.value ) }\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={ 12 } sm={ 6 }>\r\n                    <TextField\r\n                        variant=\"outlined\"\r\n                        required\r\n                        fullWidth\r\n                        className={ warnings.lastName ? classes.alertField : null }\r\n                        id=\"lastName\"\r\n                        label=\"Last Name\"\r\n                        name=\"lastName\"\r\n                        autoComplete=\"lname\"\r\n                        onFocus={ () => resetStyle( REGISTER_LAST_NAME ) }\r\n                        onChange={ ( ev ) => onChange( REGISTER_LAST_NAME, ev.target.value ) }\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={ 12 }>\r\n                    <TextField\r\n                        variant=\"outlined\"\r\n                        required\r\n                        fullWidth\r\n                        className={ warnings.email ? classes.alertField : null }\r\n                        id=\"email\"\r\n                        label=\"Email Address\"\r\n                        name=\"email\"\r\n                        autoComplete=\"email\"\r\n                        onFocus={ () => resetStyle( REGISTER_EMAIL ) }\r\n                        onChange={ ( ev ) => onChange( REGISTER_EMAIL, ev.target.value ) }\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={ 12 }>\r\n                    <TextField\r\n                        variant=\"outlined\"\r\n                        required\r\n                        fullWidth\r\n                        className={ warnings.password ? classes.alertField : null }\r\n                        name=\"password\"\r\n                        label=\"Password\"\r\n                        type=\"password\"\r\n                        autoComplete=\"current-password\"\r\n                        onFocus={ () => resetStyle( REGISTER_PASSWORD ) }\r\n                        onChange={ ( ev ) => onChange( REGISTER_PASSWORD, ev.target.value ) }\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={ 12 }>\r\n                    <TextField\r\n                        variant=\"outlined\"\r\n                        required\r\n                        fullWidth\r\n                        className={ warnings.rePassword ? classes.alertField : null }\r\n                        name=\"re-password\"\r\n                        label=\"Re-Password\"\r\n                        type=\"password\"\r\n                        onFocus={ () => resetStyle( REGISTER_RE_PASSWORD ) }\r\n                        onChange={ ( ev ) => onChange( REGISTER_RE_PASSWORD, ev.target.value ) }\r\n                    />\r\n                </Grid>\r\n                {/* <Grid item xs={ 12 }>\r\n                    <FormControlLabel\r\n                        control={ <Checkbox value=\"allowExtraEmails\" color=\"primary\" /> }\r\n                        label=\"I want to receive inspiration, marketing promotions and updates via email.\"\r\n                    />\r\n                </Grid> */}\r\n            </Grid>\r\n            <Button\r\n                type=\"submit\"\r\n                fullWidth\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className={ classes.submit }\r\n                onClick={ signup }\r\n            >\r\n                Sign Up\r\n            </Button>\r\n            <GoogleLogin\r\n                clientId=\"168208016917-nqhlde2rhcavae7jkvje20jvpeho1v56.apps.googleusercontent.com\"\r\n                render={ ( renderProps ) => (\r\n                    <Button className={ classes.googleButton } color=\"primary\" fullWidth onClick={ renderProps.onClick } disabled={ renderProps.disabled } startIcon={ <Icon /> } variant=\"contained\">\r\n                        Google Sign In\r\n                    </Button>\r\n                ) }\r\n                onSuccess={ googleSuccess }\r\n                onFailure={ googleError }\r\n                cookiePolicy=\"single_host_origin\"\r\n            />\r\n            <Grid container justify=\"flex-end\">\r\n                <Grid item>\r\n                    <Link to=\"/login\" className={ classes.Link }>\r\n                        Already have an account? Sign in\r\n                            </Link>\r\n                </Grid>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n};\r\n\r\nexport default Form;\r\n","import React from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\n\r\nimport From from './Form';\r\n\r\n\r\nconst useStyles = makeStyles( ( theme ) => ( {\r\n    paper: {\r\n        marginTop: theme.spacing( 8 ),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing( 1 ),\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n} ) );\r\n\r\ninterface Props\r\n{\r\n\r\n}\r\n\r\nconst RegisterComponent: React.FC<Props> = ( props: Props ) =>\r\n{\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Container component=\"main\" maxWidth=\"xs\">\r\n            <CssBaseline />\r\n            <div className={ classes.paper }>\r\n                <Avatar className={ classes.avatar }>\r\n                    <LockOutlinedIcon />\r\n                </Avatar>\r\n                <Typography component=\"h1\" variant=\"h5\">\r\n                    Sign up\r\n                </Typography>\r\n                <From />\r\n            </div>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default RegisterComponent;\r\n","import MuiAlert, { AlertProps } from '@material-ui/lab/Alert';\r\n\r\n//\r\nfunction Alert ( props: AlertProps )\r\n{\r\n    return <MuiAlert elevation={ 6 } variant=\"filled\" { ...props } />;\r\n}\r\n\r\nexport { Alert };","import React, { useState } from 'react';\r\nimport { BrowserRouter as Router, Switch, Route, useHistory, useLocation } from 'react-router-dom';\r\nimport { Grid } from '@material-ui/core';\r\n\r\n\r\n//redux\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\n//links\r\nimport PageNotFound from './NotFountComponent';\r\nimport Home from './Home';\r\nimport Nav from './Navigation';\r\nimport AddProduct from './Admin/AddProduct';\r\nimport UpdateProduct from './Admin/UpdateProduct';\r\nimport { AccountInfo, Login, Register } from './User';\r\n\r\n\r\n\r\n//@snackbar imports\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport { Alert } from './Alert';\r\nimport { snackbarActionManager } from '../actions';\r\n\r\n\r\n//@main component that defines the routes\r\nconst Main: React.FC = () =>\r\n{\r\n\r\n    /**\r\n     * TODO: Make a single From component\r\n     * TODO: Make the promotion and stock funtionality\r\n     * TODO: Make the cart\r\n     * TODO: !!!Make the payment functionality!!!\r\n     * TODO: Improve design\r\n     */\r\n\r\n\r\n    const dispatch = useDispatch();\r\n\r\n\r\n    //@redux state for snackbar dinamic data\r\n    const snackInfo = useSelector( ( state: any ) => state.snackbar );\r\n\r\n    /**  @profile redux state for logged in user */\r\n    const profile = useSelector( ( state: any ) => state.profile );\r\n\r\n    //@callback for snackbar hide function\r\n    const handleSnackbarClose = ( event?: React.SyntheticEvent, reason?: string ) =>\r\n    {\r\n        if ( reason === 'clickaway' )\r\n        {\r\n            dispatch( snackbarActionManager.hide() );\r\n            return;\r\n        }\r\n        dispatch( snackbarActionManager.hide() );\r\n    };\r\n\r\n    /**visibility of navbar\r\n     * ! false only on PageNotFound\r\n    */\r\n    const [ navVisibility, setNavVisibility ] = useState( true );\r\n\r\n\r\n\r\n\r\n\r\n    /**\r\n     * @param path string that coresponds to the main path(excludes ids)\r\n     * @param match match object contains information about how a <Route path> matched the URL\r\n     * @returns the component if the user is logged and is considered admin or PageNotFound if the user is not logged or is\r\n     * not considered admin\r\n     */\r\n\r\n    const restrictAdminPages = ( path: string, match?: any ) =>\r\n    {\r\n        if ( profile && profile.admin )\r\n        {\r\n            switch ( path )\r\n            {\r\n                case '/admin/add-product':\r\n                    return <AddProduct />;\r\n                case '/admin/product':\r\n                    return <UpdateProduct match={ match } />;\r\n            }\r\n        }\r\n        return <PageNotFound showNav={ setNavVisibility } />;\r\n    };\r\n\r\n    return (\r\n        <Router>\r\n            <Nav isVisible={ navVisibility } />\r\n            <Grid container>\r\n                <Grid item xs={ 1 } md={ 1 } lg={ 2 } />\r\n                <Grid item xs={ 10 } lg={ 8 }>\r\n                    <Switch>\r\n                        <Route exact path='/' component={ Home } />\r\n                        <Route exact path={ '/admin' } component={ Home } />\r\n                        <Route exact path='/admin/add-product' render={ () => restrictAdminPages( '/admin/add-product' ) } />\r\n                        <Route path='/admin/product/:id' render={ ( { match } ) => restrictAdminPages( '/admin/product', match ) } />\r\n                        <Route path='/account' component={ AccountInfo } />\r\n                        <Route path='/login' component={ Login } />\r\n                        <Route path='/register' component={ Register } />\r\n                        <Route path='*'>\r\n                            <PageNotFound showNav={ setNavVisibility } />\r\n                        </Route>\r\n                    </Switch>\r\n\r\n\r\n                    <Snackbar\r\n                        open={ snackInfo.open }\r\n                        autoHideDuration={ 4000 }\r\n                        onClose={ handleSnackbarClose }\r\n                        anchorOrigin={ {\r\n                            vertical: 'bottom',\r\n                            horizontal: 'right'\r\n                        } }>\r\n                        <Alert onClose={ handleSnackbarClose } severity={ snackInfo.variant }>\r\n                            { snackInfo.message }\r\n                        </Alert>\r\n                    </Snackbar>\r\n                </Grid>\r\n                <Grid item xs={ 1 } lg={ 2 } />\r\n\r\n\r\n            </Grid>\r\n\r\n        </Router>\r\n    );\r\n};\r\n\r\nexport default Main;\r\n","import React from 'react';\r\nimport Main from './components/Main';\r\n\r\nconst App: React.FC = () =>\r\n{\r\n  return (\r\n    <Main />\r\n  );\r\n};\r\n\r\nexport default App;\r\n\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { combineReducers } from 'redux';\r\nimport { authentificationReducer } from './authentificationReducer';\r\nimport { productsReducer, productsAreLoadedReducer } from './productsReducer';\r\nimport { snackbarReducer } from './snackbarReducers';\r\n\r\n// @params: \r\n//@producst: an array state of products saved\r\n//@productsAreLoaded: a boolean state that indicates if we have out products updated form the server or not\r\n//@snackbar: an object state that contains weather is closed or open, the message and the type/variant\r\n\r\nconst reducer = combineReducers( {\r\n    profile: authentificationReducer,\r\n    products: productsReducer,\r\n    productsAreLoaded: productsAreLoadedReducer,\r\n    snackbar: snackbarReducer\r\n} );\r\n\r\nexport default reducer;","import { userActionTypes } from \"../constants\";\r\n\r\ninterface Action\r\n{\r\n    type: string,\r\n    payload: Crediantials,\r\n    isForced?: boolean;\r\n}\r\n\r\n\r\n\r\ninterface Crediantials\r\n{\r\n    result: any,\r\n    token: string,\r\n}\r\n\r\n\r\nconst authentificationReducer = ( state: Crediantials = null, action: Action ) =>\r\n{\r\n    switch ( action.type )\r\n    {\r\n        case userActionTypes.LOGIN:\r\n            localStorage.setItem( 'profile', JSON.stringify( { ...action?.payload } ) );\r\n            state = action.payload.result;\r\n            break;\r\n        case userActionTypes.LOGOUT:\r\n            state = null;\r\n            localStorage.removeItem( 'profile' );\r\n            break;\r\n        case userActionTypes.RELOG:\r\n            state = action.payload;\r\n            break;\r\n    }\r\n    return state;\r\n};\r\n\r\nexport { authentificationReducer };","import { productActionsTypes } from '../constants';\r\ninterface Action {\r\n    type: string,\r\n    payload: any,\r\n    isForced?: boolean;\r\n}\r\n\r\n\r\n\r\n//@products state\r\nconst productsReducer = (state: any[] = [], action: Action) => {\r\n    switch (action.type) {\r\n        case productActionsTypes.GET_PRODUCST:\r\n            return action.payload;\r\n        case productActionsTypes.ADD_PRODUCT || productActionsTypes.ADD_MULTIPLE_PRODUCTS:\r\n            return [...state, action.payload];\r\n        case productActionsTypes.UPDATE_PRODUCT:\r\n            return state.map((product) => product._id === action.payload._id ? action.payload : product);\r\n        case productActionsTypes.DELETE_PRODUCT:\r\n            return state.filter((product) => product._id !== action.payload);\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n\r\n//@productsAreLoaded state\r\nconst productsAreLoadedReducer = (state: boolean = false, action: Action) => {\r\n    switch (action.type) {\r\n        case productActionsTypes.PRODUCTS_LOADED:\r\n            return true;\r\n        case productActionsTypes.DUMP_PRODUCTS:\r\n            return false;\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport { productsReducer, productsAreLoadedReducer };","import { snackbarActionTypes } from '../constants';\r\n\r\ninterface Action\r\n{\r\n    type: string,\r\n    payload: any,\r\n    isForced?: boolean;\r\n}\r\n\r\ninterface SnackInfo\r\n{\r\n    open: boolean,\r\n    message: string,\r\n    variant: string,\r\n}\r\n\r\nconst snackbarReducer = ( state: SnackInfo = { open: false, message: '', variant: 'info' }, action: Action ) =>\r\n{\r\n    switch ( action.type )\r\n    {\r\n        case snackbarActionTypes.SHOW:\r\n            return { open: true, ...action.payload };\r\n        case snackbarActionTypes.HIDE:\r\n            return { ...state, open: false };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n\r\nexport { snackbarReducer };","import { createStore, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport reducer from '../reducer';\r\n\r\n\r\nexport const store = createStore( reducer, compose( applyMiddleware( thunk ), ( window as any ).__REDUX_DEVTOOLS_EXTENSION__ ? ( window as any ).__REDUX_DEVTOOLS_EXTENSION__ && ( window as any ).__REDUX_DEVTOOLS_EXTENSION__() : (f:any)=>f ) );","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { Provider } from 'react-redux';\r\nimport { store } from './store';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={ store }>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById( 'root' )\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","export const GET_PRODUCST = 'GET';\r\nexport const ADD_PRODUCT = 'ADD_PRODUCT';\r\nexport const ADD_MULTIPLE_PRODUCTS = 'ADD_PRODUCTS';\r\nexport const UPDATE_PRODUCT = 'UPDATE';\r\nexport const DELETE_PRODUCT = 'DELETE';\r\nexport const PRODUCTS_LOADED = 'LOADED';\r\nexport const DUMP_PRODUCTS = 'DUMP';","\r\n//action types\r\nexport const SHOW = 'SHOW';\r\nexport const HIDE = 'HIDE';\r\n\r\nenum SnackBarVariants\r\n{\r\n    success = 'success',\r\n    fail = 'error',\r\n    warning = 'warning',\r\n    info = 'info',\r\n}\r\n\r\n\r\n//product request messages\r\n\r\nexport type snackVariant = \"error\" | \"warning\" | \"info\" | \"success\";\r\n\r\nenum AddProductMessages\r\n{\r\n    success = \"The product was added succesfully!\",\r\n    fail = \"Something went wrong...\",\r\n    conflict = \"Product name is already in used!\",\r\n    multisuccess = \"Products added succesfully!\"\r\n}\r\n\r\nenum LoginMessages\r\n{\r\n    success = \"Welcome to <Website name>\",\r\n    fail = \"Something went wrong\",\r\n    no_user = \"No user found\"\r\n}\r\n\r\n\r\nexport { AddProductMessages, LoginMessages, SnackBarVariants };","export enum userActionTypes\r\n{\r\n    LOGIN = 'LOGIN',\r\n    LOGOUT = 'LOGOUT',\r\n    RELOG = 'RELOG',\r\n}","interface Alert\r\n{\r\n    title: string,\r\n    content: string;\r\n}\r\n\r\nexport const NoSrcAlert: Alert = {\r\n    title: 'No image for product!',\r\n    content: 'Are you sure you want to save this product without a picture?'\r\n};","enum FieldSelector\r\n{\r\n    name = \"NAME\",\r\n    desc = \"DESCRIPTION\",\r\n    details = \"DETAILS\",\r\n    prom = \"PROMOTION\",\r\n    price = \"PRICE\",\r\n    stock = \"PIECES\",\r\n    src = \"SRC\",\r\n}\r\n\r\nexport { FieldSelector };","const LOGIN_EMAIL = 'EMAIL';\r\nconst LOGIN_PASSWORD = 'PASSWORD';\r\nconst LOGIN_REMEMBER = 'REMEMBER';\r\n\r\nconst REGISTER_FIRST_NAME = 'FIRST_NAME';\r\nconst REGISTER_LAST_NAME = 'LAST_NAME';\r\nconst REGISTER_EMAIL = 'EMAIL';\r\nconst REGISTER_PASSWORD = 'PASSWORD';\r\nconst REGISTER_RE_PASSWORD = 'RE-PASSWORD';\r\n\r\nexport { LOGIN_EMAIL, LOGIN_PASSWORD, LOGIN_REMEMBER };\r\n\r\nexport { REGISTER_FIRST_NAME, REGISTER_LAST_NAME, REGISTER_EMAIL, REGISTER_PASSWORD, REGISTER_RE_PASSWORD };","export const MAIL_FORMAT = /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;","import { GET_PRODUCST, ADD_PRODUCT, ADD_MULTIPLE_PRODUCTS, UPDATE_PRODUCT, DELETE_PRODUCT, PRODUCTS_LOADED, DUMP_PRODUCTS } from './productActionTypes';\r\nimport { SHOW, HIDE, AddProductMessages, LoginMessages, SnackBarVariants } from './snackbarConstants';\r\nimport { userActionTypes } from './userActionTypes';\r\nimport { NoSrcAlert } from './AlertMessages';\r\nimport { FieldSelector } from './FieldSelectors';\r\nimport { LOGIN_EMAIL, LOGIN_PASSWORD, LOGIN_REMEMBER, REGISTER_FIRST_NAME, REGISTER_LAST_NAME, REGISTER_EMAIL, REGISTER_PASSWORD, REGISTER_RE_PASSWORD } from './AuthFields';\r\nimport { MAIL_FORMAT } from './StringFormats';\r\n\r\nconst productActionsTypes = { GET_PRODUCST, ADD_PRODUCT, ADD_MULTIPLE_PRODUCTS, UPDATE_PRODUCT, DELETE_PRODUCT, PRODUCTS_LOADED, DUMP_PRODUCTS };\r\n\r\nconst snackbarActionTypes = { SHOW, HIDE };\r\n\r\n\r\nexport { AddProductMessages, LoginMessages, SnackBarVariants };\r\nexport { productActionsTypes, snackbarActionTypes, userActionTypes };\r\n\r\nexport { NoSrcAlert };\r\nexport { FieldSelector };\r\nexport { LOGIN_EMAIL, LOGIN_PASSWORD, LOGIN_REMEMBER, REGISTER_FIRST_NAME, REGISTER_LAST_NAME, REGISTER_EMAIL, REGISTER_PASSWORD, REGISTER_RE_PASSWORD };\r\nexport { MAIL_FORMAT };","import React, { useState } from 'react';\r\nimport clsx from 'clsx';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport\r\n    {\r\n        Card,\r\n        CardHeader,\r\n        IconButton,\r\n        CardMedia,\r\n        CardContent,\r\n        Typography,\r\n        CardActions,\r\n        Collapse,\r\n\r\n    } from '@material-ui/core';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AddShoppingCartIcon from '@material-ui/icons/AddShoppingCart';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport { red } from '@material-ui/core/colors';\r\nimport BrokenImageIcon from '@material-ui/icons/BrokenImage';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { productsActions } from '../actions';\r\n\r\nconst useStyles = makeStyles( ( theme ) => ( {\r\n    root: {\r\n        width: '100%',\r\n        [ theme.breakpoints.up( 'md' ) ]: {\r\n            maxWidth: 345,\r\n        }\r\n    },\r\n    media: {\r\n        display: 'flex',\r\n        height: 0,\r\n        paddingTop: '56.25%', // 16:9\r\n        justifyContent: 'center',\r\n        alignItems: 'center'\r\n    },\r\n    expand: {\r\n        transform: 'rotate(0deg)',\r\n        marginLeft: 'auto',\r\n        transition: theme.transitions.create( 'transform', {\r\n            duration: theme.transitions.duration.shortest,\r\n        } ),\r\n    },\r\n    expandOpen: {\r\n        transform: 'rotate(180deg)',\r\n    },\r\n    avatar: {\r\n        backgroundColor: red[ 500 ],\r\n    },\r\n    description: {\r\n        overflow: 'hidden',\r\n        // wordWrap: 'normal'\r\n    },\r\n    icon: {\r\n        top: '-90px',\r\n        position: 'relative',\r\n    }\r\n} ) );\r\n\r\n//@params: @active = activates the action buttons when #PROTO-DISPLAY\r\ninterface Props\r\n{\r\n    _id: string;\r\n    name: string;\r\n    description?: string;\r\n    details?: string;\r\n    promotion?: string | number;\r\n    price: number;\r\n    piecesLeft?: number;\r\n    src?: string;\r\n    active: boolean;\r\n}\r\n\r\n\r\n//TODO documnet this component\r\n//@component that renders the card component of a product\r\nconst ProductCard: React.FC<Props> = ( props: Props ) =>\r\n{\r\n\r\n    const dispatch = useDispatch();\r\n    //bruteforce state of login\r\n    const profile = useSelector( ( state: any ) => state.profile );\r\n    const classes = useStyles();\r\n    const {\r\n        _id,\r\n        name,\r\n        description,\r\n        details,\r\n        promotion,\r\n        price,\r\n        piecesLeft,\r\n        active,\r\n        src,\r\n    } = props;\r\n\r\n    //@details block expand state\r\n    const [ expanded, setExpanded ] = useState( false );\r\n\r\n\r\n    //@expands the details block inside card\r\n    const handleExpandClick = () =>\r\n    {\r\n        setExpanded( !expanded );\r\n    };\r\n\r\n    //@deletes the current item using the ID only if the card is active(in admin/ only)\r\n    const deteleItemHandler = ( id: string ) =>\r\n    {\r\n        if ( active )\r\n        {\r\n            dispatch( productsActions.delete( id ) );\r\n        }\r\n    };\r\n\r\n    const headerAction = () =>\r\n    {\r\n        if ( profile )\r\n        {\r\n            if ( profile.admin )\r\n            {\r\n                if ( active )\r\n                {\r\n                    return ( <Link to={ `/admin/product/${ _id }` }>\r\n                        <IconButton aria-label=\"settings\">\r\n                            <MoreVertIcon />\r\n                        </IconButton>\r\n                    </Link> );\r\n                }\r\n                return ( <IconButton aria-label=\"settings\">\r\n                    <MoreVertIcon />\r\n                </IconButton> );\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n\r\n    return (\r\n        <Card className={ classes.root }>\r\n            <CardHeader\r\n                action={\r\n                    headerAction()\r\n                }\r\n                title={ name }\r\n                subheader={ `${ price } RON` }\r\n            />\r\n\r\n\r\n            <CardMedia\r\n                className={ classes.media }\r\n                children={ src ? null : <BrokenImageIcon className={ classes.icon } /> }\r\n                image={ src }\r\n                title=\"asd\"\r\n            />\r\n\r\n\r\n            <CardContent className={ classes.description }>\r\n                <Typography variant=\"body2\" display='block' color=\"textSecondary\" component=\"p\">\r\n                    { description }\r\n                </Typography>\r\n            </CardContent>\r\n\r\n\r\n            <CardActions disableSpacing>\r\n\r\n                {\r\n                    profile && profile.admin ?\r\n                        <IconButton aria-label=\"delete\" onClick={ () => deteleItemHandler( _id ) }>\r\n                            <DeleteIcon />\r\n                        </IconButton> :\r\n                        null\r\n                }\r\n\r\n                { profile ?\r\n                    <IconButton aria-label=\"add to favorites\">\r\n                        <FavoriteIcon />\r\n                    </IconButton> :\r\n                    null\r\n                }\r\n\r\n                <IconButton aria-label=\"share\">\r\n                    <AddShoppingCartIcon />\r\n                </IconButton>\r\n\r\n\r\n                { details ?\r\n                    <IconButton\r\n                        className={ clsx( classes.expand, {\r\n                            [ classes.expandOpen ]: expanded,\r\n                        } ) }\r\n                        onClick={ handleExpandClick }\r\n                        aria-expanded={ expanded }\r\n                        aria-label=\"show more\"\r\n                    >\r\n                        <ExpandMoreIcon />\r\n                    </IconButton> : null }\r\n\r\n\r\n            </CardActions>\r\n\r\n\r\n            <Collapse in={ expanded } timeout=\"auto\" unmountOnExit>\r\n                <CardContent>\r\n                    <Typography variant=\"body2\" component='p' gutterBottom display='block' color=\"textSecondary\">\r\n                        { details }\r\n                    </Typography>\r\n                </CardContent>\r\n            </Collapse>\r\n\r\n\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default ProductCard;\r\n"],"sourceRoot":""}