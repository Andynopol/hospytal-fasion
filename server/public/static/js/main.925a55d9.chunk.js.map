{"version":3,"sources":["components/NotFountComponent.tsx","components/ProductCard.tsx","components/Home/index.tsx","components/Navigation/Account.tsx","components/Navigation/Logo.tsx","components/Navigation/NavMenu.tsx","components/Navigation/DrowerMenuButton.tsx","components/Navigation/DrowerMenu.tsx","components/Navigation/Spacer.tsx","components/Navigation/index.tsx","components/AddProduct/Form.tsx","components/AddProduct/index.tsx","components/Main.tsx","App.tsx","reportWebVitals.ts","reducer/index.ts","reducer/authentificationReducer.ts","store/index.ts","index.tsx"],"names":["NotFountComponent","props","showNav","useEffect","useStyles","makeStyles","theme","root","width","breakpoints","up","maxWidth","media","display","height","paddingTop","justifyContent","alignItems","expand","transform","marginLeft","transition","transitions","create","duration","shortest","expandOpen","avatar","backgroundColor","red","description","overflow","ProductCard","isLogged","useSelector","state","classes","name","details","price","promotion","src","piecesLeft","useState","expanded","setExpanded","Card","className","CardHeader","action","IconButton","aria-label","title","subheader","CardMedia","children","image","CardContent","Typography","variant","color","component","CardActions","disableSpacing","clsx","onClick","aria-expanded","Collapse","in","timeout","unmountOnExit","gutterBottom","item","textAlign","Home","Grid","container","spacing","xs","md","icon","LongMenu","options","useDispatch","React","anchorEl","setAnchorEl","open","Boolean","handleAccountMenuClick","event","handleClose","StyledMenu","withStyles","paper","border","Menu","elevation","getContentAnchorEl","anchorOrigin","vertical","horizontal","transformOrigin","aria-controls","aria-haspopup","currentTarget","id","keepMounted","onClose","PaperProps","style","maxHeight","ITEM_HEIGHT","map","option","MenuItem","value","selected","minWidth","marginRight","Logo","List","padding","navLink","borderBottom","cursor","Link","textDecoration","userSelect","NavMenu","to","menuButton","hide","DrowerMenuButton","edge","drawerWidth","appBar","easing","sharp","leavingScreen","appBarShift","easeOut","enteringScreen","drawer","flexShrink","drawerPaper","drawerHeader","mixins","toolbar","content","flexGrow","contentShift","DrowerMenu","useTheme","closeMenu","Drawer","anchor","direction","Divider","text","path","ListItem","button","ListItemText","primary","grow","Spacer","relative","position","minHeight","growMobile","sectionDesktop","sectionMobile","invisible","GoldAppBar","boxShadow","AppBar","ButtonAppBar","isVisible","setOpen","Toolbar","Account","textFieldWrapper","textField","margin","buttonWrapper","Form","pieces","change","clear","justify","TextField","label","type","onChange","ev","InputLabelProps","shrink","onFocus","target","select","rows","multiline","Button","accept","hidden","startIcon","ProductAdder","cardName","setCardName","cardDescription","setCardDescription","cardDetails","setCardDetails","cardPromotion","setCardPromotion","cardPrice","setCardPrice","cardPieces","setCardPieces","cardSrc","setCardSrc","identifier","parseInt","console","log","Main","navVisibility","setNavVisibility","lg","exact","AddProduct","App","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","reducer","combineReducers","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.925a55d9.chunk.js","sourcesContent":["import React, { useEffect } from 'react';\r\n\r\ninterface Props\r\n{\r\n    showNav: ( is: boolean ) => void;\r\n}\r\n\r\nconst NotFountComponent: React.FC<Props> = ( props: Props ) =>\r\n{\r\n    const { showNav } = props;\r\n\r\n    useEffect( () =>\r\n    {\r\n        showNav( false );\r\n        return () =>\r\n        {\r\n            showNav( true );\r\n        };\r\n    }, [] );\r\n    return (\r\n        <>\r\n            No page on this path!\r\n        </>\r\n    );\r\n};\r\n\r\nexport default NotFountComponent;\r\n","import React, { useState } from 'react';\r\nimport clsx from 'clsx';\r\nimport { useSelector } from 'react-redux';\r\nimport\r\n{\r\n    Card,\r\n    CardHeader,\r\n    IconButton,\r\n    CardMedia,\r\n    CardContent,\r\n    Typography,\r\n    CardActions,\r\n    Collapse,\r\n\r\n} from '@material-ui/core';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n// import ShareIcon from '@material-ui/icons/Share';\r\nimport AddShoppingCartIcon from '@material-ui/icons/AddShoppingCart';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport { red } from '@material-ui/core/colors';\r\nimport CropOriginalIcon from '@material-ui/icons/CropOriginal';\r\n\r\nconst useStyles = makeStyles( ( theme ) => ( {\r\n    root: {\r\n        width: '100%',\r\n        [ theme.breakpoints.up( 'md' ) ]: {\r\n            maxWidth: 345,\r\n        }\r\n    },\r\n    media: {\r\n        display: 'flex',\r\n        height: 0,\r\n        paddingTop: '56.25%', // 16:9\r\n        justifyContent: 'center',\r\n        alignItems: 'center'\r\n    },\r\n    expand: {\r\n        transform: 'rotate(0deg)',\r\n        marginLeft: 'auto',\r\n        transition: theme.transitions.create( 'transform', {\r\n            duration: theme.transitions.duration.shortest,\r\n        } ),\r\n    },\r\n    expandOpen: {\r\n        transform: 'rotate(180deg)',\r\n    },\r\n    avatar: {\r\n        backgroundColor: red[ 500 ],\r\n    },\r\n    description: {\r\n        overflow: 'hidden',\r\n        // wordWrap: 'normal'\r\n    }\r\n} ) );\r\n\r\ninterface Props\r\n{\r\n    name: string;\r\n    description?: string;\r\n    details?: string;\r\n    promotion?: string | number;\r\n    price: number;\r\n    piecesLeft?: number;\r\n    src?: string;\r\n}\r\n\r\nconst ProductCard = ( props: Props ) =>\r\n{\r\n\r\n    const isLogged = useSelector( ( state: any ) => state.isLogged );\r\n    const classes = useStyles();\r\n    const { name,\r\n        description,\r\n        details,\r\n        promotion,\r\n        price,\r\n        piecesLeft,\r\n        src } = props;\r\n    const [ expanded, setExpanded ] = useState( false );\r\n\r\n\r\n    const handleExpandClick = () =>\r\n    {\r\n        setExpanded( !expanded );\r\n    };\r\n\r\n    return (\r\n        <Card className={ classes.root }>\r\n            <CardHeader\r\n                action={\r\n                    <IconButton aria-label=\"settings\">\r\n                        <MoreVertIcon />\r\n                    </IconButton>\r\n                }\r\n                title={ name }\r\n                subheader={ `${ price } RON` }\r\n            />\r\n            <CardMedia\r\n                className={ classes.media }\r\n                children={ src ? null : <CropOriginalIcon /> }\r\n                image={ src }\r\n                title=\"asd\"\r\n            />\r\n            <CardContent className={ classes.description }>\r\n                <Typography variant=\"body2\" display='block' color=\"textSecondary\" component=\"p\">\r\n                    { description }\r\n                </Typography>\r\n            </CardContent>\r\n            <CardActions disableSpacing>\r\n                { isLogged ?\r\n                    <IconButton aria-label=\"add to favorites\">\r\n                        <FavoriteIcon />\r\n                    </IconButton> :\r\n                    null }\r\n                <IconButton aria-label=\"share\">\r\n                    <AddShoppingCartIcon />\r\n                </IconButton>\r\n                { details ?\r\n                    <IconButton\r\n                        className={ clsx( classes.expand, {\r\n                            [ classes.expandOpen ]: expanded,\r\n                        } ) }\r\n                        onClick={ handleExpandClick }\r\n                        aria-expanded={ expanded }\r\n                        aria-label=\"show more\"\r\n                    >\r\n                        <ExpandMoreIcon />\r\n                    </IconButton> : null }\r\n            </CardActions>\r\n            <Collapse in={ expanded } timeout=\"auto\" unmountOnExit>\r\n                <CardContent>\r\n                    <Typography variant=\"body2\" component='p' gutterBottom display='block' color=\"textSecondary\">\r\n                        { details }\r\n                    </Typography>\r\n                </CardContent>\r\n            </Collapse>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default ProductCard;\r\n","import React, { useEffect } from 'react';\r\nimport Card from '../ProductCard';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Grid } from '@material-ui/core';\r\nimport CropOriginalIcon from '@material-ui/icons/CropOriginal';\r\n\r\n\r\nconst useStyles = makeStyles( () => ( {\r\n    root: {\r\n        paddingTop: 20,\r\n    },\r\n    item: {\r\n        textAlign: 'center'\r\n    }\r\n} ) );\r\n\r\ninterface Props\r\n{\r\n\r\n}\r\n\r\nconst Home = ( props: Props ) =>\r\n{\r\n\r\n\r\n    const classes = useStyles();\r\n\r\n    let items = [];\r\n\r\n    const getItem = () =>\r\n    {\r\n\r\n    };\r\n\r\n\r\n\r\n    return (\r\n        <Grid className={ classes.root } container spacing={ 2 }>\r\n            <Grid item xs={ 12 } md={ 4 } className={ classes.item } >\r\n                <Card name={ `test` } price={ 100 } details=\"asd\" />\r\n            </Grid>\r\n\r\n            <Grid item xs={ 12 } md={ 4 } className={ classes.item } >\r\n                <Card name={ `test` } price={ 100 } details=\"asd\" />\r\n            </Grid>\r\n\r\n            <Grid item xs={ 12 } md={ 4 } className={ classes.item } >\r\n                <Card name={ `test` } price={ 100 } details=\"asd\" />\r\n            </Grid>\r\n            {/* {items} */ }\r\n        </Grid>\r\n    );\r\n};\r\n\r\nexport default Home;\r\n","import React from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport { authentificationAction } from '../../actions';\r\n\r\ninterface StyleMenuProps {\r\n  id: string;\r\n  anchorEl: any;\r\n  keepMounted: any;\r\n  open: boolean;\r\n  onClose: () => void;\r\n  PaperProps: {};\r\n\r\n}\r\n\r\ntype OptionsInterface = [string, string];\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  icon: {\r\n    color: '#fafafa',\r\n  }\r\n}));\r\n\r\n\r\n\r\nconst ITEM_HEIGHT = 48;\r\n\r\n\r\nconst LongMenu: React.FC = () => {\r\n\r\n  const isLogged = useSelector((state: any) => state.isLogged);\r\n  const dispatch = useDispatch();\r\n\r\n  const options: OptionsInterface = isLogged ? ['Account', 'Logout'] : ['Login', 'Sign up'];\r\n\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const open = Boolean(anchorEl);\r\n\r\n  const classes = useStyles();\r\n\r\n  const handleClick = (event: any) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n\r\n  const handleAccountMenuClick = (event: any) => {\r\n    handleClose();\r\n    // sinteticalLogin(event);\r\n  };\r\n\r\n  const sinteticalLogin = (event: any) => {\r\n    switch (event.target.innerText) {\r\n      case 'Login':\r\n        dispatch(authentificationAction.login());\r\n        break;\r\n      case 'Logout':\r\n        dispatch(authentificationAction.logout());\r\n        break;\r\n    }\r\n  }\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const StyledMenu = withStyles({\r\n    paper: {\r\n      border: '1px solid #d3d4d5',\r\n    },\r\n  })((props: StyleMenuProps) => (\r\n    <Menu\r\n      elevation={0}\r\n      getContentAnchorEl={null}\r\n      anchorOrigin={{\r\n        vertical: 'bottom',\r\n        horizontal: 'center',\r\n      }}\r\n      transformOrigin={{\r\n        vertical: 'top',\r\n        horizontal: 'center',\r\n      }}\r\n      open={false}\r\n      {...props}\r\n    />\r\n  ));\r\n\r\n  return (\r\n    <div>\r\n      <IconButton\r\n        aria-label=\"more\"\r\n        aria-controls=\"long-menu\"\r\n        aria-haspopup=\"true\"\r\n        onClick={handleClick}\r\n      >\r\n        <AccountCircleIcon className={classes.icon} />\r\n      </IconButton>\r\n      <StyledMenu\r\n        id=\"long-menu\"\r\n        anchorEl={anchorEl}\r\n        keepMounted\r\n        open={open}\r\n        onClose={handleClose}\r\n        PaperProps={{\r\n          style: {\r\n            maxHeight: ITEM_HEIGHT * 4.5,\r\n            width: '20ch',\r\n          },\r\n        }}\r\n      >\r\n        {options.map((option) => (\r\n          <MenuItem value={option} key={option} selected={option === 'Pyxis'} onClick={handleAccountMenuClick}>\r\n            {option}\r\n          </MenuItem>\r\n        ))}\r\n      </StyledMenu>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LongMenu;","import React from 'react';\r\nimport { Typography } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles( ( theme ) => ( {\r\n    title: {\r\n        display: 'none',\r\n        [ theme.breakpoints.up( 'sm' ) ]: {\r\n            display: 'block',\r\n            minWidth: '180px',\r\n            marginRight: '30px',\r\n        },\r\n        userSelect: 'none',\r\n        fontWeight: 'bold'\r\n    },\r\n} ) );\r\n\r\nconst Logo = () =>\r\n{\r\n    const classes = useStyles();\r\n    return (\r\n        <Typography variant=\"h5\" className={ classes.title }>\r\n            Logo\r\n        </Typography>\r\n    );\r\n};\r\n\r\nexport default Logo;","import React from 'react';\r\nimport { Grid } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst useStyles = makeStyles( ( theme ) => ( {\r\n    List: {\r\n        padding: 0,\r\n        display: 'none',\r\n        [ theme.breakpoints.up( 'md' ) ]: {\r\n            display: 'flex',\r\n        },\r\n        listStyle: 'none',\r\n        margin: 0,\r\n    },\r\n    navLink: {\r\n        '&:hover': {\r\n            padding: '12px 12px 10px 12px',\r\n            borderBottom: '2px solid #262626',\r\n            cursor: 'pointer',\r\n        }\r\n    },\r\n    Link: {\r\n        color: '#fafafa',\r\n        textDecoration: 'none',\r\n        userSelect: 'none',\r\n        padding: '12px',\r\n        '&:hover': {\r\n            padding: '12px 12px 10px 12px',\r\n            borderBottom: '2px solid #fafafa',\r\n            cursor: 'pointer',\r\n        }\r\n    },\r\n} ) );\r\n\r\nconst NavMenu = () =>\r\n{\r\n    const classes = useStyles();\r\n    return (\r\n        <Grid container>\r\n            <ul className={ classes.List }>\r\n                <Link className={ classes.Link } to='/'>\r\n                    <li>Home</li>\r\n                </Link>\r\n                {/* <Link className={classes.Link} to='/services'>\r\n                    <li>Services</li>\r\n                </Link>\r\n                <Link className={classes.Link} to='/websites'>\r\n                    <li>Websites</li>\r\n                </Link> */}\r\n            </ul >\r\n        </Grid>\r\n    );\r\n};\r\n\r\nexport default NavMenu;","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\n\r\n\r\nconst useStyles = makeStyles( ( theme ) => ( {\r\n    menuButton: {\r\n        marginRight: theme.spacing( 2 ),\r\n        display: 'block',\r\n        [ theme.breakpoints.up( 'md' ) ]: {\r\n            display: 'none'\r\n        }\r\n    },\r\n    hide: {\r\n        display: 'none',\r\n    },\r\n\r\n} ) );\r\n\r\ninterface Props\r\n{\r\n    onClick: () => void;\r\n    open: boolean;\r\n}\r\n\r\nconst DrowerMenuButton: React.FC<Props> = ( props: Props ) =>\r\n{\r\n    const classes = useStyles();\r\n    return (\r\n        <IconButton\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            onClick={ props.onClick }\r\n            edge=\"start\"\r\n            className={ clsx( classes.menuButton, props.open && classes.hide ) }\r\n        >\r\n            <MenuIcon />\r\n        </IconButton>\r\n    );\r\n};\r\n\r\nexport default DrowerMenuButton;","import React from 'react';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport List from '@material-ui/core/List';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nconst drawerWidth = 240;\r\n\r\n\r\n\r\nconst useStyles = makeStyles( ( theme ) => ( {\r\n    root: {\r\n        display: 'flex',\r\n    },\r\n    appBar: {\r\n        transition: theme.transitions.create( [ 'margin', 'width' ], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        } ),\r\n    },\r\n    appBarShift: {\r\n        width: `calc(100% - ${ drawerWidth }px)`,\r\n        marginLeft: drawerWidth,\r\n        transition: theme.transitions.create( [ 'margin', 'width' ], {\r\n            easing: theme.transitions.easing.easeOut,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        } ),\r\n    },\r\n    menuButton: {\r\n        marginRight: theme.spacing( 2 ),\r\n    },\r\n    hide: {\r\n        display: 'none',\r\n    },\r\n    drawer: {\r\n        width: drawerWidth,\r\n        flexShrink: 0,\r\n    },\r\n    drawerPaper: {\r\n        width: drawerWidth,\r\n    },\r\n    drawerHeader: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        padding: theme.spacing( 0, 1 ),\r\n        // necessary for content to be below app bar\r\n        ...theme.mixins.toolbar,\r\n        justifyContent: 'flex-end',\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing( 3 ),\r\n        transition: theme.transitions.create( 'margin', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        } ),\r\n        marginLeft: -drawerWidth,\r\n    },\r\n    contentShift: {\r\n        transition: theme.transitions.create( 'margin', {\r\n            easing: theme.transitions.easing.easeOut,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        } ),\r\n        marginLeft: 0,\r\n    },\r\n    Link: {\r\n        color: '#262626',\r\n        textDecoration: 'none',\r\n        userSelect: 'none'\r\n    }\r\n} ) );\r\n\r\ninterface Props\r\n{\r\n    open: boolean;\r\n    closeMenu: () => void;\r\n}\r\n\r\nconst DrowerMenu: React.FC<Props> = ( props: Props ) =>\r\n{\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const { open, closeMenu } = props;\r\n    return (\r\n        <Drawer\r\n            className={ classes.drawer }\r\n            variant=\"persistent\"\r\n            anchor=\"left\"\r\n            open={ open }\r\n            classes={ {\r\n                paper: classes.drawerPaper,\r\n            } }\r\n        >\r\n            <div className={ classes.drawerHeader }>\r\n                <IconButton onClick={ closeMenu }>\r\n                    { theme.direction === 'ltr' ? <ChevronLeftIcon /> : <ChevronRightIcon /> }\r\n                </IconButton>\r\n            </div>\r\n            <Divider />\r\n            <List>\r\n                { [ 'Home', 'Services', 'Websites' ].map( ( text ) =>\r\n                {\r\n                    let path = '';\r\n                    switch ( text )\r\n                    {\r\n                        case 'Home':\r\n                            path = '/';\r\n                            break;\r\n                        case 'Services':\r\n                            path = '/services';\r\n                            break;\r\n                        case 'Websites':\r\n                            path = '/websites';\r\n                            break;\r\n                        default: {\r\n                            path = '/nothing';\r\n                        }\r\n                    }\r\n                    return (\r\n                        <Link className={ classes.Link } to={ path } key={ text }>\r\n                            <ListItem button key={ text }>\r\n                                <ListItemText primary={ text } />\r\n                            </ListItem>\r\n                        </Link>\r\n                    );\r\n                } ) }\r\n            </List>\r\n            <Divider />\r\n            <List>\r\n                { [ 'Send mail', 'Account' ].map( ( text ) => (\r\n                    <ListItem button key={ text }>\r\n                        <ListItemText primary={ text } />\r\n                    </ListItem>\r\n                ) ) }\r\n            </List>\r\n        </Drawer>\r\n    );\r\n};\r\n\r\nexport default DrowerMenu;","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles( ( theme ) => ( {\r\n    grow: {\r\n        display: 'flex',\r\n        [ theme.breakpoints.up( 'lg' ) ]: {\r\n            display: 'none',\r\n        },\r\n        flexGrow: 1,\r\n    }\r\n} ) );\r\n\r\nconst Spacer = () =>\r\n{\r\n    const classes = useStyles();\r\n    return (\r\n        <div className={ classes.grow }></div>\r\n    );\r\n};\r\n\r\nexport default Spacer;","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Account from './Account';\r\nimport Logo from './Logo';\r\nimport NavMenu from './NavMenu';\r\nimport DrowerMenuButton from './DrowerMenuButton';\r\nimport DrowerMenu from './DrowerMenu';\r\nimport Spacer from './Spacer';\r\n\r\n\r\nconst useStyles = makeStyles( ( theme ) => ( {\r\n  relative: {\r\n    position: 'relative',\r\n    [ theme.breakpoints.up( 'lg' ) ]: {\r\n      minHeight: '48px'\r\n    },\r\n  },\r\n  grow: {\r\n    flexGrow: 1,\r\n  },\r\n  growMobile: {\r\n    display: 'flex',\r\n    [ theme.breakpoints.up( 'lg' ) ]: {\r\n      display: 'none',\r\n    },\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing( 2 ),\r\n  },\r\n\r\n  sectionDesktop: {\r\n    display: 'none',\r\n    [ theme.breakpoints.up( 'md' ) ]: {\r\n      display: 'flex',\r\n    },\r\n  },\r\n  sectionMobile: {\r\n    display: 'flex',\r\n    [ theme.breakpoints.up( 'md' ) ]: {\r\n      display: 'none',\r\n    },\r\n  },\r\n  invisible: {\r\n    display: 'none',\r\n  }\r\n} ) );\r\n\r\nconst GoldAppBar = withStyles( ( theme ) => ( {\r\n  root: {\r\n    color: '#fafafa',\r\n    backgroundColor: '#02203c',\r\n    boxShadow: 'none',\r\n  },\r\n} ) )( AppBar );\r\n\r\ninterface Props\r\n{\r\n  isVisible: boolean;\r\n}\r\n\r\nconst ButtonAppBar: React.FC<Props> = ( props: Props ) =>\r\n{\r\n  const classes = useStyles();\r\n  const { isVisible } = props;\r\n  const [ open, setOpen ] = React.useState( false );\r\n\r\n  const handleDrawerOpen = () =>\r\n  {\r\n    setOpen( true );\r\n  };\r\n\r\n  const handleDrawerClose = () =>\r\n  {\r\n    setOpen( false );\r\n  };\r\n\r\n  return (\r\n    <div className={ isVisible ? '' : classes.invisible } color=\"primary\">\r\n      <GoldAppBar position=\"sticky\">\r\n        <Toolbar className={ classes.relative }>\r\n          <DrowerMenuButton open={ open } onClick={ handleDrawerOpen } />\r\n          <Logo />\r\n          <NavMenu />\r\n          <Spacer />\r\n          <Account />\r\n        </Toolbar>\r\n        <DrowerMenu open={ open } closeMenu={ handleDrawerClose } />\r\n      </GoldAppBar>\r\n    </div >\r\n  );\r\n};\r\n\r\nexport default ButtonAppBar;","import React from 'react';\r\nimport { TextField, Grid, Button } from '@material-ui/core';\r\nimport { makeStyles, Theme } from '@material-ui/core/styles';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport Icon from '@material-ui/core/Icon';\r\n\r\n\r\nconst useStyles = makeStyles( ( theme: Theme ) => ( {\r\n    textFieldWrapper: {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n    },\r\n    textField: {\r\n        width: '95%',\r\n        [ theme.breakpoints.up( 'md' ) ]: {\r\n            width: '100%'\r\n        }\r\n    },\r\n    button: {\r\n        margin: theme.spacing( 1 ),\r\n        width: 200\r\n    },\r\n    buttonWrapper: {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n    }\r\n} ) );\r\n\r\ninterface Props\r\n{\r\n    name: string;\r\n    description: string;\r\n    details: string;\r\n    promotion: string | number;\r\n    price: number;\r\n    pieces: number;\r\n    src: string;\r\n    change: ( ev: any, id: 'NAME' | 'DESCRIPTION' | 'DETAILS' | 'PROMOTION' | 'PIECES' | 'PRICE' | 'SRC' ) => void;\r\n    clear: () => void;\r\n\r\n}\r\n\r\nconst Form = ( props: Props ) =>\r\n{\r\n    const { name, description, details, promotion, pieces, price, src, change, clear } = props;\r\n\r\n    const classes = useStyles();\r\n\r\n\r\n    return (\r\n        <Grid container spacing={ 1 } justify=\"center\">\r\n            <Grid item xs={ 12 } className={ classes.textFieldWrapper }>\r\n                <TextField\r\n                    className={ classes.textField }\r\n                    label=\"Name\"\r\n                    type=\"text\"\r\n                    value={ name }\r\n                    onChange={ ev => change( ev, 'NAME' ) }\r\n                />\r\n            </Grid>\r\n            <Grid item xs={ 12 } md={ 6 } className={ classes.textFieldWrapper }>\r\n                <TextField\r\n                    className={ classes.textField }\r\n                    label=\"Price(RON)\"\r\n                    type=\"number\"\r\n                    InputLabelProps={ {\r\n                        shrink: true,\r\n                    } }\r\n                    value={ price }\r\n                    onFocus={ ( ev ) => ev.target.select() }\r\n                    onChange={ ev => change( ev, 'PRICE' ) }\r\n                />\r\n            </Grid>\r\n\r\n            <Grid item xs={ 12 } md={ 6 } className={ classes.textFieldWrapper }>\r\n                <TextField\r\n                    className={ classes.textField }\r\n                    label=\"Promotion(%)\"\r\n                    type=\"number\"\r\n                    value={ promotion }\r\n                    InputLabelProps={ {\r\n                        shrink: true,\r\n                    } }\r\n                    onFocus={ ( ev ) => ev.target.select() }\r\n                    onChange={ ev => change( ev, 'PROMOTION' ) }\r\n                />\r\n            </Grid>\r\n\r\n            <Grid item xs={ 12 } className={ classes.textFieldWrapper }>\r\n                <TextField\r\n                    className={ classes.textField }\r\n                    label=\"Pieces\"\r\n                    type=\"number\"\r\n                    value={ pieces }\r\n                    InputLabelProps={ {\r\n                        shrink: true,\r\n                    } }\r\n                    onFocus={ ( ev ) => ev.target.select() }\r\n                    onChange={ ev => change( ev, 'PIECES' ) }\r\n                />\r\n            </Grid>\r\n\r\n\r\n            <Grid item xs={ 12 } className={ classes.textFieldWrapper }>\r\n                <TextField\r\n                    className={ classes.textField }\r\n                    label=\"Description\"\r\n                    value={ description }\r\n                    onChange={ ev => change( ev, 'DESCRIPTION' ) }\r\n                    rows={ 3 }\r\n                    multiline\r\n                />\r\n            </Grid>\r\n\r\n            <Grid item xs={ 12 } className={ classes.textFieldWrapper }>\r\n                <TextField\r\n                    className={ classes.textField }\r\n                    label=\"Details\"\r\n                    value={ details }\r\n                    onChange={ ev => change( ev, 'DETAILS' ) }\r\n                    rows={ 3 }\r\n                    multiline\r\n                />\r\n            </Grid>\r\n\r\n            <Grid item xs={ 12 } className={ classes.textFieldWrapper }>\r\n                {/* <TextField\r\n                    className={ classes.textField }\r\n                    label=\"Image\"\r\n                    type=\"text\"\r\n                    value={ src }\r\n                    onChange={ ev => change( ev, 'SRC' ) }\r\n                /> */}\r\n\r\n                <Button\r\n                    variant=\"contained\"\r\n                    component=\"label\"\r\n                >\r\n                    Upload File\r\n                    <input\r\n                        type=\"file\"\r\n                        accept=\"image/*\"\r\n                        onChange={ ev => change( ev, 'SRC' ) }\r\n                        hidden\r\n                    />\r\n                </Button>\r\n            </Grid>\r\n\r\n            <Grid container>\r\n                <Grid item xs={ 6 } className={ classes.buttonWrapper }>\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className={ classes.button }\r\n                        startIcon={ <SaveIcon /> }\r\n                    >\r\n                        Save\r\n                    </Button>\r\n                </Grid>\r\n\r\n                <Grid item xs={ 6 } className={ classes.buttonWrapper }>\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        color=\"default\"\r\n                        className={ classes.button }\r\n                        startIcon={ <DeleteIcon /> }\r\n                        onClick={ clear }\r\n                    >\r\n                        Clear\r\n                    </Button>\r\n\r\n                </Grid>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n};\r\n\r\nexport default Form;\r\n","import React, { useState } from 'react';\r\nimport { Grid } from '@material-ui/core';\r\nimport { makeStyles, Theme } from '@material-ui/core/styles';\r\nimport Item from './Item';\r\nimport Form from './Form';\r\nimport ProductCard from '../ProductCard';\r\n\r\n\r\nconst useStyles = makeStyles( ( theme: Theme ) => ( {\r\n    root: {\r\n        paddingTop: '3rem',\r\n    }\r\n} ) );\r\n\r\ninterface Props\r\n{\r\n\r\n}\r\n\r\nconst ProductAdder = ( props: Props ) =>\r\n{\r\n\r\n    const classes = useStyles();\r\n\r\n    // const [ items, setItems ] = useState( [] );\r\n    const [ cardName, setCardName ] = useState( '' );\r\n    const [ cardDescription, setCardDescription ] = useState( '' );\r\n    const [ cardDetails, setCardDetails ] = useState( '' );\r\n    const [ cardPromotion, setCardPromotion ] = useState( 0 );\r\n    const [ cardPrice, setCardPrice ] = useState( 0 );\r\n    const [ cardPieces, setCardPieces ] = useState( 0 );\r\n    const [ cardSrc, setCardSrc ] = useState( '' );\r\n\r\n\r\n    // TODO try to scale this shit!\r\n    // const addNewItem = () =>\r\n    // {\r\n    //     items.push(\r\n    //         <Grid item xs={ 12 } md={ 6 }>\r\n    //             <ProductCard\r\n    //                 name={ cardName }\r\n    //                 description={ cardDescription }\r\n    //                 details={ cardDetails }\r\n    //                 promotion={ cardPromotion }\r\n    //                 price={ cardPrice }\r\n    //                 piecesLeft={ cardPieces }\r\n    //                 src={ cardSrc }\r\n    //             />\r\n    //         </Grid>\r\n    //     );\r\n    // };\r\n\r\n    const handleChanges = ( ev: any, identifier: string ) =>\r\n    {\r\n        switch ( identifier )\r\n        {\r\n            case 'NAME':\r\n                setCardName( ev.target.value );\r\n                break;\r\n            case 'DESCRIPTION':\r\n                setCardDescription( ev.target.value );\r\n                break;\r\n            case 'DETAILS':\r\n                setCardDetails( ev.target.value );\r\n                break;\r\n            case 'PROMOTION':\r\n                if ( ev.target.value === '' )\r\n                {\r\n                    setCardPromotion( 0 );\r\n                    break;\r\n                }\r\n                setCardPromotion( parseInt( ev.target.value ) );\r\n                break;\r\n            case 'PRICE':\r\n                if ( ev.target.value === '' )\r\n                {\r\n                    setCardPrice( 0 );\r\n                    break;\r\n                }\r\n                setCardPrice( parseInt( ev.target.value ) );\r\n                break;\r\n            case 'PIECES':\r\n                if ( ev.target.value === '' )\r\n                {\r\n                    setCardPieces( 0 );\r\n                    break;\r\n                }\r\n                setCardPieces( parseInt( ev.target.value ) );\r\n                break;\r\n            case 'SRC':\r\n                console.log( ev.target.value );\r\n                setCardSrc( ev.target.value );\r\n                break;\r\n        }\r\n\r\n    };\r\n\r\n    const clearProductDetails = () =>\r\n    {\r\n        setCardName( '' );\r\n        setCardPrice( 0 );\r\n        setCardPieces( 0 );\r\n        setCardPromotion( 0 );\r\n        setCardDescription( '' );\r\n        setCardDetails( '' );\r\n        setCardSrc( '' );\r\n    };\r\n\r\n    return (\r\n        <Grid container spacing={ 3 } className={ classes.root }>\r\n            <Grid item xs={ 12 } md={ 7 }>\r\n                <ProductCard\r\n                    name={ cardName }\r\n                    description={ cardDescription }\r\n                    details={ cardDetails }\r\n                    promotion={ cardPromotion }\r\n                    price={ cardPrice }\r\n                    piecesLeft={ cardPieces }\r\n                    src={ cardSrc }\r\n                />\r\n            </Grid>\r\n            <Grid item xs={ 12 } md={ 5 }>\r\n                <Form\r\n                    name={ cardName }\r\n                    description={ cardDescription }\r\n                    details={ cardDetails }\r\n                    promotion={ cardPromotion }\r\n                    price={ cardPrice }\r\n                    pieces={ cardPieces }\r\n                    src={ cardSrc }\r\n                    change={ handleChanges }\r\n                    clear={ clearProductDetails }\r\n                />\r\n            </Grid>\r\n\r\n        </Grid>\r\n    );\r\n};\r\n\r\nexport default ProductAdder;\r\n","import React, { useState } from 'react';\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\r\nimport { Grid } from '@material-ui/core';\r\nimport PageNotFound from './NotFountComponent';\r\nimport Home from './Home';\r\nimport Nav from './Navigation';\r\nimport AddProduct from './AddProduct';\r\n\r\n\r\nconst Main: React.FC = () =>\r\n{\r\n\r\n    const [ navVisibility, setNavVisibility ] = useState( true );\r\n\r\n    return (\r\n        <Router>\r\n            <Nav isVisible={ navVisibility } />\r\n            <Grid container>\r\n                <Grid item xs={ false } md={ 1 } lg={ 2 } />\r\n                <Grid item xs={ 12 } md={ 10 } lg={ 8 }>\r\n                    <Switch>\r\n                        <Route exact path='/' component={ Home } />\r\n                        <Route exact path='/admin/add-product' component={ AddProduct } />\r\n                        <Route>\r\n                            <PageNotFound showNav={ setNavVisibility } />\r\n                        </Route>\r\n                    </Switch>\r\n                </Grid>\r\n                <Grid item xs={ false } md={ 1 } lg={ 2 } />\r\n            </Grid>\r\n        </Router>\r\n    );\r\n};\r\n\r\nexport default Main;\r\n","import React, { Component } from 'react';\r\nimport Main from './components/Main';\r\nimport './App.css';\r\n\r\nexport default class App extends Component\r\n{\r\n  render ()\r\n  {\r\n    return (\r\n      <div id=\"anchor\">\r\n        <Main />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { combineReducers } from 'redux';\r\nimport { authentificationReducer } from './authentificationReducer';\r\n\r\n\r\nconst reducer = combineReducers( {\r\n    isLogged: authentificationReducer\r\n} );\r\n\r\nexport default reducer;","interface Action\r\n{\r\n    type: string,\r\n    isForced?: boolean;\r\n}\r\n\r\nconst authentificationReducer = ( state: boolean = false, action: Action ) =>\r\n{\r\n    switch ( action.type )\r\n    {\r\n        case \"LOGIN\":\r\n            state = true;\r\n            break;\r\n        case \"LOGOUT\":\r\n            state = false;\r\n            break;\r\n    }\r\n    return state;\r\n};\r\n\r\nexport { authentificationReducer };","import { createStore } from 'redux';\r\nimport reducer from '../reducer';\r\n\r\n\r\nexport const store = createStore( reducer, ( window as any ).__REDUX_DEVTOOLS_EXTENSION__ &&\r\n    ( window as any ).__REDUX_DEVTOOLS_EXTENSION__() );","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { Provider } from 'react-redux';\r\nimport { store } from './store';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={ store }>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById( 'root' )\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}