{"version":3,"sources":["api/constants.tsx","components/NotFountComponent.tsx","api/index.tsx","actions/snackbarActions.ts","components/Navigation/AccountButton.tsx","actions/productsAction.ts","components/ProductCard.tsx","components/Home/index.tsx","components/Admin/constants/index.ts","components/Navigation/Logo.tsx","components/Navigation/NavMenu.tsx","components/Navigation/DrowerMenuButton.tsx","components/Navigation/DrowerMenu.tsx","components/Navigation/Spacer.tsx","components/Navigation/index.tsx","components/Admin/AddProduct/Form.tsx","components/Admin/AddProduct/index.tsx","components/Admin/UpdateProduct/Form.tsx","components/Admin/UpdateProduct/index.tsx","components/User/Account/index.tsx","components/User/Login/index.tsx","components/User/Register/index.tsx","components/Admin/alerts/index.tsx","components/Main.tsx","App.tsx","reportWebVitals.ts","reducer/index.ts","reducer/authentificationReducer.ts","reducer/productsReducer.ts","reducer/snackbarReducers.ts","store/index.ts","index.tsx"],"names":["AddProductMessages","NotFountComponent","props","showNav","useEffect","patchProduct","id","updatedProduct","axios","patch","deleteProduct","delete","snackbarActionManager","snackInfo","type","payload","OptionsNames","OptionsLinks","fetchProducts","dispatch","a","get","data","products","loaded","message","variant","console","log","dump","productsActions","product","newProduct","post","status","conflict","fail","newProducts","API","useStyles","makeStyles","theme","root","width","breakpoints","up","maxWidth","media","display","height","paddingTop","justifyContent","alignItems","expand","transform","marginLeft","transition","transitions","create","duration","shortest","expandOpen","avatar","backgroundColor","red","description","overflow","icon","top","position","ProductCard","useDispatch","isLogged","useSelector","state","classes","_id","name","details","price","promotion","active","piecesLeft","src","useState","expanded","setExpanded","Card","className","CardHeader","action","to","IconButton","aria-label","title","subheader","CardMedia","children","image","CardContent","Typography","color","component","CardActions","disableSpacing","onClick","clsx","aria-expanded","Collapse","in","timeout","unmountOnExit","gutterBottom","item","textAlign","loading","fontSize","opacity","Home","areProductsLoaded","productsAreLoaded","items","map","Grid","xs","md","stock","sale","length","container","spacing","justify","alignContent","CircularProgress","FieldSelector","Link","textDecoration","LongMenu","options","accout","logout","login","signup","React","anchorEl","setAnchorEl","open","Boolean","handleAccountMenuClick","event","handleAccountClose","StyledMenu","withStyles","paper","border","Menu","elevation","getContentAnchorEl","anchorOrigin","vertical","horizontal","transformOrigin","aria-controls","aria-haspopup","currentTarget","keepMounted","onClose","PaperProps","style","maxHeight","ITEM_HEIGHT","option","MenuItem","value","selected","minWidth","marginRight","Logo","List","padding","navLink","borderBottom","cursor","userSelect","NavMenu","menuButton","hide","DrowerMenuButton","drowerOpen","edge","drawerWidth","appBar","easing","sharp","leavingScreen","appBarShift","easeOut","enteringScreen","drawer","flexShrink","drawerPaper","drawerHeader","mixins","toolbar","content","flexGrow","contentShift","DrowerMenu","useTheme","closeMenu","Drawer","anchor","direction","Divider","text","path","ListItem","button","ListItemText","primary","grow","Spacer","relative","minHeight","growMobile","sectionDesktop","sectionMobile","invisible","GoldAppBar","boxShadow","AppBar","ButtonAppBar","isVisible","setOpen","Toolbar","textFieldWrapper","textField","margin","buttonWrapper","Form","pieces","change","clear","send","TextField","label","onChange","ev","target","InputLabelProps","shrink","onFocus","select","prom","desc","rows","multiline","Button","accept","hidden","startIcon","ProductAdder","cardName","setCardName","cardDescription","setCardDescription","cardDetails","setCardDetails","cardPromotion","setCardPromotion","cardPrice","setCardPrice","cardPieces","setCardPieces","cardSrc","setCardSrc","identifier","parseInt","file","reader","FileReader","readAsDataURL","onload","base64","result","toString","setSrc","files","preventDefault","reset","update","marginTop","UpdateProduct","match","filter","params","setProduct","getProduct","response","AccountInfoComponent","LoginComponent","RegisterComponent","Alert","Main","snackbar","handleSnackbarClose","reason","navVisibility","setNavVisibility","lg","exact","AddProduct","AccountInfo","Login","Register","Snackbar","autoHideDuration","severity","App","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","reducer","combineReducers","store","createStore","compose","applyMiddleware","thunk","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mJAAKA,E,4HC2BUC,EAnB4B,SAAEC,GAC5C,IACWC,EAAYD,EAAZC,QAUR,OARAC,qBAAW,WAGP,OADAD,GAAS,GACF,WAEHA,GAAS,MAEd,IAEC,8D,yPCUKE,EAAe,SAAEC,EAAYC,GAAd,OAAuCC,IAAMC,MAAN,oBAA2BH,GAAOC,IAExFG,EAAgB,SAAEJ,GAAF,OAAkBE,IAAMG,OAAN,oBAA4BL,KCVrEM,EAjBe,SAAEC,GAEnB,MAAO,CACHC,KAAM,OACNC,QAASF,IAaXD,EATe,WAEjB,MAAO,CACHE,KAAM,U,SHjBTd,K,6CAAAA,E,+BAAAA,E,4CAAAA,E,4CAAAA,M,KAQUA,IIeVgB,EAQAC,EJvBUjB,KKgBTkB,GAAgB,yDAAM,WAAQC,GAAR,iBAAAC,EAAA,+EHNOZ,IAAMa,IAAK,aGMlB,gBAKZC,EALY,EAKZA,KAERH,EAAU,CAAEL,KAAM,MAAOC,QAASO,EAAKC,WACvCJ,EAAUK,MARU,gDAWpBL,EAAU,CAAEL,KAAM,MAAOC,QAAS,KAClCI,EAAUK,MACVL,EAAUP,KACVO,EAAUP,EAA4B,CAAEa,QAAS,oBAAqBC,QAAS,WAC/EC,QAAQC,IAAR,MAfoB,yDAAN,uDAoJhBJ,GAAS,WAEX,MAAO,CACHV,KAAM,WAMRe,GAAO,WAET,MAAO,CACHf,KAAM,SAIRgB,GAAyBZ,GAAzBY,GA7Ic,SAAEC,GAAF,8CAAwB,WAAQZ,GAAR,iBAAAC,EAAA,+EHvBfY,EG2BmBD,EH3BMvB,IAAMyB,KAAN,wBAAqCD,GGuB/C,gBAMf,aAFbV,EAJ4B,EAI5BA,MAEEY,QAENP,QAAQC,IAAKN,EAAKY,QAClBf,EAAUP,KACVO,EAAUP,EAA4B,CAAEa,QAASH,EAAKG,QAASC,QAAS,eAIxEP,EAAUP,KACVO,EAAUP,EAA4B,CAAEa,QAASH,EAAKG,QAASC,QAAS,cAG5EC,QAAQC,IAAKN,GACbH,EAAUU,MACVV,EAAU,CAAEL,KAAM,cAAeC,QAASO,IApBN,kDAuBb,wCAAlB,KAAMG,QAEPN,EAAUP,EAA4B,CAAEa,QAASzB,GAAmBmC,SAAUT,QAAS,WAGvFP,EAAUP,EAA4B,CAAEa,QAASzB,GAAmBoC,KAAMV,QAAS,WAEvFC,QAAQC,IAAK,KAAMH,SA9BiB,kCHvBjB,IAAEO,IGuBe,qBAAxB,uDA6IdF,GAzGe,SAAEP,GAAF,8CAA2B,WAAQJ,GAAR,iBAAAC,EAAA,+EHxDlBiB,EG4DmBd,EH5DSf,IAAMyB,KAAN,yBAAsCI,GGwDhD,gBAKnB,aADbf,EAJgC,EAIhCA,MACEY,QAENf,EAAUP,KACVO,EAAUP,EAA4B,CAAEa,QAASH,EAAKG,QAASC,QAAS,eAKxEP,EAAUP,KACVO,EAAUP,EAA4B,CAAEa,QAASH,EAAKG,QAASC,QAAS,cAE5EC,QAAQC,IAAKN,GACbH,EAAUU,MACVV,EAAU,CAAEL,KAAM,eAAgBC,QAASO,IAlBH,kDAqBjB,wCAAlB,KAAMG,SAEPN,EAAUP,KACVO,EAAUP,EAA4B,CAAEa,QAASzB,GAAmBmC,SAAUT,QAAS,aAGvFP,EAAUP,KACVO,EAAUP,EAA4B,CAAEa,QAASzB,GAAmBoC,KAAMV,QAAS,YAEvFC,QAAQC,IAAK,KAAMH,SA9BqB,kCHxDpB,IAAEY,IGwDkB,qBAA3B,uDAyGfP,GArEgB,SAAExB,EAAcyB,GAAhB,8CAAsC,WAAQZ,GAAR,iBAAAC,EAAA,+EAI7BkB,EAAkBhC,EAAIyB,GAJO,gBAI5CT,EAJ4C,EAI5CA,KACRK,QAAQC,IAAKN,GACQ,YAAhBA,EAAKY,QAENf,EAAUP,KACVO,EAAUP,EAA4B,CAAEa,QAASH,EAAKG,QAASC,QAAS,eAKxEP,EAAUP,KACVO,EAAUP,EAA4B,CAAEa,QAASH,EAAKG,QAASC,QAAS,cAE5EP,EAAU,CAAEL,KAAM,SAAUC,QAASO,IACrCH,EAAUD,MAlB0C,kDAqBpDC,EAAUP,KACVO,EAAUP,EAA4B,CAAEa,QAASzB,GAAmBoC,KAAMV,QAAS,WACnFC,QAAQC,IAAR,MAvBoD,0DAAtC,uDAqEhBE,GAzCgB,SAAExB,GAAF,8CAAkB,WAAQa,GAAR,iBAAAC,EAAA,+EAITkB,EAAmBhC,GAJV,gBAIxBgB,EAJwB,EAIxBA,KACRK,QAAQC,IAAKN,GACQ,YAAhBA,EAAKY,QAENf,EAAUP,KACVO,EAAUP,EAA4B,CAAEa,QAASH,EAAKG,QAASC,QAAS,eAKxEP,EAAUP,KACVO,EAAUP,EAA4B,CAAEa,QAASH,EAAKG,QAASC,QAAS,cAE5EP,EAAU,CAAEL,KAAM,SAAUC,QAAST,IAjBL,kDAoBhCqB,QAAQC,IAAR,MApBgC,0DAAlB,uDCxHhBW,GAAYC,aAAY,SAAEC,GAAF,MAAe,CACzCC,KAAK,aACDC,MAAO,QACLF,EAAMG,YAAYC,GAAI,MAAU,CAC9BC,SAAU,MAGlBC,MAAO,CACHC,QAAS,OACTC,OAAQ,EACRC,WAAY,SACZC,eAAgB,SAChBC,WAAY,UAEhBC,OAAQ,CACJC,UAAW,eACXC,WAAY,OACZC,WAAYf,EAAMgB,YAAYC,OAAQ,YAAa,CAC/CC,SAAUlB,EAAMgB,YAAYE,SAASC,YAG7CC,WAAY,CACRP,UAAW,kBAEfQ,OAAQ,CACJC,gBAAiBC,IAAK,MAE1BC,YAAa,CACTC,SAAU,UAGdC,KAAM,CACFC,IAAK,QACLC,SAAU,gBA2IHC,GAtHK,SAAEpE,GAGlB,IAAMiB,EAAWoD,cAEXC,EAAWC,aAAa,SAAEC,GAAF,OAAkBA,EAAMF,YAChDG,EAAUpC,KAEZqC,EASA1E,EATA0E,IACAC,EAQA3E,EARA2E,KACAZ,EAOA/D,EAPA+D,YACAa,EAMA5E,EANA4E,QAEAC,GAIA7E,EALA8E,UAKA9E,EAJA6E,OAEAE,GAEA/E,EAHAgF,WAGAhF,EAFA+E,QACAE,EACAjF,EADAiF,IAfR,EAmBsCC,oBAAU,GAnBhD,mBAmBYC,EAnBZ,KAmBsBC,EAnBtB,KAqCI,OACI,eAACC,EAAA,EAAD,CAAMC,UAAYb,EAAQjC,KAA1B,UACI,cAAC+C,EAAA,EAAD,CACIC,OACIT,EACI,cAAC,IAAD,CAAMU,GAAE,yBAAsBf,GAA9B,SACI,cAACgB,EAAA,EAAD,CAAYC,aAAW,WAAvB,SACI,cAAC,IAAD,QAGR,cAACD,EAAA,EAAD,CAAYC,aAAW,WAAvB,SACI,cAAC,IAAD,MAGZC,MAAQjB,EACRkB,UAAS,UAAOhB,EAAP,UAIb,cAACiB,EAAA,EAAD,CACIR,UAAYb,EAAQ5B,MACpBkD,SAAWd,EAAM,KAAO,cAAC,IAAD,CAAiBK,UAAYb,EAAQR,OAC7D+B,MAAQf,EACRW,MAAM,QAIV,cAACK,EAAA,EAAD,CAAaX,UAAYb,EAAQV,YAAjC,SACI,cAACmC,EAAA,EAAD,CAAY1E,QAAQ,QAAQsB,QAAQ,QAAQqD,MAAM,gBAAgBC,UAAU,IAA5E,SACMrC,MAKV,eAACsC,EAAA,EAAD,CAAaC,gBAAc,EAA3B,UACMhC,EACE,cAACoB,EAAA,EAAD,CAAYC,aAAW,mBAAvB,SACI,cAAC,IAAD,MAEJ,KAEJ,cAACD,EAAA,EAAD,CAAYC,aAAW,SAASY,QAAU,kBAjD1BnG,EAiDmDsE,OA/CtEK,GAED9D,EAAUW,GAAwBxB,KAJhB,IAAEA,GAiDhB,SACI,cAAC,IAAD,MAIJ,cAACsF,EAAA,EAAD,CAAYC,aAAW,QAAvB,SACI,cAAC,IAAD,MAIFf,EACE,cAACc,EAAA,EAAD,CACIJ,UAAYkB,YAAM/B,EAAQtB,OAAV,eACVsB,EAAQd,WAAcwB,IAE5BoB,QAtEM,WAEtBnB,GAAcD,IAqEEsB,gBAAgBtB,EAChBQ,aAAW,YANf,SAQI,cAAC,IAAD,MACY,QAMxB,cAACe,EAAA,EAAD,CAAUC,GAAKxB,EAAWyB,QAAQ,OAAOC,eAAa,EAAtD,SACI,cAACZ,EAAA,EAAD,UACI,cAACC,EAAA,EAAD,CAAY1E,QAAQ,QAAQ4E,UAAU,IAAIU,cAAY,EAAChE,QAAQ,QAAQqD,MAAM,gBAA7E,SACMvB,Y,+BCxKpBvC,GAAYC,aAAY,iBAAQ,CAClCE,KAAM,CACFQ,WAAY,IAEhB+D,KAAM,CACFC,UAAW,UAEfC,QAAS,CACLlE,OAAQ,QAEZkB,KAAM,CACFiD,SAAU,QACVC,QAAS,UAqFFC,GAhFF,WAET,IAAM3C,EAAUpC,KACVpB,EAAWoD,cACXgD,EAAoB9C,aAAa,SAAEC,GAErC,OAAOA,EAAM8C,qBAEXjG,EAAWkD,aAAa,SAAEC,GAE5B,OAAOA,EAAMnD,YAKjBnB,qBAAW,WAMDmH,GACFpG,EAAUW,QAEf,IAEHH,QAAQC,IAAKL,GAGb,IAAMkG,EAAQlG,EAASmG,KAAK,SAAE3F,GAAF,OACxB,cAAC4F,EAAA,EAAD,CAAMV,MAAI,EAACW,GAAK,GAAKC,GAAK,EAA1B,SACI,cAAC,GAAD,CACIjD,IAAM7C,EAAQ6C,IACdC,KAAO9C,EAAQ8C,KACfE,MAAQhD,EAAQgD,MAChBd,YAAclC,EAAQkC,YACtBa,QAAU/C,EAAQ+C,QAClBI,WAAanD,EAAQ+F,MACrB9C,UAAYjD,EAAQgG,KACpB5C,IAAMpD,EAAQoD,IACdF,QAAS,KAVmBlD,EAAQ6C,QAehD,OACI,mCAES2C,EAeGhG,EAASyG,OAEH,cAACL,EAAA,EAAD,CAAMnC,UAAYb,EAAQjC,KAAOuF,WAAS,EAACC,QAAU,EAArD,SACIT,IAIF,cAACE,EAAA,EAAD,CAAMnC,UAAYb,EAAQwC,QAAUc,WAAS,EAACE,QAAQ,SAASC,aAAa,SAA5E,SACI,cAAC,KAAD,CAAiC5C,UAAYb,EAAQR,SArB/D5C,EAASyG,OAEP,eAACL,EAAA,EAAD,CAAMnC,UAAYb,EAAQjC,KAAOuF,WAAS,EAACE,QAAQ,SAAS/E,WAAW,SAAS8E,QAAU,EAA1F,UACMT,EACF,cAACE,EAAA,EAAD,CAAMV,MAAI,EAACW,GAAK,GAAKC,GAAK,EAA1B,SACI,cAACQ,GAAA,EAAD,SAIR,cAACV,EAAA,EAAD,CAAMnC,UAAYb,EAAQwC,QAAUc,WAAS,EAACE,QAAQ,SAAS/E,WAAW,SAAS8E,QAAU,EAA7F,SACI,cAACG,GAAA,EAAD,S,wFH3EvBrH,K,cAAAA,E,iBAAAA,E,gBAAAA,E,kBAAAA,M,cAQAC,K,eAAAA,E,mBAAAA,E,eAAAA,E,mBAAAA,M,KASL,IItCKqH,GJsCC/F,GAAYC,aAAY,SAAEC,GAAF,MAAe,CAC3C0B,KAAM,CACJkC,MAAO,WAETkC,KAAM,CACJC,eAAgB,OAChBnC,MAAO,YAiHIoC,GAxGY,WAIzB,IAAMjE,EAAWC,aAAa,SAAEC,GAAF,OAAkBA,EAAMF,YAIhDkE,GAHWnE,cAGiBC,EAChC,CAAE,CAAExD,EAAa2H,OAAQ1H,EAAa0H,QAAU,CAAE3H,EAAa4H,OAAQ3H,EAAa2H,SACpF,CAAE,CAAE5H,EAAa6H,MAAO5H,EAAa4H,OAAS,CAAE7H,EAAa8H,OAAQ7H,EAAa6H,UATtF,EAWoCC,IAAM3D,SAAU,MAXpD,mBAWU4D,EAXV,KAWoBC,EAXpB,KAYQC,EAAOC,QAASH,GAEhBrE,EAAUpC,KAQV6G,EAAyB,SAAEC,GAE/BC,KAkBIA,EAAqB,WAEzBL,EAAa,OAGTM,EAAaC,aAAY,CAC7BC,MAAO,CACLC,OAAQ,sBAFOF,EAId,SAAEtJ,GAAF,OACH,cAACyJ,GAAA,EAAD,cACEC,UAAY,EACZC,mBAAqB,KACrBC,aAAe,CACbC,SAAU,SACVC,WAAY,UAEdC,gBAAkB,CAChBF,SAAU,MACVC,WAAY,UAEdd,MAAO,GACFhJ,OAIT,OACE,gCACE,cAAC0F,EAAA,EAAD,CACEC,aAAW,OACXqE,gBAAc,YACdC,gBAAc,OACd1D,QA1DoB,SAAE4C,GAE1BJ,EAAaI,EAAMe,gBAoDjB,SAME,cAAC,KAAD,CAAmB5E,UAAYb,EAAQR,SAEzC,cAACoF,EAAD,CACEjJ,GAAG,YACH0I,SAAWA,EACXqB,aAAW,EACXnB,KAAOA,EACPoB,QAAUhB,EACViB,WAAa,CACXC,MAAO,CACLC,UAAWC,IACX/H,MAAO,SATb,SAaI+F,EAAQhB,KAAK,SAAEiD,GAAF,OACb,cAAC,IAAD,CAAMhF,GAAKgF,EAAQ,GAA0BnF,UAAYb,EAAQ4D,KAAjE,SACE,cAACqC,GAAA,EAAD,CAAUC,MAAQF,EAAQ,GAAMG,SAA2B,UAAhBH,EAAQ,GAAkBlE,QAAU2C,EAA/E,SACIuB,EAAQ,MAFiBA,EAAQ,aKhJ3CpI,GAAYC,aAAY,SAAEC,GAAF,YAAe,CACzCqD,OAAK,GACD9C,QAAS,QADR,cAECP,EAAMG,YAAYC,GAAI,MAAU,CAC9BG,QAAS,QACT+H,SAAU,QACVC,YAAa,SALhB,2BAOW,QAPX,2BAQW,QARX,OAsBMC,GAVF,WAET,IAAMtG,EAAUpC,KAChB,OACI,cAAC6D,EAAA,EAAD,CAAY1E,QAAQ,KAAK8D,UAAYb,EAAQmB,MAA7C,mB,0CCdFvD,GAAYC,aAAY,SAAEC,GAAF,YAAe,CACzCyI,MAAI,GACAC,QAAS,EACTnI,QAAS,QAFT,cAGEP,EAAMG,YAAYC,GAAI,MAAU,CAC9BG,QAAS,SAJb,0BAMW,QANX,uBAOQ,GAPR,GASJoI,QAAS,CACL,UAAW,CACPD,QAAS,sBACTE,aAAc,oBACdC,OAAQ,YAGhB/C,KAAM,CACFlC,MAAO,UACPmC,eAAgB,OAChB+C,WAAY,OACZJ,QAAS,OACT,UAAW,CACPA,QAAS,sBACTE,aAAc,oBACdC,OAAQ,YAIhBnH,KAAM,CACFE,SAAU,WACVD,IAAK,WAuBEoH,GAjBC,WAEZ,IAAM7G,EAAUpC,KAChB,OACI,cAACoF,EAAA,EAAD,CAAMM,WAAS,EAAf,SACI,qBAAIzC,UAAYb,EAAQuG,KAAxB,UACI,cAAC,IAAD,CAAM1F,UAAYb,EAAQ4D,KAAO5C,GAAG,IAApC,SACI,+BAAI,+BAAM,cAAC,KAAD,CAAiBH,UAAYb,EAAQR,SAA/C,aAEJ,cAAC,IAAD,CAAMqB,UAAYb,EAAQ4D,KAAO5C,GAAG,qBAApC,SACI,+BAAI,+BAAM,cAAC,KAAD,CAAkBH,UAAYb,EAAQR,SAAhD,0B,qBC/Cd5B,GAAYC,aAAY,SAAEC,GAAF,MAAe,CACzCgJ,WAAW,aACPT,YAAavI,EAAMyF,QAAS,GAC5BlF,QAAS,SACPP,EAAMG,YAAYC,GAAI,MAAU,CAC9BG,QAAS,SAGjB0I,KAAM,CACF1I,QAAS,YA2BF2I,GAhB2B,SAAEzL,GAExC,IAAMyE,EAAUpC,KAChB,OACI,cAACqD,EAAA,EAAD,CACIS,MAAM,UACNR,aAAW,cACXY,QAAUvG,EAAM0L,WAChBC,KAAK,QACLrG,UAAYkB,YAAM/B,EAAQ8G,WAAYvL,EAAMgJ,MAAQvE,EAAQ+G,MALhE,SAOI,cAAC,KAAD,O,qGCzBNI,GAAc,IAIdvJ,GAAYC,aAAY,SAAEC,GAAF,MAAe,CACzCC,KAAM,CACFM,QAAS,QAEb+I,OAAQ,CACJvI,WAAYf,EAAMgB,YAAYC,OAAQ,CAAE,SAAU,SAAW,CACzDsI,OAAQvJ,EAAMgB,YAAYuI,OAAOC,MACjCtI,SAAUlB,EAAMgB,YAAYE,SAASuI,iBAG7CC,YAAa,CACTxJ,MAAM,eAAD,OAAkBmJ,GAAlB,OACLvI,WAAYuI,GACZtI,WAAYf,EAAMgB,YAAYC,OAAQ,CAAE,SAAU,SAAW,CACzDsI,OAAQvJ,EAAMgB,YAAYuI,OAAOI,QACjCzI,SAAUlB,EAAMgB,YAAYE,SAAS0I,kBAG7CZ,WAAY,CACRT,YAAavI,EAAMyF,QAAS,IAEhCwD,KAAM,CACF1I,QAAS,QAEbsJ,OAAQ,CACJ3J,MAAOmJ,GACPS,WAAY,GAEhBC,YAAa,CACT7J,MAAOmJ,IAEXW,aAAa,2BACTzJ,QAAS,OACTI,WAAY,SACZ+H,QAAS1I,EAAMyF,QAAS,EAAG,IAExBzF,EAAMiK,OAAOC,SALR,IAMRxJ,eAAgB,aAEpByJ,QAAS,CACLC,SAAU,EACV1B,QAAS1I,EAAMyF,QAAS,GACxB1E,WAAYf,EAAMgB,YAAYC,OAAQ,SAAU,CAC5CsI,OAAQvJ,EAAMgB,YAAYuI,OAAOC,MACjCtI,SAAUlB,EAAMgB,YAAYE,SAASuI,gBAEzC3I,YAAY,KAEhBuJ,aAAc,CACVtJ,WAAYf,EAAMgB,YAAYC,OAAQ,SAAU,CAC5CsI,OAAQvJ,EAAMgB,YAAYuI,OAAOI,QACjCzI,SAAUlB,EAAMgB,YAAYE,SAAS0I,iBAEzC9I,WAAY,GAEhBgF,KAAM,CACFlC,MAAO,UACPmC,eAAgB,OAChB+C,WAAY,YAuELwB,GA1DqB,SAAE7M,GAElC,IAAMyE,EAAUpC,KACVE,EAAQuK,eACN9D,EAAoBhJ,EAApBgJ,KAAM+D,EAAc/M,EAAd+M,UACd,OACI,eAACC,GAAA,EAAD,CACI1H,UAAYb,EAAQ2H,OACpB5K,QAAQ,aACRyL,OAAO,OACPjE,KAAOA,EACPvE,QAAU,CACN8E,MAAO9E,EAAQ6H,aANvB,UASI,qBAAKhH,UAAYb,EAAQ8H,aAAzB,SACI,cAAC7G,EAAA,EAAD,CAAYa,QAAUwG,EAAtB,SAC0B,QAApBxK,EAAM2K,UAAsB,cAAC,KAAD,IAAsB,cAAC,KAAD,QAG5D,cAACC,GAAA,EAAD,IACA,cAACnC,GAAA,EAAD,UACM,CAAE,OAAQ,eAAgBxD,KAAK,SAAE4F,GAE/B,IAAIC,EAAO,GACX,OAASD,GAEL,IAAK,OACDC,EAAO,IACP,MACJ,IAAK,cACDA,EAAO,qBACP,MACJ,QACIA,EAAO,WAGf,OACI,cAAC,IAAD,CAAM/H,UAAYb,EAAQ4D,KAAO5C,GAAK4H,EAAoB9G,QAAUwG,EAApE,SACI,cAACO,GAAA,EAAD,CAAUC,QAAM,EAAhB,SACI,cAACC,GAAA,EAAD,CAAcC,QAAUL,KADLA,IADwBA,QAQ/D,cAACD,GAAA,EAAD,IACA,cAACnC,GAAA,EAAD,UACM,CAAE,YAAa,WAAYxD,KAAK,SAAE4F,GAAF,OAC9B,cAACE,GAAA,EAAD,CAAUC,QAAM,EAAchH,QAAUwG,EAAxC,SACI,cAACS,GAAA,EAAD,CAAcC,QAAUL,KADLA,YCtIrC/K,GAAYC,aAAY,SAAEC,GAAF,YAAe,CACzCmL,MAAI,GACA5K,QAAS,QADT,cAEEP,EAAMG,YAAYC,GAAI,MAAU,CAC9BG,QAAS,SAHb,yBAKU,GALV,OAmBO6K,GARA,WAEX,IAAMlJ,EAAUpC,KAChB,OACI,qBAAKiD,UAAYb,EAAQiJ,QCN3BrL,GAAYC,aAAY,SAAEC,GAAF,YAAe,CAC3CqL,SAAS,aACPzJ,SAAU,YACR5B,EAAMG,YAAYC,GAAI,MAAU,CAChCkL,UAAW,SAGfH,KAAM,CACJf,SAAU,GAEZmB,YAAU,GACRhL,QAAS,QADD,cAENP,EAAMG,YAAYC,GAAI,MAAU,CAChCG,QAAS,SAHH,yBAKE,GALF,GAOVyI,WAAY,CACVT,YAAavI,EAAMyF,QAAS,IAG9B+F,eAAe,aACbjL,QAAS,QACPP,EAAMG,YAAYC,GAAI,MAAU,CAChCG,QAAS,SAGbkL,cAAc,aACZlL,QAAS,QACPP,EAAMG,YAAYC,GAAI,MAAU,CAChCG,QAAS,SAGbmL,UAAW,CACTnL,QAAS,YAIPoL,GAAa5E,cAAY,SAAE/G,GAAF,MAAe,CAC5CC,KAAM,CACJ2D,MAAO,UACPtC,gBAAiB,UACjBsK,UAAW,WAJI7E,CAMZ8E,MAuCQC,GAhCuB,SAAErO,GAEtC,IAAMyE,EAAUpC,KACRiM,EAActO,EAAdsO,UAFV,EAG4BzF,IAAM3D,UAAU,GAH5C,mBAGU8D,EAHV,KAGgBuF,EAHhB,KAeE,OACE,qBAAKjJ,UAAYgJ,EAAY,GAAK7J,EAAQwJ,UAAY9H,MAAM,UAA5D,SACE,eAAC+H,GAAD,CAAY/J,SAAS,SAArB,UACE,eAACqK,GAAA,EAAD,CAASlJ,UAAYb,EAAQmJ,SAA7B,UACE,cAAC,GAAD,CAAkB5E,KAAOA,EAAO0C,WAdf,WAEvB6C,GAAS,MAaH,cAAC,GAAD,IACA,cAAC,GAAD,IACA,cAAC,GAAD,IACA,cAAC,GAAD,OAEF,cAAC,GAAD,CAAYvF,KAAOA,EAAO+D,UAfN,WAExBwB,GAAS,Y,mDN3ERnG,K,YAAAA,E,mBAAAA,E,kBAAAA,E,iBAAAA,E,cAAAA,E,eAAAA,E,WAAAA,Q,KAWUA,UOJT/F,GAAYC,aAAY,SAAEC,GAAF,MAAsB,CAChDkM,iBAAkB,CACd3L,QAAS,OACTG,eAAgB,UAEpByL,UAAU,aACNjM,MAAO,OACLF,EAAMG,YAAYC,GAAI,MAAU,CAC9BF,MAAO,SAGf8K,OAAQ,CACJoB,OAAQpM,EAAMyF,QAAS,GACvBvF,MAAO,KAEXmM,cAAe,CACX9L,QAAS,OACTG,eAAgB,cAuJT4L,GArIF,SAAE7O,GACd,IACW2E,EAA8E3E,EAA9E2E,KAAMZ,EAAwE/D,EAAxE+D,YAAaa,EAA2D5E,EAA3D4E,QAASE,EAAkD9E,EAAlD8E,UAAWgK,EAAuC9O,EAAvC8O,OAAQjK,EAA+B7E,EAA/B6E,MAAOkK,EAAwB/O,EAAxB+O,OAAQC,EAAgBhP,EAAhBgP,MAAOC,EAASjP,EAATiP,KAEvExK,EAAUpC,KAQhB,OACI,eAACoF,EAAA,EAAD,CAAMM,WAAS,EAACC,QAAU,EAAIC,QAAQ,SAAtC,UACI,cAACR,EAAA,EAAD,CAAMV,MAAI,EAACW,GAAK,GAAKpC,UAAYb,EAAQgK,iBAAzC,SACI,cAACS,GAAA,EAAD,CACI5J,UAAYb,EAAQiK,UACpBS,MAAM,OACNvO,KAAK,OACL+J,MAAQhG,EACRyK,SAAW,SAAAC,GAAE,OAAIN,EAAQM,EAAGC,OAAQlH,GAAczD,WAG1D,cAAC8C,EAAA,EAAD,CAAMV,MAAI,EAACW,GAAK,GAAKC,GAAK,EAAIrC,UAAYb,EAAQgK,iBAAlD,SACI,cAACS,GAAA,EAAD,CACI5J,UAAYb,EAAQiK,UACpBS,MAAM,aACNvO,KAAK,SACL2O,gBAAkB,CACdC,QAAQ,GAEZ7E,MAAQ9F,EACR4K,QAAU,SAAEJ,GAAF,OAAUA,EAAGC,OAAOI,UAC9BN,SAAW,SAAAC,GAAE,OAAIN,EAAQM,EAAGC,OAAQlH,GAAcvD,YAI1D,cAAC4C,EAAA,EAAD,CAAMV,MAAI,EAACW,GAAK,GAAKC,GAAK,EAAIrC,UAAYb,EAAQgK,iBAAlD,SACI,cAACS,GAAA,EAAD,CACI5J,UAAYb,EAAQiK,UACpBS,MAAM,eACNvO,KAAK,SACL+J,MAAQ7F,EACRyK,gBAAkB,CACdC,QAAQ,GAEZC,QAAU,SAAEJ,GAAF,OAAUA,EAAGC,OAAOI,UAC9BN,SAAW,SAAAC,GAAE,OAAIN,EAAQM,EAAGC,OAAQlH,GAAcuH,WAI1D,cAAClI,EAAA,EAAD,CAAMV,MAAI,EAACW,GAAK,GAAKpC,UAAYb,EAAQgK,iBAAzC,SACI,cAACS,GAAA,EAAD,CACI5J,UAAYb,EAAQiK,UACpBS,MAAM,SACNvO,KAAK,SACL+J,MAAQmE,EACRS,gBAAkB,CACdC,QAAQ,GAEZC,QAAU,SAAEJ,GAAF,OAAUA,EAAGC,OAAOI,UAC9BN,SAAW,SAAAC,GAAE,OAAIN,EAAQM,EAAGC,OAAQlH,GAAcR,YAK1D,cAACH,EAAA,EAAD,CAAMV,MAAI,EAACW,GAAK,GAAKpC,UAAYb,EAAQgK,iBAAzC,SACI,cAACS,GAAA,EAAD,CACI5J,UAAYb,EAAQiK,UACpBS,MAAM,cACNxE,MAAQ5G,EACRqL,SAAW,SAAAC,GAAE,OAAIN,EAAQM,EAAGC,OAAQlH,GAAcwH,OAClDC,KAAO,EACPC,WAAS,MAIjB,cAACrI,EAAA,EAAD,CAAMV,MAAI,EAACW,GAAK,GAAKpC,UAAYb,EAAQgK,iBAAzC,SACI,cAACS,GAAA,EAAD,CACI5J,UAAYb,EAAQiK,UACpBS,MAAM,UACNxE,MAAQ/F,EACRwK,SAAW,SAAAC,GAAE,OAAIN,EAAQM,EAAGC,OAAQlH,GAAcxD,UAClDiL,KAAO,EACPC,WAAS,MAIjB,cAACrI,EAAA,EAAD,CAAMV,MAAI,EAACW,GAAK,GAAKpC,UAAYb,EAAQgK,iBAAzC,SACI,eAACsB,GAAA,EAAD,CACIvO,QAAQ,YACR4E,UAAU,QAFd,wBAKI,uBACIxF,KAAK,OACLoP,OAAO,UACPZ,SAAW,SAAAC,GAAE,OAAIN,EAAQM,EAAGC,OAAQlH,GAAcnD,MAClDgL,QAAM,SAKlB,eAACxI,EAAA,EAAD,CAAMM,WAAS,EAAf,UACI,cAACN,EAAA,EAAD,CAAMV,MAAI,EAACW,GAAK,EAAIpC,UAAYb,EAAQmK,cAAxC,SACI,cAACmB,GAAA,EAAD,CACIvO,QAAQ,YACR2E,MAAM,UACNb,UAAYb,EAAQ8I,OACpB2C,UAAY,cAAC,KAAD,IACZ3J,QAAU,SAAE8I,GAAUJ,EAAMI,IALhC,sBAWJ,cAAC5H,EAAA,EAAD,CAAMV,MAAI,EAACW,GAAK,EAAIpC,UAAYb,EAAQmK,cAAxC,SACI,cAACmB,GAAA,EAAD,CACIvO,QAAQ,YACR2E,MAAM,UACNb,UAAYb,EAAQ8I,OACpB2C,UAAY,cAAC,IAAD,IACZ3J,QAAUyI,EALd,4BC/Id3M,GAAYC,aAAY,SAAEC,GAAF,MAAsB,CAChDC,KAAM,CACFQ,WAAY,YAuKLmN,GAjJuB,SAAEnQ,GAEpC,IAAMyE,EAAUpC,KACVpB,EAAWoD,cAFrB,EAIsCa,mBAAU,IAJhD,mBAIYkL,EAJZ,KAIsBC,EAJtB,OAKoDnL,mBAAU,IAL9D,mBAKYoL,EALZ,KAK6BC,EAL7B,OAM4CrL,mBAAU,IANtD,mBAMYsL,EANZ,KAMyBC,EANzB,OAOgDvL,mBAAU,GAP1D,mBAOYwL,EAPZ,KAO2BC,EAP3B,OAQwCzL,mBAAU,GARlD,mBAQY0L,EARZ,KAQuBC,EARvB,OAS0C3L,mBAAU,GATpD,mBASY4L,EATZ,KASwBC,EATxB,OAUoC7L,mBAAU,IAV9C,mBAUY8L,EAVZ,KAUqBC,EAVrB,KA2GI,OACI,eAACxJ,EAAA,EAAD,CAAMM,WAAS,EAACC,QAAU,EAAI1C,UAAYb,EAAQjC,KAAlD,UACI,cAACiF,EAAA,EAAD,CAAMV,MAAI,EAACW,GAAK,GAAKC,GAAK,EAA1B,SAEI,cAAC,GAAD,CACIjD,IAAI,GACJC,KAAOyL,EACPrM,YAAcuM,EACd1L,QAAU4L,EACV1L,UAAY4L,EACZ7L,MAAQ+L,EACR5L,WAAa8L,EACb7L,IAAM+L,EACNjM,QAAS,MAGjB,cAAC0C,EAAA,EAAD,CAAMV,MAAI,EAACW,GAAK,GAAKC,GAAK,EAA1B,SACI,cAAC,GAAD,CACIhD,KAAOyL,EACPrM,YAAcuM,EACd1L,QAAU4L,EACV1L,UAAY4L,EACZ7L,MAAQ+L,EACR9B,OAASgC,EACT7L,IAAM+L,EACNjC,OAnGM,SAAEO,EAAgD4B,GAEpE,OAASA,GAEL,KAAK9I,GAAczD,KACf0L,EAAaf,EAAO3E,OACpB,MACJ,KAAKvC,GAAcwH,KACfW,EAAoBjB,EAAO3E,OAC3B,MACJ,KAAKvC,GAAcxD,QACf6L,EAAgBnB,EAAO3E,OACvB,MACJ,KAAKvC,GAAcuH,KACf,GAAsB,KAAjBL,EAAO3E,MACZ,CACIgG,EAAkB,GAClB,MAEJA,EAAkBQ,SAAU7B,EAAO3E,QACnC,MACJ,KAAKvC,GAAcvD,MACf,GAAsB,KAAjByK,EAAO3E,MACZ,CACIkG,EAAc,GACd,MAEJA,EAAcM,SAAU7B,EAAO3E,QAC/B,MACJ,KAAKvC,GAAcR,MACf,GAAsB,KAAjB0H,EAAO3E,MACZ,CACIoG,EAAe,GACf,MAEJA,EAAeI,SAAU7B,EAAO3E,QAChC,MACJ,KAAKvC,GAAcnD,IACV,UAAWqK,GAzDb,SAAE8B,GAEb,IAAMC,EAAS,IAAIC,WACdF,IAEDC,EAAOE,cAAeH,GACtBC,EAAOG,OAAS,WAEZ,IAAMC,EAASJ,EAAOK,OACtBT,EAAYQ,EAAOE,cAiDfC,CAAQtC,EAAOuC,MAAO,MA6DtB7C,MAtCY,WAExBqB,EAAa,IACbQ,EAAc,GACdE,EAAe,GACfJ,EAAkB,GAClBJ,EAAoB,IACpBE,EAAgB,IAChBQ,EAAY,KA+BAhC,KAvDK,SAAEI,GAEnBA,EAAGyC,iBAWH7Q,EAAUW,GAA2B,CAVT,CACxB+C,KAAMyL,EACNvL,MAAO+L,EACP7M,YAAauM,EACb1L,QAAS4L,EACT3I,KAAM6I,EACN9I,MAAOkJ,EACP7L,IAAK+L,e,0CC5HX3O,GAAYC,aAAY,SAAEC,GAAF,MAAsB,CAChDkM,iBAAkB,CACd3L,QAAS,OACTG,eAAgB,UAEpByL,UAAU,aACNjM,MAAO,OACLF,EAAMG,YAAYC,GAAI,MAAU,CAC9BF,MAAO,SAGf8K,OAAQ,CACJoB,OAAQpM,EAAMyF,QAAS,GACvBvF,MAAO,KAEXmM,cAAe,CACX9L,QAAS,OACTG,eAAgB,cA8JT4L,GA3IF,SAAE7O,GACd,IACW2E,EAAgF3E,EAAhF2E,KAAMZ,EAA0E/D,EAA1E+D,YAAaa,EAA6D5E,EAA7D4E,QAASE,EAAoD9E,EAApD8E,UAAWgK,EAAyC9O,EAAzC8O,OAAQjK,EAAiC7E,EAAjC6E,MAAOkK,EAA0B/O,EAA1B+O,OAAQgD,EAAkB/R,EAAlB+R,MAAOC,EAAWhS,EAAXgS,OAEvEvN,EAAUpC,KAMhB,OACI,eAACoF,EAAA,EAAD,CAAMM,WAAS,EAACC,QAAU,EAAIC,QAAQ,SAAtC,UACI,cAACR,EAAA,EAAD,CAAMV,MAAI,EAACW,GAAK,GAAKpC,UAAYb,EAAQgK,iBAAzC,SACI,cAACS,GAAA,EAAD,CACI5J,UAAYb,EAAQiK,UACpBS,MAAM,OACNvO,KAAK,OACL+J,MAAQhG,EACRyK,SAAW,SAAAC,GAAE,OAAIN,EAAQM,EAAGC,OAAQlH,GAAczD,WAG1D,cAAC8C,EAAA,EAAD,CAAMV,MAAI,EAACW,GAAK,GAAKC,GAAK,EAAIrC,UAAYb,EAAQgK,iBAAlD,SACI,cAACS,GAAA,EAAD,CACI5J,UAAYb,EAAQiK,UACpBS,MAAM,aACNvO,KAAK,SACL2O,gBAAkB,CACdC,QAAQ,GAEZ7E,MAAQ9F,EACR4K,QAAU,SAAEJ,GAAF,OAAUA,EAAGC,OAAOI,UAC9BN,SAAW,SAAAC,GAAE,OAAIN,EAAQM,EAAGC,OAAQlH,GAAcvD,YAI1D,cAAC4C,EAAA,EAAD,CAAMV,MAAI,EAACW,GAAK,GAAKC,GAAK,EAAIrC,UAAYb,EAAQgK,iBAAlD,SACI,cAACS,GAAA,EAAD,CACI5J,UAAYb,EAAQiK,UACpBS,MAAM,eACNvO,KAAK,SACL+J,MAAQ7F,EACRyK,gBAAkB,CACdC,QAAQ,GAEZC,QAAU,SAAEJ,GAAF,OAAUA,EAAGC,OAAOI,UAC9BN,SAAW,SAAAC,GAAE,OAAIN,EAAQM,EAAGC,OAAQlH,GAAcuH,WAI1D,cAAClI,EAAA,EAAD,CAAMV,MAAI,EAACW,GAAK,GAAKpC,UAAYb,EAAQgK,iBAAzC,SACI,cAACS,GAAA,EAAD,CACI5J,UAAYb,EAAQiK,UACpBS,MAAM,SACNvO,KAAK,SACL+J,MAAQmE,EACRS,gBAAkB,CACdC,QAAQ,GAEZC,QAAU,SAAEJ,GAAF,OAAUA,EAAGC,OAAOI,UAC9BN,SAAW,SAAAC,GAAE,OAAIN,EAAQM,EAAGC,OAAQlH,GAAcR,YAK1D,cAACH,EAAA,EAAD,CAAMV,MAAI,EAACW,GAAK,GAAKpC,UAAYb,EAAQgK,iBAAzC,SACI,cAACS,GAAA,EAAD,CACI5J,UAAYb,EAAQiK,UACpBS,MAAM,cACNxE,MAAQ5G,EACRqL,SAAW,SAAAC,GAAE,OAAIN,EAAQM,EAAGC,OAAQlH,GAAcwH,OAClDC,KAAO,EACPC,WAAS,MAIjB,cAACrI,EAAA,EAAD,CAAMV,MAAI,EAACW,GAAK,GAAKpC,UAAYb,EAAQgK,iBAAzC,SACI,cAACS,GAAA,EAAD,CACI5J,UAAYb,EAAQiK,UACpBS,MAAM,UACNxE,MAAQ/F,EACRwK,SAAW,SAAAC,GAAE,OAAIN,EAAQM,EAAGC,OAAQlH,GAAcxD,UAClDiL,KAAO,EACPC,WAAS,MAIjB,cAACrI,EAAA,EAAD,CAAMV,MAAI,EAACW,GAAK,GAAKpC,UAAYb,EAAQgK,iBAAzC,SASI,eAACsB,GAAA,EAAD,CACIvO,QAAQ,YACR4E,UAAU,QAFd,wBAKI,uBACIxF,KAAK,OACLoP,OAAO,UACPZ,SAAW,SAAAC,GAAE,OAAIN,EAAQM,EAAGC,OAAQlH,GAAcnD,MAClDgL,QAAM,SAKlB,eAACxI,EAAA,EAAD,CAAMM,WAAS,EAAf,UACI,cAACN,EAAA,EAAD,CAAMV,MAAI,EAACW,GAAK,EAAIpC,UAAYb,EAAQmK,cAAxC,SACI,cAACmB,GAAA,EAAD,CACIvO,QAAQ,YACR2E,MAAM,UACNb,UAAYb,EAAQ8I,OACpB2C,UAAY,cAAC,KAAD,IACZ3J,QAAU,SAAE8I,GAAU2C,EAAQ3C,IALlC,oBAWJ,cAAC5H,EAAA,EAAD,CAAMV,MAAI,EAACW,GAAK,EAAIpC,UAAYb,EAAQmK,cAAxC,SACI,cAACmB,GAAA,EAAD,CACIvO,QAAQ,YACR2E,MAAM,UACNb,UAAYb,EAAQ8I,OACpB2C,UAAY,cAAC,KAAD,IACZ3J,QAAUwL,EALd,4BChJd1P,GAAYC,aAAY,SAAEC,GAAF,MAAsB,CAChDC,KAAM,CACFyP,UAAW,QAEfhL,QAAS,CACLlE,OAAQ,OACRE,eAAgB,SAChBC,WAAY,SACZJ,QAAS,YA+LFoP,GAtLO,SAAElS,GACvB,IACWmS,EAAUnS,EAAVmS,MAEF1N,EAAUpC,KACVpB,EAAWoD,cAJrB,EAMoCa,mBAAUX,aAAa,SAAEC,GAAF,OAAkBA,EAAMnD,SAAS+Q,QAAQ,SAAErL,GAAF,OAAiBA,EAAKrC,MAAQyN,EAAME,OAAOjS,MAAM,OANrJ,mBAMYyB,EANZ,KAMqByQ,EANrB,OAOsCpN,mBAAUrD,EAAUA,EAAQ8C,KAAO,IAPzE,mBAOYyL,EAPZ,KAOsBC,EAPtB,OAQwCnL,mBAAUrD,EAAUA,EAAQgD,MAAQ,GAR5E,mBAQY+L,EARZ,KAQuBC,EARvB,OASoD3L,mBAAUrD,EAAUA,EAAQkC,YAAc,IAT9F,mBASYuM,EATZ,KAS6BC,EAT7B,OAU4CrL,mBAAUrD,EAAUA,EAAQ+C,QAAU,IAVlF,mBAUY4L,EAVZ,KAUyBC,EAVzB,OAWgDvL,mBAAUrD,EAAUA,EAAQgG,KAAO,GAXnF,mBAWY6I,EAXZ,KAW2BC,EAX3B,OAY0CzL,mBAAUrD,EAAUA,EAAQ+F,MAAQ,GAZ9E,mBAYYkJ,EAZZ,KAYwBC,EAZxB,OAaoC7L,mBAAUrD,EAAUA,EAAQoD,IAAM,IAbtE,mBAaY+L,EAbZ,KAaqBC,EAbrB,KAeUsB,EAAU,uCAAG,4BAAArR,EAAA,sEAEQZ,IAAMa,IAAN,oBAAyBgR,EAAME,OAAOjS,KAF9C,cAEToS,EAFS,yBAGRA,EAASpR,KAAKS,SAHN,2CAAH,qDAMhB3B,qBAAW,WAEP,sBAAE,4BAAAgB,EAAA,yDAEQW,EAFR,iCAI+B0Q,IAJ/B,OAIYzQ,EAJZ,OAKMwQ,EAAYxQ,GACZuO,EAAavO,EAAW6C,MACxBkM,EAAc/O,EAAW+C,OACzB0L,EAAoBzO,EAAWiC,aAC/B0M,EAAgB3O,EAAW8C,SAC3B+L,EAAkB7O,EAAW+F,MAC7BkJ,EAAejP,EAAW8F,OAC1BqJ,EAAYnP,EAAWmD,KAZ7B,2CAAF,KAeD,IAoGH,OACI,mCAEQpD,EACI,eAAC4F,EAAA,EAAD,CAAMM,WAAS,EAACC,QAAU,EAAI1C,UAAYb,EAAQjC,KAAlD,UACI,cAACiF,EAAA,EAAD,CAAMV,MAAI,EAACW,GAAK,GAAKC,GAAK,EAA1B,SAEI,cAAC,GAAD,CACIjD,IAAM7C,EAAQ6C,IACdC,KAAOyL,EACPvL,MAAQ+L,EACR7M,YAAcuM,EACd1L,QAAU4L,EACVxL,WAAa8L,EACbhM,UAAY4L,EACZzL,IAAM+L,EACNjM,QAAS,MAIjB,cAAC0C,EAAA,EAAD,CAAMV,MAAI,EAACW,GAAK,GAAKC,GAAK,EAA1B,SACI,cAAC,GAAD,CACIhD,KAAOyL,EACPrM,YAAcuM,EACd1L,QAAU4L,EACV1L,UAAY4L,EACZ7L,MAAQ+L,EACR9B,OAASgC,EACT7L,IAAM+L,EACNjC,OA7GN,SAAEO,EAAgD4B,GAEpE,OAASA,GAEL,KAAK9I,GAAczD,KACf0L,EAAaf,EAAO3E,OACpB,MACJ,KAAKvC,GAAcwH,KACfW,EAAoBjB,EAAO3E,OAC3B,MACJ,KAAKvC,GAAcxD,QACf6L,EAAgBnB,EAAO3E,OACvB,MACJ,KAAKvC,GAAcuH,KACf,GAAsB,KAAjBL,EAAO3E,MACZ,CACIgG,EAAkB,GAClB,MAEJA,EAAkBQ,SAAU7B,EAAO3E,QACnC,MACJ,KAAKvC,GAAcvD,MACf,GAAsB,KAAjByK,EAAO3E,MACZ,CACIkG,EAAc,GACd,MAEJA,EAAcM,SAAU7B,EAAO3E,QAC/B,MACJ,KAAKvC,GAAcR,MACf,GAAsB,KAAjB0H,EAAO3E,MACZ,CACIoG,EAAe,GACf,MAEJA,EAAeI,SAAU7B,EAAO3E,QAChC,MACJ,KAAKvC,GAAcnD,IACV,UAAWqK,GAvDb,SAAE8B,GAEb,IAAMC,EAAS,IAAIC,WACdF,IAEDC,EAAOE,cAAeH,GACtBC,EAAOG,OAAS,WAEZ,IAAMC,EAASJ,EAAOK,OACtBT,EAAYQ,KA+CRG,CAAQtC,EAAOuC,MAAO,MAuEVE,MA1CP,WAEjB1B,EAAaxO,EAAQ8C,MACrBkM,EAAchP,EAAQgD,OACtBkM,EAAelP,EAAQ+F,OACvB+I,EAAkB9O,EAAQgG,MAC1B0I,EAAoB1O,EAAQkC,aAC5B0M,EAAgB5O,EAAQ+C,SACxBqM,EAAYpP,EAAQoD,MAmCI+M,OAjEP,SAAE3C,GAEnBA,EAAGyC,iBACH,IAAMzR,EAA0B,CAC5BsE,KAAMyL,EACNvL,MAAO+L,EACP7M,YAAauM,EACb1L,QAAS4L,EACT3I,KAAM6I,EACN9I,MAAOkJ,EACP7L,IAAK+L,GAKL/P,EAFCY,EAESD,GAAwBC,EAAQ6C,IAAKrE,GAGrCuB,GAAsBvB,YAmDxB,cAACoH,EAAA,EAAD,CAAMM,WAAS,EAACzC,UAAYb,EAAQwC,QAApC,SACI,cAACkB,GAAA,EAAD,SCvMTsK,GATc,SAAEzS,GAE3B,OACI,gDCMO0S,GATQ,SAAE1S,GAErB,OACI,yCCMO2S,GATW,SAAE3S,GAExB,OACI,4C,oBCRR,SAAS4S,GAAQ5S,GAEb,OAAO,cAAC,KAAD,cAAU0J,UAAY,EAAIlI,QAAQ,UAAcxB,ICmB3D,IA8De6S,GA9DQ,WAInB,IAAM5R,EAAWoD,cAEX1D,EAAY4D,aAAa,SAAEC,GAAF,OAAkBA,EAAMsO,YAEjDC,EAAsB,SAAE5J,EAA8B6J,GAExC,cAAXA,GAIL/R,EAAUP,MAblB,EAiBgDwE,oBAAU,GAjB1D,mBAiBY+N,EAjBZ,KAiB2BC,EAjB3B,KAmBI,OACI,eAAC,IAAD,WACI,cAAC,GAAD,CAAK5E,UAAY2E,IACjB,eAACxL,EAAA,EAAD,CAAMM,WAAS,EAAf,UACI,cAACN,EAAA,EAAD,CAAMV,MAAI,EAACW,IAAK,EAAQC,GAAK,EAAIwL,GAAK,IACtC,eAAC1L,EAAA,EAAD,CAAMV,MAAI,EAACW,GAAK,GAAKC,GAAK,GAAKwL,GAAK,EAApC,UACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAOC,OAAK,EAAC/F,KAAK,IAAIjH,UAAYgB,KAClC,cAAC,IAAD,CAAOgM,OAAK,EAAC/F,KAAO,SAAWjH,UAAYgB,KAC3C,cAAC,IAAD,CAAOgM,OAAK,EAAC/F,KAAK,qBAAqBjH,UAAYiN,KACnD,cAAC,IAAD,CAAOhG,KAAK,qBAAqBjH,UAAY8L,KAC7C,cAAC,IAAD,CAAO7E,KAAK,WAAWjH,UAAYkN,KACnC,cAAC,IAAD,CAAOjG,KAAK,SAASjH,UAAYmN,KACjC,cAAC,IAAD,CAAOlG,KAAK,YAAYjH,UAAYoN,KACpC,cAAC,IAAD,CAAOnG,KAAK,IAAZ,SACI,cAAC,EAAD,CAAcpN,QAAUiT,SAKhC,cAACO,GAAA,EAAD,CACIzK,KAAOrI,EAAUqI,KACjB0K,iBAAmB,IACnBtJ,QAAU2I,EACVnJ,aAAe,CACXC,SAAU,SACVC,WAAY,SANpB,SAQI,cAAC,GAAD,CAAOM,QAAU2I,EAAsBY,SAAWhT,EAAUa,QAA5D,SACMb,EAAUY,eAIxB,cAACkG,EAAA,EAAD,CAAMV,MAAI,EAACW,IAAK,EAAQC,GAAK,EAAIwL,GAAK,WCxEjCS,I,mKAEnB,WAEE,OACE,qBAAKxT,GAAG,SAAR,SACE,cAAC,GAAD,U,GANyByT,cCUlBC,GAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,6BCQCQ,GAPCC,aAAiB,CAC7BlQ,SCL4B,WAC/B,IADiCE,EAClC,wDAD0DgB,EAC1D,uCACI,OAASA,EAAO5E,MAEZ,IAAK,QACD4D,GAAQ,EACR,MACJ,IAAK,SACDA,GAAQ,EAGhB,OAAOA,GDLPnD,SEFoB,WACvB,IADyBmD,EAC1B,uDADyC,GAAIgB,EAC7C,uCACI,OAASA,EAAO5E,MAEZ,IAAK,MACD,OAAO4E,EAAO3E,QAClB,IAAK,cACD,MAAM,GAAN,oBAAY2D,GAAZ,CAAmBgB,EAAO3E,UAC9B,IAAK,SAED,OADAY,QAAQC,IAAK8D,EAAO3E,SACb2D,EAAMgD,KAAK,SAAE3F,GAAF,OAAeA,EAAQ6C,MAAQc,EAAO3E,QAAQ6D,IAAMc,EAAO3E,QAAUgB,KAC3F,IAAK,SACD,OAAO2C,EAAM4N,QAAQ,SAAEvQ,GAAF,OAAeA,EAAQ6C,MAAQc,EAAO3E,WAC/D,QACI,OAAO2D,IFXf8C,kBEiB6B,WAChC,IADkC9C,EACnC,wDAD2DgB,EAC3D,uCACI,OAASA,EAAO5E,MAEZ,IAAK,SACD,OAAO,EACX,IAAK,OACD,OAAO,EACX,QACI,OAAO4D,IFzBfsO,SGAoB,WACvB,IADyBtO,EAC1B,uDAD6C,CAAEwE,MAAM,EAAOzH,QAAS,GAAIC,QAAS,QAAUgE,EAC5F,uCACI,OAASA,EAAO5E,MAEZ,IAAK,OACD,OAAO,cAAEoI,MAAM,GAASxD,EAAO3E,SACnC,IAAK,OACD,OAAO,6BAAK2D,GAAZ,IAAmBwE,MAAM,IAC7B,QACI,OAAOxE,MClBNiQ,GAAQC,aAAaH,GAASI,aAASC,aAAiBC,MAAWC,OAAgBC,8BAC1FD,OAAgBC,iCCEtBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUT,MAAQA,GAAlB,SACE,cAAC,GAAD,QAGJU,SAASC,eAAgB,SAM3BtB,O","file":"static/js/main.c790d8f2.chunk.js","sourcesContent":["enum AddProductMessages\r\n{\r\n    success = \"The product was added succesfully!\",\r\n    fail = \"Something went wrong...\",\r\n    conflict = \"Product name is already in used!\",\r\n    multisuccess = \"Products added succesfully!\"\r\n}\r\n\r\nexport default AddProductMessages;","import React, { useEffect } from 'react';\r\n\r\ninterface Props\r\n{\r\n    showNav: ( is: boolean ) => void;\r\n}\r\n\r\n//@the component that renders when you access an invalid route\r\nconst NotFountComponent: React.FC<Props> = ( props: Props ) =>\r\n{\r\n    const { showNav } = props;\r\n\r\n    useEffect( () =>\r\n    {\r\n        showNav( false );\r\n        return () =>\r\n        {\r\n            showNav( true );\r\n        };\r\n    }, [] );\r\n    return (\r\n        <>\r\n            No page on this path!\r\n        </>\r\n    );\r\n};\r\n\r\nexport default NotFountComponent;\r\n","import axios from 'axios';\r\n\r\ninterface Product\r\n{\r\n    name: string;\r\n    price: number;\r\n    description?: string;\r\n    details?: string;\r\n    sale?: number;\r\n    stock?: number;\r\n    src: string;\r\n}\r\n\r\n\r\n// 'http://localhost:5000/products'; = proxy url\r\n\r\n\r\n//get products\r\nexport const fetchProducts = () => axios.get( '/products' );\r\n\r\n//get specific product\r\nexport const fetchSpecificProduct = ( id: string ) => axios.get( `/products/${ id }` );\r\n\r\n//send new product\r\nexport const postProduct = ( newProduct: Product ) => axios.post( `/products/add-product`, newProduct );\r\n\r\n//send new products\r\nexport const postProducts = ( newProducts: Product[] ) => axios.post( `/products/add-products`, newProducts );\r\n\r\n//updete product\r\n\r\nexport const patchProduct = ( id: string, updatedProduct: any ) => axios.patch( `/products/${ id }`, updatedProduct );\r\n\r\nexport const deleteProduct = ( id: string ) => axios.delete( `/products/${ id }` );\r\n\r\nexport const addTestUser = () => axios.post( '/users', {} );","interface SnackInfo\r\n{\r\n    message: string,\r\n    variant: string;\r\n}\r\n\r\nconst showSnackbar = ( snackInfo: SnackInfo ) =>\r\n{\r\n    return {\r\n        type: \"SHOW\",\r\n        payload: snackInfo\r\n    };\r\n};\r\n\r\nconst hideSnackbar = () =>\r\n{\r\n    return {\r\n        type: \"HIDE\",\r\n    };\r\n};\r\n\r\n\r\n\r\nconst snackbarActionManager = {\r\n    show: showSnackbar,\r\n    hide: hideSnackbar,\r\n};\r\n\r\nexport { snackbarActionManager };","import React from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport { authentificationAction } from '../../actions';\r\nimport { Link } from 'react-router-dom';\r\n\r\ninterface StyleMenuProps\r\n{\r\n  id: string;\r\n  anchorEl: any;\r\n  keepMounted: any;\r\n  open: boolean;\r\n  onClose: () => void;\r\n  PaperProps: {};\r\n\r\n}\r\n\r\ntype OptionsInterface = [ string, string ][];\r\n\r\nenum OptionsNames\r\n{\r\n  login = \"Login\",\r\n  signup = \"Sign up\",\r\n  logout = \"Logout\",\r\n  accout = \"Account\"\r\n}\r\n\r\nenum OptionsLinks\r\n{\r\n  login = '/login',\r\n  signup = '/register',\r\n  logout = '/home',\r\n  accout = '/account',\r\n}\r\n\r\n\r\nconst useStyles = makeStyles( ( theme ) => ( {\r\n  icon: {\r\n    color: '#fafafa',\r\n  },\r\n  Link: {\r\n    textDecoration: 'none',\r\n    color: '#000',\r\n  }\r\n} ) );\r\n\r\n\r\n\r\nconst ITEM_HEIGHT = 48;\r\n\r\n\r\nconst LongMenu: React.FC = () =>\r\n{\r\n\r\n  //brute force login state\r\n  const isLogged = useSelector( ( state: any ) => state.isLogged );\r\n  const dispatch = useDispatch();\r\n\r\n  //@account menu items\r\n  const options: OptionsInterface = isLogged ?\r\n    [ [ OptionsNames.accout, OptionsLinks.accout ], [ OptionsNames.logout, OptionsLinks.logout ] ] :\r\n    [ [ OptionsNames.login, OptionsLinks.login ], [ OptionsNames.signup, OptionsLinks.signup ] ];\r\n\r\n  const [ anchorEl, setAnchorEl ] = React.useState( null );\r\n  const open = Boolean( anchorEl );\r\n\r\n  const classes = useStyles();\r\n\r\n  const handleAccoutClick = ( event: any ) =>\r\n  {\r\n    setAnchorEl( event.currentTarget );\r\n  };\r\n\r\n\r\n  const handleAccountMenuClick = ( event: any ) =>\r\n  {\r\n    handleAccountClose();\r\n    // sinteticalLogin(event);\r\n  };\r\n\r\n  // @brute force login\r\n  const sinteticalLogin = ( event: any ) =>\r\n  {\r\n    switch ( event.target.innerText )\r\n    {\r\n      case 'Login':\r\n        dispatch( authentificationAction.login() );\r\n        break;\r\n      case 'Logout':\r\n        dispatch( authentificationAction.logout() );\r\n        break;\r\n    }\r\n  };\r\n\r\n  const handleAccountClose = () =>\r\n  {\r\n    setAnchorEl( null );\r\n  };\r\n\r\n  const StyledMenu = withStyles( {\r\n    paper: {\r\n      border: '1px solid #d3d4d5',\r\n    },\r\n  } )( ( props: StyleMenuProps ) => (\r\n    <Menu\r\n      elevation={ 0 }\r\n      getContentAnchorEl={ null }\r\n      anchorOrigin={ {\r\n        vertical: 'bottom',\r\n        horizontal: 'center',\r\n      } }\r\n      transformOrigin={ {\r\n        vertical: 'top',\r\n        horizontal: 'center',\r\n      } }\r\n      open={ false }\r\n      { ...props }\r\n    />\r\n  ) );\r\n\r\n  return (\r\n    <div>\r\n      <IconButton\r\n        aria-label=\"more\"\r\n        aria-controls=\"long-menu\"\r\n        aria-haspopup=\"true\"\r\n        onClick={ handleAccoutClick }\r\n      >\r\n        <AccountCircleIcon className={ classes.icon } />\r\n      </IconButton>\r\n      <StyledMenu\r\n        id=\"long-menu\"\r\n        anchorEl={ anchorEl }\r\n        keepMounted\r\n        open={ open }\r\n        onClose={ handleAccountClose }\r\n        PaperProps={ {\r\n          style: {\r\n            maxHeight: ITEM_HEIGHT * 4.5,\r\n            width: '20ch',\r\n          },\r\n        } }\r\n      >\r\n        { options.map( ( option ) => (\r\n          <Link to={ option[ 1 ] } key={ option[ 0 ] } className={ classes.Link }>\r\n            <MenuItem value={ option[ 0 ] } selected={ option[ 0 ] === 'Pyxis' } onClick={ handleAccountMenuClick }>\r\n              { option[ 0 ] }\r\n            </MenuItem>\r\n          </Link>\r\n        ) ) }\r\n      </StyledMenu>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LongMenu;","import * as API from '../api';\r\nimport { snackbarActionManager } from './snackbarActions';\r\nimport AddProductMessages from '../api/constants';\r\n\r\ninterface Action\r\n{\r\n    type: string;\r\n    payload: [];\r\n}\r\n\r\ninterface Product\r\n{\r\n    name: string;\r\n    price: number;\r\n    description?: string;\r\n    details?: string;\r\n    sale?: number;\r\n    stock?: number;\r\n    src: string;\r\n}\r\n\r\n\r\n\r\n//get request of products state\r\nconst fetchProducts = () => async ( dispatch: any ) =>\r\n{\r\n\r\n    try\r\n    {\r\n        const { data } = await API.fetchProducts();\r\n\r\n        dispatch( { type: 'GET', payload: data.products } );\r\n        dispatch( loaded() );\r\n    } catch ( error )\r\n    {\r\n        dispatch( { type: 'GET', payload: [] } );\r\n        dispatch( loaded() );\r\n        dispatch( snackbarActionManager.hide() );\r\n        dispatch( snackbarActionManager.show( { message: \"Connection failed\", variant: 'error' } ) );\r\n        console.log( error );\r\n    }\r\n\r\n\r\n};\r\n\r\n\r\n//single item post request for product items\r\nconst postProduct = ( product: Product ) => async ( dispatch: any ) =>\r\n{\r\n    try\r\n    {\r\n        const { data } = await API.postProduct( product );\r\n\r\n        if ( data.status === \"success\" )\r\n        {\r\n            console.log( data.status );\r\n            dispatch( snackbarActionManager.hide() );\r\n            dispatch( snackbarActionManager.show( { message: data.message, variant: 'success' } ) );\r\n        }\r\n        else\r\n        {\r\n            dispatch( snackbarActionManager.hide() );\r\n            dispatch( snackbarActionManager.show( { message: data.message, variant: 'warning' } ) );\r\n        }\r\n\r\n        console.log( data );\r\n        dispatch( dump() );\r\n        dispatch( { type: \"ADD-PRODUCT\", payload: data } );\r\n    } catch ( error )\r\n    {\r\n        if ( error.message === 'Request failed with status code 409' )\r\n        {\r\n            dispatch( snackbarActionManager.show( { message: AddProductMessages.conflict, variant: 'error' } ) );\r\n        } else\r\n        {\r\n            dispatch( snackbarActionManager.show( { message: AddProductMessages.fail, variant: 'error' } ) );\r\n        }\r\n        console.log( error.message );\r\n    }\r\n};\r\n\r\n\r\n//multiple items post request for products state\r\nconst postProducts = ( products: Product[] ) => async ( dispatch: any ) =>\r\n{\r\n    try\r\n    {\r\n        const { data } = await API.postProducts( products );\r\n        if ( data.status === \"success\" )\r\n        {\r\n            dispatch( snackbarActionManager.hide() );\r\n            dispatch( snackbarActionManager.show( { message: data.message, variant: 'success' } ) );\r\n\r\n        }\r\n        else\r\n        {\r\n            dispatch( snackbarActionManager.hide() );\r\n            dispatch( snackbarActionManager.show( { message: data.message, variant: 'warning' } ) );\r\n        }\r\n        console.log( data );\r\n        dispatch( dump() );\r\n        dispatch( { type: \"ADD-PRODUCTS\", payload: data } );\r\n    } catch ( error )\r\n    {\r\n        if ( error.message === 'Request failed with status code 409' )\r\n        {\r\n            dispatch( snackbarActionManager.hide() );\r\n            dispatch( snackbarActionManager.show( { message: AddProductMessages.conflict, variant: 'error' } ) );\r\n        } else\r\n        {\r\n            dispatch( snackbarActionManager.hide() );\r\n            dispatch( snackbarActionManager.show( { message: AddProductMessages.fail, variant: 'error' } ) );\r\n        }\r\n        console.log( error.message );\r\n    }\r\n};\r\n\r\n\r\n//singe item update request for products state\r\nconst updateProduct = ( id: 'string', product: Product ) => async ( dispatch: any ) =>\r\n{\r\n    try\r\n    {\r\n        const { data } = await API.patchProduct( id, product );\r\n        console.log( data );\r\n        if ( data.status === \"success\" )\r\n        {\r\n            dispatch( snackbarActionManager.hide() );\r\n            dispatch( snackbarActionManager.show( { message: data.message, variant: 'success' } ) );\r\n\r\n        }\r\n        else\r\n        {\r\n            dispatch( snackbarActionManager.hide() );\r\n            dispatch( snackbarActionManager.show( { message: data.message, variant: 'warning' } ) );\r\n        }\r\n        dispatch( { type: 'UPDATE', payload: data } );\r\n        dispatch( fetchProducts() );\r\n    } catch ( error )\r\n    {\r\n        dispatch( snackbarActionManager.hide() );\r\n        dispatch( snackbarActionManager.show( { message: AddProductMessages.fail, variant: 'error' } ) );\r\n        console.log( error );\r\n    }\r\n};\r\n\r\n// single item delete for products state\r\nconst deleteProduct = ( id: string ) => async ( dispatch: any ) =>\r\n{\r\n    try\r\n    {\r\n        const { data } = await API.deleteProduct( id );\r\n        console.log( data );\r\n        if ( data.status === \"success\" )\r\n        {\r\n            dispatch( snackbarActionManager.hide() );\r\n            dispatch( snackbarActionManager.show( { message: data.message, variant: 'success' } ) );\r\n\r\n        }\r\n        else\r\n        {\r\n            dispatch( snackbarActionManager.hide() );\r\n            dispatch( snackbarActionManager.show( { message: data.message, variant: 'warning' } ) );\r\n        }\r\n        dispatch( { type: 'DELETE', payload: id } );\r\n    } catch ( error )\r\n    {\r\n        console.log( error );\r\n    }\r\n};\r\n\r\n//productsAreLoaded -> true\r\nconst loaded = () =>\r\n{\r\n    return {\r\n        type: 'LOADED',\r\n    };\r\n};\r\n\r\n\r\n//productsAreLoaded -> false\r\nconst dump = () =>\r\n{\r\n    return {\r\n        type: \"DUMP\",\r\n    };\r\n};\r\n\r\nconst productsActions = { get: fetchProducts, post: postProduct, multipost: postProducts, update: updateProduct, delete: deleteProduct, load: loaded, dump: dump };\r\n\r\nexport { productsActions };","import React, { useState } from 'react';\r\nimport clsx from 'clsx';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport\r\n{\r\n    Card,\r\n    CardHeader,\r\n    IconButton,\r\n    CardMedia,\r\n    CardContent,\r\n    Typography,\r\n    CardActions,\r\n    Collapse,\r\n\r\n} from '@material-ui/core';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AddShoppingCartIcon from '@material-ui/icons/AddShoppingCart';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport { red } from '@material-ui/core/colors';\r\nimport BrokenImageIcon from '@material-ui/icons/BrokenImage';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { productsActions } from '../actions';\r\n\r\nconst useStyles = makeStyles( ( theme ) => ( {\r\n    root: {\r\n        width: '100%',\r\n        [ theme.breakpoints.up( 'md' ) ]: {\r\n            maxWidth: 345,\r\n        }\r\n    },\r\n    media: {\r\n        display: 'flex',\r\n        height: 0,\r\n        paddingTop: '56.25%', // 16:9\r\n        justifyContent: 'center',\r\n        alignItems: 'center'\r\n    },\r\n    expand: {\r\n        transform: 'rotate(0deg)',\r\n        marginLeft: 'auto',\r\n        transition: theme.transitions.create( 'transform', {\r\n            duration: theme.transitions.duration.shortest,\r\n        } ),\r\n    },\r\n    expandOpen: {\r\n        transform: 'rotate(180deg)',\r\n    },\r\n    avatar: {\r\n        backgroundColor: red[ 500 ],\r\n    },\r\n    description: {\r\n        overflow: 'hidden',\r\n        // wordWrap: 'normal'\r\n    },\r\n    icon: {\r\n        top: '-90px',\r\n        position: 'relative',\r\n    }\r\n} ) );\r\n\r\n//@params: @active = activates the action buttons when #PROTO-DISPLAY\r\ninterface Props\r\n{\r\n    _id: string;\r\n    name: string;\r\n    description?: string;\r\n    details?: string;\r\n    promotion?: string | number;\r\n    price: number;\r\n    piecesLeft?: number;\r\n    src?: string;\r\n    active: boolean;\r\n}\r\n\r\n\r\n//TODO documnet this component\r\n//@component that renders the card component of a product\r\nconst ProductCard = ( props: Props ) =>\r\n{\r\n\r\n    const dispatch = useDispatch();\r\n    //bruteforce state of login\r\n    const isLogged = useSelector( ( state: any ) => state.isLogged );\r\n    const classes = useStyles();\r\n    const {\r\n        _id,\r\n        name,\r\n        description,\r\n        details,\r\n        promotion,\r\n        price,\r\n        piecesLeft,\r\n        active,\r\n        src\r\n    } = props;\r\n\r\n    //@details block expand state\r\n    const [ expanded, setExpanded ] = useState( false );\r\n\r\n\r\n    //@expands the details block inside card\r\n    const handleExpandClick = () =>\r\n    {\r\n        setExpanded( !expanded );\r\n    };\r\n\r\n    //@deletes the current item using the ID only if the card is active(in admin/ only)\r\n    const deteleItemHandler = ( id: string ) =>\r\n    {\r\n        if ( active )\r\n        {\r\n            dispatch( productsActions.delete( id ) );\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Card className={ classes.root }>\r\n            <CardHeader\r\n                action={\r\n                    active ?\r\n                        <Link to={ `/admin/product/${ _id }` }>\r\n                            <IconButton aria-label=\"settings\">\r\n                                <MoreVertIcon />\r\n                            </IconButton>\r\n                        </Link> :\r\n                        <IconButton aria-label=\"settings\">\r\n                            <MoreVertIcon />\r\n                        </IconButton>\r\n                }\r\n                title={ name }\r\n                subheader={ `${ price } RON` }\r\n            />\r\n\r\n\r\n            <CardMedia\r\n                className={ classes.media }\r\n                children={ src ? null : <BrokenImageIcon className={ classes.icon } /> }\r\n                image={ src }\r\n                title=\"asd\"\r\n            />\r\n\r\n\r\n            <CardContent className={ classes.description }>\r\n                <Typography variant=\"body2\" display='block' color=\"textSecondary\" component=\"p\">\r\n                    { description }\r\n                </Typography>\r\n            </CardContent>\r\n\r\n\r\n            <CardActions disableSpacing>\r\n                { isLogged ?\r\n                    <IconButton aria-label=\"add to favorites\">\r\n                        <FavoriteIcon />\r\n                    </IconButton> :\r\n                    null }\r\n\r\n                <IconButton aria-label=\"delete\" onClick={ () => deteleItemHandler( _id ) }>\r\n                    <DeleteIcon />\r\n                </IconButton>\r\n\r\n\r\n                <IconButton aria-label=\"share\">\r\n                    <AddShoppingCartIcon />\r\n                </IconButton>\r\n\r\n\r\n                { details ?\r\n                    <IconButton\r\n                        className={ clsx( classes.expand, {\r\n                            [ classes.expandOpen ]: expanded,\r\n                        } ) }\r\n                        onClick={ handleExpandClick }\r\n                        aria-expanded={ expanded }\r\n                        aria-label=\"show more\"\r\n                    >\r\n                        <ExpandMoreIcon />\r\n                    </IconButton> : null }\r\n\r\n\r\n            </CardActions>\r\n\r\n\r\n            <Collapse in={ expanded } timeout=\"auto\" unmountOnExit>\r\n                <CardContent>\r\n                    <Typography variant=\"body2\" component='p' gutterBottom display='block' color=\"textSecondary\">\r\n                        { details }\r\n                    </Typography>\r\n                </CardContent>\r\n            </Collapse>\r\n\r\n\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default ProductCard;\r\n","import React, { useState, useEffect } from 'react';\r\nimport Card from '../ProductCard';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Grid, CircularProgress } from '@material-ui/core';\r\n// import CropOriginalIcon from '@material-ui/icons/CropOriginal';\r\nimport { productsActions } from '../../actions';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport SignalCellularNoSimOutlinedIcon from '@material-ui/icons/SignalCellularNoSimOutlined';\r\n\r\ninterface Product extends Document\r\n{\r\n    _id: string;\r\n    name: string,\r\n    price: number,\r\n    description?: string,\r\n    details?: string,\r\n    sale?: number,\r\n    stock: number,\r\n    src: string,\r\n}\r\n\r\nconst useStyles = makeStyles( () => ( {\r\n    root: {\r\n        paddingTop: 20,\r\n    },\r\n    item: {\r\n        textAlign: 'center'\r\n    },\r\n    loading: {\r\n        height: '90vh',\r\n    },\r\n    icon: {\r\n        fontSize: '25rem',\r\n        opacity: '.3',\r\n    }\r\n} ) );\r\n\r\n//@main overview component, the startpoint of the website\r\nconst Home = () =>\r\n{\r\n    const classes = useStyles();\r\n    const dispatch = useDispatch();\r\n    const areProductsLoaded = useSelector( ( state: any ) =>\r\n    {\r\n        return state.productsAreLoaded;\r\n    } );\r\n    const products = useSelector( ( state: any ) =>\r\n    {\r\n        return state.products;\r\n    } );\r\n\r\n\r\n    //@fetch products API call\r\n    useEffect( () =>\r\n    {\r\n        /*\r\n        @productsActions = object that contains all redux actions that interacts with products\r\n        including API calls that return products objects\r\n        */\r\n        if ( !areProductsLoaded )\r\n            dispatch( productsActions.get() );\r\n\r\n    }, [] );\r\n\r\n    console.log( products );\r\n\r\n    //@list of the products presented in main menu\r\n    const items = products.map( ( product: Product ) =>\r\n        <Grid item xs={ 12 } md={ 4 } key={ product._id }>\r\n            <Card\r\n                _id={ product._id }\r\n                name={ product.name }\r\n                price={ product.price }\r\n                description={ product.description }\r\n                details={ product.details }\r\n                piecesLeft={ product.stock }\r\n                promotion={ product.sale }\r\n                src={ product.src }\r\n                active={ true }\r\n            />\r\n        </Grid>\r\n    );\r\n\r\n    return (\r\n        <>\r\n            {\r\n                !areProductsLoaded\r\n                    ?\r\n                    ( products.length\r\n                        ?\r\n                        <Grid className={ classes.root } container justify='center' alignItems='center' spacing={ 2 }>\r\n                            { items }\r\n                            <Grid item xs={ 12 } md={ 4 }>\r\n                                <CircularProgress />\r\n                            </Grid>\r\n                        </Grid>\r\n                        :\r\n                        <Grid className={ classes.loading } container justify='center' alignItems='center' spacing={ 2 }>\r\n                            <CircularProgress />\r\n                        </Grid> )\r\n                    :\r\n                    products.length\r\n                        ?\r\n                        ( <Grid className={ classes.root } container spacing={ 2 }>\r\n                            { items }\r\n                        </Grid> )\r\n                        :\r\n                        (\r\n                            <Grid className={ classes.loading } container justify='center' alignContent='center'>\r\n                                <SignalCellularNoSimOutlinedIcon className={ classes.icon } />\r\n                            </Grid>\r\n                        )\r\n            }\r\n        </>\r\n\r\n    );\r\n};\r\n\r\nexport default Home;\r\n","\r\n//Form field identifiers\r\nenum FieldSelector\r\n{\r\n    name = \"NAME\",\r\n    desc = \"DESCRIPTION\",\r\n    details = \"DETAILS\",\r\n    prom = \"PROMOTION\",\r\n    price = \"PRICE\",\r\n    stock = \"PIECES\",\r\n    src = \"SRC\",\r\n}\r\n\r\nexport default FieldSelector;","import React from 'react';\r\nimport { Typography } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles( ( theme ) => ( {\r\n    title: {\r\n        display: 'none',\r\n        [ theme.breakpoints.up( 'sm' ) ]: {\r\n            display: 'block',\r\n            minWidth: '180px',\r\n            marginRight: '30px',\r\n        },\r\n        userSelect: 'none',\r\n        fontWeight: 'bold'\r\n    },\r\n} ) );\r\n\r\nconst Logo = () =>\r\n{\r\n    const classes = useStyles();\r\n    return (\r\n        <Typography variant=\"h5\" className={ classes.title }>\r\n            Logo\r\n        </Typography>\r\n    );\r\n};\r\n\r\nexport default Logo;","import React from 'react';\r\nimport { Grid } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Link } from 'react-router-dom';\r\nimport HomeRoundedIcon from '@material-ui/icons/HomeRounded';\r\nimport QueueRoundedIcon from '@material-ui/icons/QueueRounded';\r\n\r\nconst useStyles = makeStyles( ( theme ) => ( {\r\n    List: {\r\n        padding: 0,\r\n        display: 'none',\r\n        [ theme.breakpoints.up( 'md' ) ]: {\r\n            display: 'flex',\r\n        },\r\n        listStyle: 'none',\r\n        margin: 0,\r\n    },\r\n    navLink: {\r\n        '&:hover': {\r\n            padding: '12px 12px 10px 12px',\r\n            borderBottom: '2px solid #262626',\r\n            cursor: 'pointer',\r\n        }\r\n    },\r\n    Link: {\r\n        color: '#fafafa',\r\n        textDecoration: 'none',\r\n        userSelect: 'none',\r\n        padding: '12px',\r\n        '&:hover': {\r\n            padding: '12px 12px 10px 12px',\r\n            borderBottom: '2px solid #fafafa',\r\n            cursor: 'pointer',\r\n        }\r\n    },\r\n\r\n    icon: {\r\n        position: 'relative',\r\n        top: '5px',\r\n    }\r\n} ) );\r\n\r\n\r\n//@routing menu component: here you find all the link in the nav menu\r\nconst NavMenu = () =>\r\n{\r\n    const classes = useStyles();\r\n    return (\r\n        <Grid container>\r\n            <ul className={ classes.List }>\r\n                <Link className={ classes.Link } to='/'>\r\n                    <li><span><HomeRoundedIcon className={ classes.icon } /></span> Home</li>\r\n                </Link>\r\n                <Link className={ classes.Link } to='/admin/add-product'>\r\n                    <li><span><QueueRoundedIcon className={ classes.icon } /></span> Add Product</li>\r\n                </Link>\r\n            </ul >\r\n        </Grid>\r\n    );\r\n};\r\n\r\nexport default NavMenu;","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\n\r\n\r\nconst useStyles = makeStyles( ( theme ) => ( {\r\n    menuButton: {\r\n        marginRight: theme.spacing( 2 ),\r\n        display: 'block',\r\n        [ theme.breakpoints.up( 'md' ) ]: {\r\n            display: 'none'\r\n        }\r\n    },\r\n    hide: {\r\n        display: 'none',\r\n    },\r\n\r\n} ) );\r\n\r\ninterface Props\r\n{\r\n    drowerOpen: () => void;\r\n    open: boolean;\r\n}\r\n\r\nconst DrowerMenuButton: React.FC<Props> = ( props: Props ) =>\r\n{\r\n    const classes = useStyles();\r\n    return (\r\n        <IconButton\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            onClick={ props.drowerOpen }\r\n            edge=\"start\"\r\n            className={ clsx( classes.menuButton, props.open && classes.hide ) }\r\n        >\r\n            <MenuIcon />\r\n        </IconButton>\r\n    );\r\n};\r\n\r\nexport default DrowerMenuButton;","import React from 'react';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport List from '@material-ui/core/List';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nconst drawerWidth = 240;\r\n\r\n\r\n\r\nconst useStyles = makeStyles( ( theme ) => ( {\r\n    root: {\r\n        display: 'flex',\r\n    },\r\n    appBar: {\r\n        transition: theme.transitions.create( [ 'margin', 'width' ], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        } ),\r\n    },\r\n    appBarShift: {\r\n        width: `calc(100% - ${ drawerWidth }px)`,\r\n        marginLeft: drawerWidth,\r\n        transition: theme.transitions.create( [ 'margin', 'width' ], {\r\n            easing: theme.transitions.easing.easeOut,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        } ),\r\n    },\r\n    menuButton: {\r\n        marginRight: theme.spacing( 2 ),\r\n    },\r\n    hide: {\r\n        display: 'none',\r\n    },\r\n    drawer: {\r\n        width: drawerWidth,\r\n        flexShrink: 0,\r\n    },\r\n    drawerPaper: {\r\n        width: drawerWidth,\r\n    },\r\n    drawerHeader: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        padding: theme.spacing( 0, 1 ),\r\n        // necessary for content to be below app bar\r\n        ...theme.mixins.toolbar,\r\n        justifyContent: 'flex-end',\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing( 3 ),\r\n        transition: theme.transitions.create( 'margin', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        } ),\r\n        marginLeft: -drawerWidth,\r\n    },\r\n    contentShift: {\r\n        transition: theme.transitions.create( 'margin', {\r\n            easing: theme.transitions.easing.easeOut,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        } ),\r\n        marginLeft: 0,\r\n    },\r\n    Link: {\r\n        color: '#262626',\r\n        textDecoration: 'none',\r\n        userSelect: 'none'\r\n    }\r\n} ) );\r\n\r\n//@valid:mobile only / @params: open = state of open/close of the side menu() / closeMenu = closing the menu()\r\ninterface Props\r\n{\r\n    open: boolean;\r\n    closeMenu: () => void;\r\n}\r\n\r\n\r\n// @menu that apears on mobile\r\nconst DrowerMenu: React.FC<Props> = ( props: Props ) =>\r\n{\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const { open, closeMenu } = props;\r\n    return (\r\n        <Drawer\r\n            className={ classes.drawer }\r\n            variant=\"persistent\"\r\n            anchor=\"left\"\r\n            open={ open }\r\n            classes={ {\r\n                paper: classes.drawerPaper,\r\n            } }\r\n        >\r\n            <div className={ classes.drawerHeader }>\r\n                <IconButton onClick={ closeMenu }>\r\n                    { theme.direction === 'ltr' ? <ChevronLeftIcon /> : <ChevronRightIcon /> }\r\n                </IconButton>\r\n            </div>\r\n            <Divider />\r\n            <List>\r\n                { [ 'Home', 'Add Product' ].map( ( text ) =>\r\n                {\r\n                    let path = '';\r\n                    switch ( text )\r\n                    {\r\n                        case 'Home':\r\n                            path = '/';\r\n                            break;\r\n                        case 'Add Product':\r\n                            path = '/admin/add-product';\r\n                            break;\r\n                        default: {\r\n                            path = '/nothing';\r\n                        }\r\n                    }\r\n                    return (\r\n                        <Link className={ classes.Link } to={ path } key={ text } onClick={ closeMenu }>\r\n                            <ListItem button key={ text }>\r\n                                <ListItemText primary={ text } />\r\n                            </ListItem>\r\n                        </Link>\r\n                    );\r\n                } ) }\r\n            </List>\r\n            <Divider />\r\n            <List>\r\n                { [ 'Send mail', 'Account' ].map( ( text ) => (\r\n                    <ListItem button key={ text } onClick={ closeMenu }>\r\n                        <ListItemText primary={ text } />\r\n                    </ListItem>\r\n                ) ) }\r\n            </List>\r\n        </Drawer>\r\n    );\r\n};\r\n\r\nexport default DrowerMenu;","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles( ( theme ) => ( {\r\n    grow: {\r\n        display: 'flex',\r\n        [ theme.breakpoints.up( 'lg' ) ]: {\r\n            display: 'none',\r\n        },\r\n        flexGrow: 1,\r\n    }\r\n} ) );\r\n\r\n\r\n//@bassically a flex grow component\r\nconst Spacer = () =>\r\n{\r\n    const classes = useStyles();\r\n    return (\r\n        <div className={ classes.grow }></div>\r\n    );\r\n};\r\n\r\nexport default Spacer;","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Account from './AccountButton';\r\nimport Logo from './Logo';\r\nimport NavMenu from './NavMenu';\r\nimport DrowerMenuButton from './DrowerMenuButton';\r\nimport DrowerMenu from './DrowerMenu';\r\nimport Spacer from './Spacer';\r\n\r\n\r\nconst useStyles = makeStyles( ( theme ) => ( {\r\n  relative: {\r\n    position: 'relative',\r\n    [ theme.breakpoints.up( 'lg' ) ]: {\r\n      minHeight: '48px'\r\n    },\r\n  },\r\n  grow: {\r\n    flexGrow: 1,\r\n  },\r\n  growMobile: {\r\n    display: 'flex',\r\n    [ theme.breakpoints.up( 'lg' ) ]: {\r\n      display: 'none',\r\n    },\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing( 2 ),\r\n  },\r\n\r\n  sectionDesktop: {\r\n    display: 'none',\r\n    [ theme.breakpoints.up( 'md' ) ]: {\r\n      display: 'flex',\r\n    },\r\n  },\r\n  sectionMobile: {\r\n    display: 'flex',\r\n    [ theme.breakpoints.up( 'md' ) ]: {\r\n      display: 'none',\r\n    },\r\n  },\r\n  invisible: {\r\n    display: 'none',\r\n  }\r\n} ) );\r\n\r\nconst GoldAppBar = withStyles( ( theme ) => ( {\r\n  root: {\r\n    color: '#fafafa',\r\n    backgroundColor: '#02203c',\r\n    boxShadow: 'none',\r\n  },\r\n} ) )( AppBar );\r\n\r\ninterface Props\r\n{\r\n  isVisible: boolean;\r\n}\r\n\r\nconst ButtonAppBar: React.FC<Props> = ( props: Props ) =>\r\n{\r\n  const classes = useStyles();\r\n  const { isVisible } = props;\r\n  const [ open, setOpen ] = React.useState( false );\r\n\r\n  const handleDrawerOpen = () =>\r\n  {\r\n    setOpen( true );\r\n  };\r\n\r\n  const handleDrawerClose = () =>\r\n  {\r\n    setOpen( false );\r\n  };\r\n\r\n  return (\r\n    <div className={ isVisible ? '' : classes.invisible } color=\"primary\">\r\n      <GoldAppBar position=\"sticky\">\r\n        <Toolbar className={ classes.relative }>\r\n          <DrowerMenuButton open={ open } drowerOpen={ handleDrawerOpen } />\r\n          <Logo />\r\n          <NavMenu />\r\n          <Spacer />\r\n          <Account />\r\n        </Toolbar>\r\n        <DrowerMenu open={ open } closeMenu={ handleDrawerClose } />\r\n      </GoldAppBar>\r\n    </div >\r\n  );\r\n};\r\n\r\nexport default ButtonAppBar;","import React from 'react';\r\nimport { TextField, Grid, Button } from '@material-ui/core';\r\nimport { makeStyles, Theme } from '@material-ui/core/styles';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport PublishIcon from '@material-ui/icons/Publish';\r\n\r\nimport FieldSelector from '../constants';\r\n\r\n\r\nconst useStyles = makeStyles( ( theme: Theme ) => ( {\r\n    textFieldWrapper: {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n    },\r\n    textField: {\r\n        width: '95%',\r\n        [ theme.breakpoints.up( 'md' ) ]: {\r\n            width: '100%'\r\n        }\r\n    },\r\n    button: {\r\n        margin: theme.spacing( 1 ),\r\n        width: 200\r\n    },\r\n    buttonWrapper: {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n    }\r\n} ) );\r\n\r\ninterface Props\r\n{\r\n    name: string;\r\n    description: string;\r\n    details: string;\r\n    promotion: string | number;\r\n    price: number;\r\n    pieces: number;\r\n    src: string;\r\n    change: ( target: ( HTMLInputElement | HTMLTextAreaElement ), id: FieldSelector ) => void;\r\n    clear: () => void;\r\n    send: ( ev: any ) => void;\r\n}\r\n\r\nconst Form = ( props: Props ) =>\r\n{\r\n    const { name, description, details, promotion, pieces, price, change, clear, send } = props;\r\n\r\n    const classes = useStyles();\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <Grid container spacing={ 1 } justify=\"center\">\r\n            <Grid item xs={ 12 } className={ classes.textFieldWrapper }>\r\n                <TextField\r\n                    className={ classes.textField }\r\n                    label=\"Name\"\r\n                    type=\"text\"\r\n                    value={ name }\r\n                    onChange={ ev => change( ev.target, FieldSelector.name ) }\r\n                />\r\n            </Grid>\r\n            <Grid item xs={ 12 } md={ 6 } className={ classes.textFieldWrapper }>\r\n                <TextField\r\n                    className={ classes.textField }\r\n                    label=\"Price(RON)\"\r\n                    type=\"number\"\r\n                    InputLabelProps={ {\r\n                        shrink: true,\r\n                    } }\r\n                    value={ price }\r\n                    onFocus={ ( ev ) => ev.target.select() }\r\n                    onChange={ ev => change( ev.target, FieldSelector.price ) }\r\n                />\r\n            </Grid>\r\n\r\n            <Grid item xs={ 12 } md={ 6 } className={ classes.textFieldWrapper }>\r\n                <TextField\r\n                    className={ classes.textField }\r\n                    label=\"Promotion(%)\"\r\n                    type=\"number\"\r\n                    value={ promotion }\r\n                    InputLabelProps={ {\r\n                        shrink: true,\r\n                    } }\r\n                    onFocus={ ( ev ) => ev.target.select() }\r\n                    onChange={ ev => change( ev.target, FieldSelector.prom ) }\r\n                />\r\n            </Grid>\r\n\r\n            <Grid item xs={ 12 } className={ classes.textFieldWrapper }>\r\n                <TextField\r\n                    className={ classes.textField }\r\n                    label=\"Pieces\"\r\n                    type=\"number\"\r\n                    value={ pieces }\r\n                    InputLabelProps={ {\r\n                        shrink: true,\r\n                    } }\r\n                    onFocus={ ( ev ) => ev.target.select() }\r\n                    onChange={ ev => change( ev.target, FieldSelector.stock ) }\r\n                />\r\n            </Grid>\r\n\r\n\r\n            <Grid item xs={ 12 } className={ classes.textFieldWrapper }>\r\n                <TextField\r\n                    className={ classes.textField }\r\n                    label=\"Description\"\r\n                    value={ description }\r\n                    onChange={ ev => change( ev.target, FieldSelector.desc ) }\r\n                    rows={ 3 }\r\n                    multiline\r\n                />\r\n            </Grid>\r\n\r\n            <Grid item xs={ 12 } className={ classes.textFieldWrapper }>\r\n                <TextField\r\n                    className={ classes.textField }\r\n                    label=\"Details\"\r\n                    value={ details }\r\n                    onChange={ ev => change( ev.target, FieldSelector.details ) }\r\n                    rows={ 3 }\r\n                    multiline\r\n                />\r\n            </Grid>\r\n\r\n            <Grid item xs={ 12 } className={ classes.textFieldWrapper }>\r\n                <Button\r\n                    variant=\"contained\"\r\n                    component=\"label\"\r\n                >\r\n                    Select File\r\n                    <input\r\n                        type=\"file\"\r\n                        accept=\"image/*\"\r\n                        onChange={ ev => change( ev.target, FieldSelector.src ) }\r\n                        hidden\r\n                    />\r\n                </Button>\r\n            </Grid>\r\n\r\n            <Grid container>\r\n                <Grid item xs={ 6 } className={ classes.buttonWrapper }>\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className={ classes.button }\r\n                        startIcon={ <PublishIcon /> }\r\n                        onClick={ ( ev ) => { send( ev ); } }\r\n                    >\r\n                        Upload\r\n                    </Button>\r\n                </Grid>\r\n\r\n                <Grid item xs={ 6 } className={ classes.buttonWrapper }>\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        color=\"default\"\r\n                        className={ classes.button }\r\n                        startIcon={ <DeleteIcon /> }\r\n                        onClick={ clear }\r\n                    >\r\n                        Clear\r\n                    </Button>\r\n\r\n                </Grid>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n};\r\n\r\nexport default Form;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Grid } from '@material-ui/core';\r\nimport { makeStyles, Theme } from '@material-ui/core/styles';\r\nimport Item from './Item';\r\nimport Form from './Form';\r\nimport Card from '../../ProductCard';\r\nimport { useDispatch } from 'react-redux';\r\nimport AddProductMessages from '../../../api/constants';\r\n\r\n\r\n\r\n//@object that contains all global state product actions(including API calls)\r\nimport { productsActions } from '../../../actions';\r\n\r\n//@enum of commands for form fileds\r\nimport FieldSelector from '../constants';\r\n\r\n\r\nconst useStyles = makeStyles( ( theme: Theme ) => ( {\r\n    root: {\r\n        paddingTop: '3rem',\r\n    }\r\n} ) );\r\n\r\ninterface Product\r\n{\r\n    name: string;\r\n    price: number;\r\n    description?: string;\r\n    details?: string;\r\n    sale?: number;\r\n    stock?: number;\r\n    src: string;\r\n}\r\n\r\ninterface Props\r\n{\r\n\r\n}\r\n\r\n\r\n\r\nconst ProductAdder: React.FC<Props> = ( props: Props ) =>\r\n{\r\n    const classes = useStyles();\r\n    const dispatch = useDispatch();\r\n\r\n    const [ cardName, setCardName ] = useState( '' );\r\n    const [ cardDescription, setCardDescription ] = useState( '' );\r\n    const [ cardDetails, setCardDetails ] = useState( '' );\r\n    const [ cardPromotion, setCardPromotion ] = useState( 0 );\r\n    const [ cardPrice, setCardPrice ] = useState( 0 );\r\n    const [ cardPieces, setCardPieces ] = useState( 0 );\r\n    const [ cardSrc, setCardSrc ] = useState( '' );\r\n\r\n\r\n\r\n    const setSrc = ( file: File ) =>\r\n    {\r\n        const reader = new FileReader();\r\n        if ( file )\r\n        {\r\n            reader.readAsDataURL( file );\r\n            reader.onload = () =>\r\n            {\r\n                const base64 = reader.result;\r\n                setCardSrc( base64.toString() );\r\n            };\r\n        }\r\n\r\n    };\r\n\r\n    // handles all changes in the form and updates the fake product card\r\n    // @params: @ev: the event that provides us the target input\r\n    // @params: @identifier: the string that feeds switch structure witch selects the setState function\r\n    // @params: @forced: a boolean that can bypass in some cases the target grabbing from the eveny(mainly used on src)\r\n    const handleChanges = ( target: HTMLInputElement | HTMLTextAreaElement, identifier: FieldSelector ) =>\r\n    {\r\n        switch ( identifier )\r\n        {\r\n            case FieldSelector.name:\r\n                setCardName( target.value );\r\n                break;\r\n            case FieldSelector.desc:\r\n                setCardDescription( target.value );\r\n                break;\r\n            case FieldSelector.details:\r\n                setCardDetails( target.value );\r\n                break;\r\n            case FieldSelector.prom:\r\n                if ( target.value === '' )\r\n                {\r\n                    setCardPromotion( 0 );\r\n                    break;\r\n                }\r\n                setCardPromotion( parseInt( target.value ) );\r\n                break;\r\n            case FieldSelector.price:\r\n                if ( target.value === '' )\r\n                {\r\n                    setCardPrice( 0 );\r\n                    break;\r\n                }\r\n                setCardPrice( parseInt( target.value ) );\r\n                break;\r\n            case FieldSelector.stock:\r\n                if ( target.value === '' )\r\n                {\r\n                    setCardPieces( 0 );\r\n                    break;\r\n                }\r\n                setCardPieces( parseInt( target.value ) );\r\n                break;\r\n            case FieldSelector.src:\r\n                if ( 'files' in target )\r\n                    setSrc( target.files[ 0 ] );\r\n                break;\r\n        }\r\n\r\n    };\r\n\r\n    // TODO make it abe to send multiple items\r\n    const handleSubmit = ( ev: any ) =>\r\n    {\r\n        ev.preventDefault();\r\n        const newProduct: Product = {\r\n            name: cardName,\r\n            price: cardPrice,\r\n            description: cardDescription,\r\n            details: cardDetails,\r\n            sale: cardPromotion,\r\n            stock: cardPieces,\r\n            src: cardSrc,\r\n        };\r\n\r\n        dispatch( productsActions.multipost( [ newProduct ] ) );\r\n    };\r\n\r\n    const clearProductDetails = () =>\r\n    {\r\n        setCardName( '' );\r\n        setCardPrice( 0 );\r\n        setCardPieces( 0 );\r\n        setCardPromotion( 0 );\r\n        setCardDescription( '' );\r\n        setCardDetails( '' );\r\n        setCardSrc( '' );\r\n    };\r\n\r\n\r\n    return (\r\n        <Grid container spacing={ 3 } className={ classes.root }>\r\n            <Grid item xs={ 12 } md={ 7 }>\r\n                {/* PROTO-DISPLAY */ }\r\n                <Card\r\n                    _id=''\r\n                    name={ cardName }\r\n                    description={ cardDescription }\r\n                    details={ cardDetails }\r\n                    promotion={ cardPromotion }\r\n                    price={ cardPrice }\r\n                    piecesLeft={ cardPieces }\r\n                    src={ cardSrc }\r\n                    active={ false }\r\n                />\r\n            </Grid>\r\n            <Grid item xs={ 12 } md={ 5 }>\r\n                <Form\r\n                    name={ cardName }\r\n                    description={ cardDescription }\r\n                    details={ cardDetails }\r\n                    promotion={ cardPromotion }\r\n                    price={ cardPrice }\r\n                    pieces={ cardPieces }\r\n                    src={ cardSrc }\r\n                    change={ handleChanges }\r\n                    clear={ clearProductDetails }\r\n                    send={ handleSubmit }\r\n                />\r\n            </Grid>\r\n\r\n\r\n\r\n        </Grid>\r\n    );\r\n};\r\n\r\nexport default ProductAdder;\r\n","import React from 'react';\r\nimport { TextField, Grid, Button } from '@material-ui/core';\r\nimport { makeStyles, Theme } from '@material-ui/core/styles';\r\nimport RestoreRoundedIcon from '@material-ui/icons/RestoreRounded';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\n\r\nimport FieldSelector from '../constants';\r\n\r\nconst useStyles = makeStyles( ( theme: Theme ) => ( {\r\n    textFieldWrapper: {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n    },\r\n    textField: {\r\n        width: '95%',\r\n        [ theme.breakpoints.up( 'md' ) ]: {\r\n            width: '100%'\r\n        }\r\n    },\r\n    button: {\r\n        margin: theme.spacing( 1 ),\r\n        width: 200\r\n    },\r\n    buttonWrapper: {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n    }\r\n} ) );\r\n\r\ninterface Props\r\n{\r\n    name: string;\r\n    description: string;\r\n    details: string;\r\n    promotion: string | number;\r\n    price: number;\r\n    pieces: number;\r\n    src: string;\r\n    change: ( target: HTMLInputElement | HTMLTextAreaElement, id: FieldSelector, forced?: boolean ) => void;\r\n    reset: () => void;\r\n    update: ( ev: any ) => void;\r\n\r\n}\r\n\r\nconst Form = ( props: Props ) =>\r\n{\r\n    const { name, description, details, promotion, pieces, price, change, reset, update } = props;\r\n\r\n    const classes = useStyles();\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <Grid container spacing={ 1 } justify=\"center\">\r\n            <Grid item xs={ 12 } className={ classes.textFieldWrapper }>\r\n                <TextField\r\n                    className={ classes.textField }\r\n                    label=\"Name\"\r\n                    type=\"text\"\r\n                    value={ name }\r\n                    onChange={ ev => change( ev.target, FieldSelector.name ) }\r\n                />\r\n            </Grid>\r\n            <Grid item xs={ 12 } md={ 6 } className={ classes.textFieldWrapper }>\r\n                <TextField\r\n                    className={ classes.textField }\r\n                    label=\"Price(RON)\"\r\n                    type=\"number\"\r\n                    InputLabelProps={ {\r\n                        shrink: true,\r\n                    } }\r\n                    value={ price }\r\n                    onFocus={ ( ev ) => ev.target.select() }\r\n                    onChange={ ev => change( ev.target, FieldSelector.price ) }\r\n                />\r\n            </Grid>\r\n\r\n            <Grid item xs={ 12 } md={ 6 } className={ classes.textFieldWrapper }>\r\n                <TextField\r\n                    className={ classes.textField }\r\n                    label=\"Promotion(%)\"\r\n                    type=\"number\"\r\n                    value={ promotion }\r\n                    InputLabelProps={ {\r\n                        shrink: true,\r\n                    } }\r\n                    onFocus={ ( ev ) => ev.target.select() }\r\n                    onChange={ ev => change( ev.target, FieldSelector.prom ) }\r\n                />\r\n            </Grid>\r\n\r\n            <Grid item xs={ 12 } className={ classes.textFieldWrapper }>\r\n                <TextField\r\n                    className={ classes.textField }\r\n                    label=\"Pieces\"\r\n                    type=\"number\"\r\n                    value={ pieces }\r\n                    InputLabelProps={ {\r\n                        shrink: true,\r\n                    } }\r\n                    onFocus={ ( ev ) => ev.target.select() }\r\n                    onChange={ ev => change( ev.target, FieldSelector.stock ) }\r\n                />\r\n            </Grid>\r\n\r\n\r\n            <Grid item xs={ 12 } className={ classes.textFieldWrapper }>\r\n                <TextField\r\n                    className={ classes.textField }\r\n                    label=\"Description\"\r\n                    value={ description }\r\n                    onChange={ ev => change( ev.target, FieldSelector.desc ) }\r\n                    rows={ 3 }\r\n                    multiline\r\n                />\r\n            </Grid>\r\n\r\n            <Grid item xs={ 12 } className={ classes.textFieldWrapper }>\r\n                <TextField\r\n                    className={ classes.textField }\r\n                    label=\"Details\"\r\n                    value={ details }\r\n                    onChange={ ev => change( ev.target, FieldSelector.details ) }\r\n                    rows={ 3 }\r\n                    multiline\r\n                />\r\n            </Grid>\r\n\r\n            <Grid item xs={ 12 } className={ classes.textFieldWrapper }>\r\n                {/* <TextField\r\n                    className={ classes.textField }\r\n                    label=\"Image\"\r\n                    type=\"text\"\r\n                    value={ src }\r\n                    onChange={ ev => change( ev, 'SRC' ) }\r\n                /> */}\r\n\r\n                <Button\r\n                    variant=\"contained\"\r\n                    component=\"label\"\r\n                >\r\n                    Select File\r\n                    <input\r\n                        type=\"file\"\r\n                        accept=\"image/*\"\r\n                        onChange={ ev => change( ev.target, FieldSelector.src ) }\r\n                        hidden\r\n                    />\r\n                </Button>\r\n            </Grid>\r\n\r\n            <Grid container>\r\n                <Grid item xs={ 6 } className={ classes.buttonWrapper }>\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className={ classes.button }\r\n                        startIcon={ <SaveIcon /> }\r\n                        onClick={ ( ev ) => { update( ev ); } }\r\n                    >\r\n                        Save\r\n                    </Button>\r\n                </Grid>\r\n\r\n                <Grid item xs={ 6 } className={ classes.buttonWrapper }>\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        color=\"default\"\r\n                        className={ classes.button }\r\n                        startIcon={ <RestoreRoundedIcon /> }\r\n                        onClick={ reset }\r\n                    >\r\n                        Reset\r\n                    </Button>\r\n\r\n                </Grid>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n};\r\n\r\nexport default Form;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Grid, CircularProgress } from '@material-ui/core';\r\nimport { makeStyles, Theme } from '@material-ui/core/styles';\r\nimport { productsActions } from '../../../actions';\r\nimport axios from 'axios';\r\n\r\nimport Form from './Form';\r\nimport Card from '../../ProductCard';\r\nimport FieldSelector from '../constants';\r\n\r\n\r\ninterface Product\r\n{\r\n    name: string;\r\n    price: number;\r\n    description?: string;\r\n    details?: string;\r\n    sale?: number;\r\n    stock?: number;\r\n    src: string;\r\n}\r\n\r\nconst useStyles = makeStyles( ( theme: Theme ) => ( {\r\n    root: {\r\n        marginTop: '4rem'\r\n    },\r\n    loading: {\r\n        height: '90vh',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        display: 'flex',\r\n    }\r\n} ) );\r\n\r\ninterface Props\r\n{\r\n    match: any;\r\n}\r\n\r\nconst UpdateProduct = ( props: Props ) =>\r\n{\r\n    const { match } = props;\r\n    // const product = useSelector( ( state: any ) => state.products.filter( ( item: any ) => item._id === match.params.id )[ 0 ] );\r\n    const classes = useStyles();\r\n    const dispatch = useDispatch();\r\n\r\n    const [ product, setProduct ] = useState( useSelector( ( state: any ) => state.products.filter( ( item: any ) => item._id === match.params.id )[ 0 ] ) );\r\n    const [ cardName, setCardName ] = useState( product ? product.name : '' );\r\n    const [ cardPrice, setCardPrice ] = useState( product ? product.price : 0 );\r\n    const [ cardDescription, setCardDescription ] = useState( product ? product.description : '' );\r\n    const [ cardDetails, setCardDetails ] = useState( product ? product.details : '' );\r\n    const [ cardPromotion, setCardPromotion ] = useState( product ? product.sale : 0 );\r\n    const [ cardPieces, setCardPieces ] = useState( product ? product.stock : 0 );\r\n    const [ cardSrc, setCardSrc ] = useState( product ? product.src : '' );\r\n\r\n    const getProduct = async () =>\r\n    {\r\n        const response = await axios.get( `/products/${ match.params.id }` );\r\n        return response.data.product;\r\n    };\r\n\r\n    useEffect( () =>\r\n    {\r\n        ( async () =>\r\n        {\r\n            if ( !product )\r\n            {\r\n                const newProduct = await getProduct();\r\n                setProduct( newProduct );\r\n                setCardName( newProduct.name );\r\n                setCardPrice( newProduct.price );\r\n                setCardDescription( newProduct.description );\r\n                setCardDetails( newProduct.details );\r\n                setCardPromotion( newProduct.sale );\r\n                setCardPieces( newProduct.stock );\r\n                setCardSrc( newProduct.src );\r\n            }\r\n        } )();\r\n    }, [] );\r\n\r\n\r\n    const setSrc = ( file: any ) =>\r\n    {\r\n        const reader = new FileReader();\r\n        if ( file )\r\n        {\r\n            reader.readAsDataURL( file );\r\n            reader.onload = () =>\r\n            {\r\n                const base64 = reader.result;\r\n                setCardSrc( base64 );\r\n            };\r\n\r\n        }\r\n    };\r\n\r\n\r\n    // handles all changes in the form and updates the fake product card\r\n    const handleChanges = ( target: HTMLInputElement | HTMLTextAreaElement, identifier: FieldSelector ) =>\r\n    {\r\n        switch ( identifier )\r\n        {\r\n            case FieldSelector.name:\r\n                setCardName( target.value );\r\n                break;\r\n            case FieldSelector.desc:\r\n                setCardDescription( target.value );\r\n                break;\r\n            case FieldSelector.details:\r\n                setCardDetails( target.value );\r\n                break;\r\n            case FieldSelector.prom:\r\n                if ( target.value === '' )\r\n                {\r\n                    setCardPromotion( 0 );\r\n                    break;\r\n                }\r\n                setCardPromotion( parseInt( target.value ) );\r\n                break;\r\n            case FieldSelector.price:\r\n                if ( target.value === '' )\r\n                {\r\n                    setCardPrice( 0 );\r\n                    break;\r\n                }\r\n                setCardPrice( parseInt( target.value ) );\r\n                break;\r\n            case FieldSelector.stock:\r\n                if ( target.value === '' )\r\n                {\r\n                    setCardPieces( 0 );\r\n                    break;\r\n                }\r\n                setCardPieces( parseInt( target.value ) );\r\n                break;\r\n            case FieldSelector.src:\r\n                if ( 'files' in target )\r\n                    setSrc( target.files[ 0 ] );\r\n                break;\r\n        }\r\n\r\n    };\r\n\r\n\r\n    const handleUpdate = ( ev: any ) =>\r\n    {\r\n        ev.preventDefault();\r\n        const updatedProduct: Product = {\r\n            name: cardName,\r\n            price: cardPrice,\r\n            description: cardDescription,\r\n            details: cardDetails,\r\n            sale: cardPromotion,\r\n            stock: cardPieces,\r\n            src: cardSrc,\r\n        };\r\n\r\n        if ( product )\r\n        {\r\n            dispatch( productsActions.update( product._id, updatedProduct ) );\r\n        } else\r\n        {\r\n            dispatch( productsActions.post( updatedProduct ) );\r\n        }\r\n    };\r\n\r\n    const resetProduct = () =>\r\n    {\r\n        setCardName( product.name );\r\n        setCardPrice( product.price );\r\n        setCardPieces( product.stock );\r\n        setCardPromotion( product.sale );\r\n        setCardDescription( product.description );\r\n        setCardDetails( product.details );\r\n        setCardSrc( product.src );\r\n    };\r\n\r\n\r\n    return (\r\n        <>\r\n            {\r\n                product ?\r\n                    <Grid container spacing={ 2 } className={ classes.root }>\r\n                        <Grid item xs={ 12 } md={ 7 }>\r\n                            {/* PROTO-DISPLAY */ }\r\n                            <Card\r\n                                _id={ product._id }\r\n                                name={ cardName }\r\n                                price={ cardPrice }\r\n                                description={ cardDescription }\r\n                                details={ cardDetails }\r\n                                piecesLeft={ cardPieces }\r\n                                promotion={ cardPromotion }\r\n                                src={ cardSrc }\r\n                                active={ false }\r\n                            />\r\n                        </Grid>\r\n\r\n                        <Grid item xs={ 12 } md={ 5 }>\r\n                            <Form\r\n                                name={ cardName }\r\n                                description={ cardDescription }\r\n                                details={ cardDetails }\r\n                                promotion={ cardPromotion }\r\n                                price={ cardPrice }\r\n                                pieces={ cardPieces }\r\n                                src={ cardSrc }\r\n                                change={ handleChanges }\r\n                                reset={ resetProduct }\r\n                                update={ handleUpdate }\r\n                            />\r\n                        </Grid>\r\n                    </Grid> :\r\n                    <Grid container className={ classes.loading }>\r\n                        <CircularProgress />\r\n                    </Grid>\r\n            }\r\n        </>\r\n    );\r\n};\r\n\r\nexport default UpdateProduct;\r\n","import React from 'react';\r\n\r\ninterface Props\r\n{\r\n\r\n}\r\n\r\nconst AccountInfoComponent = ( props: Props ) =>\r\n{\r\n    return (\r\n        <div>\r\n            Account info\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AccountInfoComponent;\r\n","import React from 'react';\r\n\r\ninterface Props\r\n{\r\n\r\n}\r\n\r\nconst LoginComponent = ( props: Props ) =>\r\n{\r\n    return (\r\n        <div>\r\n            Login\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default LoginComponent;\r\n","import React from 'react';\r\n\r\ninterface Props\r\n{\r\n\r\n}\r\n\r\nconst RegisterComponent = ( props: Props ) =>\r\n{\r\n    return (\r\n        <div>\r\n            Register\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default RegisterComponent;\r\n","import MuiAlert, { AlertProps } from '@material-ui/lab/Alert';\r\n\r\nfunction Alert ( props: AlertProps )\r\n{\r\n    return <MuiAlert elevation={ 6 } variant=\"filled\" { ...props } />;\r\n}\r\n\r\nexport { Alert };","import React, { useState, useEffect } from 'react';\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\r\nimport { Grid } from '@material-ui/core';\r\n\r\n//redux\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\n//links\r\nimport PageNotFound from './NotFountComponent';\r\nimport Home from './Home';\r\nimport Nav from './Navigation';\r\nimport AddProduct from './Admin/AddProduct';\r\nimport UpdateProduct from './Admin/UpdateProduct';\r\nimport { AccountInfo, Login, Register } from './User';\r\n\r\n\r\n\r\n//@snackbar imports\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport { Alert } from './Admin/alerts';\r\nimport { snackbarActionManager } from '../actions';\r\n\r\n//@main component that defines the routes\r\nconst Main: React.FC = () =>\r\n{\r\n\r\n    //@snackbar controllers\r\n    const dispatch = useDispatch();\r\n\r\n    const snackInfo = useSelector( ( state: any ) => state.snackbar );\r\n\r\n    const handleSnackbarClose = ( event?: React.SyntheticEvent, reason?: string ) =>\r\n    {\r\n        if ( reason === 'clickaway' )\r\n        {\r\n            return;\r\n        }\r\n        dispatch( snackbarActionManager.hide() );\r\n    };\r\n\r\n\r\n    const [ navVisibility, setNavVisibility ] = useState( true );\r\n\r\n    return (\r\n        <Router>\r\n            <Nav isVisible={ navVisibility } />\r\n            <Grid container>\r\n                <Grid item xs={ false } md={ 1 } lg={ 2 } />\r\n                <Grid item xs={ 12 } md={ 10 } lg={ 8 }>\r\n                    <Switch>\r\n                        <Route exact path='/' component={ Home } />\r\n                        <Route exact path={ '/admin' } component={ Home } />\r\n                        <Route exact path='/admin/add-product' component={ AddProduct } />\r\n                        <Route path='/admin/product/:id' component={ UpdateProduct } />\r\n                        <Route path='/account' component={ AccountInfo } />\r\n                        <Route path='/login' component={ Login } />\r\n                        <Route path='/register' component={ Register } />\r\n                        <Route path='*'>\r\n                            <PageNotFound showNav={ setNavVisibility } />\r\n                        </Route>\r\n                    </Switch>\r\n\r\n\r\n                    <Snackbar\r\n                        open={ snackInfo.open }\r\n                        autoHideDuration={ 4000 }\r\n                        onClose={ handleSnackbarClose }\r\n                        anchorOrigin={ {\r\n                            vertical: 'bottom',\r\n                            horizontal: 'right'\r\n                        } }>\r\n                        <Alert onClose={ handleSnackbarClose } severity={ snackInfo.variant }>\r\n                            { snackInfo.message }\r\n                        </Alert>\r\n                    </Snackbar>\r\n                </Grid>\r\n                <Grid item xs={ false } md={ 1 } lg={ 2 } />\r\n\r\n\r\n            </Grid>\r\n\r\n        </Router>\r\n    );\r\n};\r\n\r\nexport default Main;\r\n","import React, { Component } from 'react';\r\nimport Main from './components/Main';\r\nimport './App.css';\r\n\r\nexport default class App extends Component\r\n{\r\n  render ()\r\n  {\r\n    return (\r\n      <div id=\"anchor\">\r\n        <Main />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import { combineReducers } from 'redux';\r\nimport { authentificationReducer } from './authentificationReducer';\r\nimport { productsReducer, productsAreLoadedReducer } from './productsReducer';\r\nimport { snackbarReducer } from './snackbarReducers';\r\n\r\n// @params: \r\n//@producst: an array state of products saved\r\n//@productsAreLoaded: a boolean state that indicates if we have out products updated form the server or not\r\n//@snackbar: an object state that contains weather is closed or open, the message and the type/variant\r\n\r\nconst reducer = combineReducers( {\r\n    isLogged: authentificationReducer,\r\n    products: productsReducer,\r\n    productsAreLoaded: productsAreLoadedReducer,\r\n    snackbar: snackbarReducer\r\n} );\r\n\r\nexport default reducer;","interface Action\r\n{\r\n    type: string,\r\n    isForced?: boolean;\r\n}\r\n\r\nconst authentificationReducer = ( state: boolean = false, action: Action ) =>\r\n{\r\n    switch ( action.type )\r\n    {\r\n        case \"LOGIN\":\r\n            state = true;\r\n            break;\r\n        case \"LOGOUT\":\r\n            state = false;\r\n            break;\r\n    }\r\n    return state;\r\n};\r\n\r\nexport { authentificationReducer };","interface Action\r\n{\r\n    type: string,\r\n    payload: any,\r\n    isForced?: boolean;\r\n}\r\n\r\n\r\n\r\n//@products state\r\nconst productsReducer = ( state: any[] = [], action: Action ) =>\r\n{\r\n    switch ( action.type )\r\n    {\r\n        case 'GET':\r\n            return action.payload;\r\n        case 'ADD-PRODUCT' || 'ADD-PRODUCTS':\r\n            return [ ...state, action.payload ];\r\n        case 'UPDATE':\r\n            console.log( action.payload );\r\n            return state.map( ( product ) => product._id === action.payload._id ? action.payload : product );\r\n        case 'DELETE':\r\n            return state.filter( ( product ) => product._id !== action.payload );\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n\r\n//@productsAreLoaded state\r\nconst productsAreLoadedReducer = ( state: boolean = false, action: Action ) =>\r\n{\r\n    switch ( action.type )\r\n    {\r\n        case \"LOADED\":\r\n            return true;\r\n        case \"DUMP\":\r\n            return false;\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport { productsReducer, productsAreLoadedReducer };","interface Action\r\n{\r\n    type: string,\r\n    payload: any,\r\n    isForced?: boolean;\r\n}\r\n\r\ninterface SnackInfo\r\n{\r\n    open: boolean,\r\n    message: string,\r\n    variant: string,\r\n}\r\n\r\nconst snackbarReducer = ( state: SnackInfo = { open: false, message: '', variant: 'info' }, action: Action ) =>\r\n{\r\n    switch ( action.type )\r\n    {\r\n        case 'SHOW':\r\n            return { open: true, ...action.payload };\r\n        case 'HIDE':\r\n            return { ...state, open: false };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n\r\nexport { snackbarReducer };","import { createStore, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport reducer from '../reducer';\r\n\r\n\r\nexport const store = createStore( reducer, compose( applyMiddleware( thunk ), ( window as any ).__REDUX_DEVTOOLS_EXTENSION__ &&\r\n    ( window as any ).__REDUX_DEVTOOLS_EXTENSION__() ) );","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { Provider } from 'react-redux';\r\nimport { store } from './store';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={ store }>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById( 'root' )\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}